//--------------------------------------------------------------------------------------------------------------
// Manager Response Rule File
//--------------------------------------------------------------------------------------------------------------

Criterion "ManagerNotPickedUpItem" "ManagerPickedUpItem" "!=1" "required" weight 0
Criterion "IsManagerFriendlyFire" "worldManagerFriendlyFire" "1" "required" weight 0
Criterion "IsNotManagerFriendlyFire" "worldManagerFriendlyFire" "!=1" "required" weight 0
Criterion "IsNotAskedForCoverManager" "ManagerAskForCover" "!=1" "required" weight 0
Criterion "IsNotSaidBattleStationsManager" "worldSaidBattleStationsManager" "!=1" "required" weight 0

Criterion "ManagerNotSaidGrabbingCan" "SaidGrabbingCan" "!=1" "required" weight 0
Criterion "IsNotSaidAlertGiveItemStopManager" "SaidAlertGiveItemStopManager" "!=1" "required" weight 0 // modified talker
Criterion "IsNotSaidAlertGiveItemStopFirstAidManager" "SaidAlertGiveItemStopFirstAidManager" "!=1" "required" weight 0 // modified talker
Criterion "IsNotSaidBeenJockeyedManager" "SaidBeenJockeyedManager" "!=1" "required" weight 0 // modified talker
Criterion "IsNotSaidManagerWitchChasing" "SaidManagerWitchChasing" "!=1" "required" weight 0 // modified talker
Criterion "IsSaidManagerWitchAttacking" "SaidManagerWitchAttacking" "1" "required" weight 0 // modified talker

Criterion "ConceptRandomTalk" "Concept" "RandomTalk" required // added by Agent 47

//Auto-generated blank response for padding out InfoRemarkables
Response _PlayerInfoRemarkableBlankManager
{
	scene "scenes/Manager/blank.vcd"
}

Response RandomTalkManager
{
	
    scene "scenes/Manager/zombiegenericshort18.vcd"   then  NamVet ConceptBlock611 foo:0 -2.646 // Humanity's gonna bounce right back, you watch.
    scene "scenes/Manager/zombiegenericshort11.vcd"   then  self ConceptBlock610 foo:0 -1.557 // Ahhh, this ain't so bad.
	scene "scenes/Manager/generic14.vcd"   then any elevatorShortLaugh foo:0  -0.4 // BELCHE - excuse me
    scene "scenes/Manager/zombiegenericshort18.vcd"   then  teengirl ConceptBlock620 foo:0 -2.646 // Humanity's gonna bounce right back, you watch.
    scene "scenes/Manager/generic20.vcd"   then  biker ConceptBlock624 foo:0 -5.7 // Guys at the office used to laugh when I'd hit the rifle range on my lunch break. Ain't so damn funny now, is it?
    scene "scenes/Manager/generic22.vcd"   then  biker ConceptBlock637 foo:0 -1.809 // How long were you in prison, Francis?
    scene "scenes/Manager/nervouswhislte01.vcd"   then  teengirl ConceptBlock654 foo:0 0.6 // [Nervous Whistle]
    scene "scenes/Manager/zombiegenericlong11.vcd"   then any elevatorShortLaugh foo:0  -5.43 // Any of you guys in the Cub Scouts? Surprisingly ineffective at preparin' you for some shit like this.
    scene "scenes/Manager/hurrah16.vcd"     // I am bad, yes I am bad, YES I AM! WOO!
    scene "scenes/Manager/zombiegenericlong15.vcd"   then  biker ConceptBlock721 foo:0 -8.2 // When things go back to normal, Zoe, Bill-I'm giving you both jobs. Francis, I'm gonna teach your ass how to read.
	scene "scenes/Manager/C6DLC3SECONDSAFEROOM07.vcd"  then namvet C7M3_saferoom003b foo:0 .1 //Bill, did they have TV when you were young?
    scene "scenes/Manager/C6DLC3SECONDSAFEROOM04.vcd"  then namvet C7M3_saferoom003 foo:0 .1 //You know what I miss?  Checking email.  Seeing what's new.
	scene "scenes/Manager/C6DLC3SECONDSAFEROOM08.vcd"  then self C7M3_saferoom004 foo:0 .1 //One thing I'm not gonna miss about civilization? I.T. I will never have to tell another human being to reboot their damn computer.
	scene "scenes/Manager/C6DLC3SECONDSAFEROOM33.vcd"  then teengirl C7M3_saferoom016 foo:0 .1 //Everybody ready to go live on an island in paradise? Man, I cannot wait!
	scene "scenes/Manager/C6DLC3JUMPINGOFFBRIDGE14.vcd" //I love you guys!
    scene "scenes/Manager/WorldSmallTown0212.vcd"  then biker smalltown02_path01c foo:0 -5.1 //Interesting true story. In 1975, the local township - [gets cut off]
}

Rule RandomTalkManager
{
	criteria ConceptRandomTalk IsManager IsTalk IsTalkManager IsNotSpeaking IsWorldTalkManager
	Response RandomTalkManager
}

Response SurvivorVocalizeBackUpQuietManager
{
	scene "scenes/Manager/backupquiet01.vcd"  //Back up.
	scene "scenes/Manager/backupquiet02.vcd"  //Back up, Back up.
	scene "scenes/Manager/backupquiet03.vcd"  //Back up.
    scene "scenes/Manager/backupquiet04.vcd"  //Back up.
}
Rule SurvivorVocalizeBackUpQuietManager
{
	criteria ConceptPlayerBackUpQuiet IsManager IsNotInSafeSpot IsNotInCheckpoint IsTalk IsTalkManager IsWitchPresent SubjectIsNotWitch IsWorldTalkManager
	Response SurvivorVocalizeBackUpQuietManager
}

Response NiceShotReplyManager
{
    scene "scenes/Manager/Thanks01.vcd"  //Thanks.
	scene "scenes/Manager/Thanks02.vcd"  //Thanks.
	scene "scenes/Manager/Thanks03.vcd"  //Thanks, I owe you one.
	scene "scenes/Manager/Thanks04.vcd"  //Thanks.
	scene "scenes/Manager/Thanks07.vcd"  //Thank you.
	scene "scenes/Manager/Thanks08.vcd"  //Thanks, I owe ya a big one.
	scene "scenes/Manager/Thanks09.vcd"  //Thanks a lot.
	scene "scenes/Manager/Thanks10.vcd"  //Whoo, thanks.
	scene "scenes/Manager/Thanks11.vcd"  //Hey, thanks.
	scene "scenes/Manager/C6DLC3INTANKTRAINCAR03.vcd" //You're welcome.
	scene "scenes/Manager/C6DLC3INTANKTRAINCAR04.vcd" //You're welcome.
	scene "scenes/Manager/YouAreWelcome07.vcd"  //Sure.
	scene "scenes/Manager/YouAreWelcome10.vcd"  //My pleasure.
	scene "scenes/Manager/YouAreWelcome16.vcd"  //Sure thing, man.
	scene "scenes/Manager/YouAreWelcome17.vcd"  //Sure
}
Rule NiceShotReplyManager
{
	criteria ConceptNiceShotReply IsNotCoughing IsManager IssuerClose  IsTalk IsTalkManager
	Response NiceShotReplyManager
}

Response PlayerNiceShotManager
{
	scene "scenes/Manager/NiceShot01.vcd" then subject NiceShotReply foo:0 0.1 //Nice shot!
	scene "scenes/Manager/NiceShot02.vcd" then subject NiceShotReply foo:0 0.1 //Oh man, great shot.
	scene "scenes/Manager/NiceShot03.vcd" then subject NiceShotReply foo:0 0.1 //Wooo, nice baby!
	scene "scenes/Manager/NiceShot04.vcd" then subject NiceShotReply foo:0 0.1 //Whoah. Nice shot.
	scene "scenes/Manager/NiceShot05.vcd" then subject NiceShotReply foo:0 0.1 //Nice one!
	scene "scenes/Manager/NiceShot07.vcd" then subject NiceShotReply foo:0 0.1 //Nice shot!
	scene "scenes/Manager/NiceShot08.vcd" then subject NiceShotReply foo:0 0.1 //Great shot!
	scene "scenes/Manager/NiceShot09.vcd" then subject NiceShotReply foo:0 0.1 //POW!
	scene "scenes/Manager/NiceShot10.vcd" then subject NiceShotReply foo:0 0.1 //Oh, HELL yes.
//	scene "scenes/Manager/PlayerTransitionClose04.vcd" then subject NiceShotReply foo:0 0.1 //BOOM-diah
}
Rule PlayerNiceShotManager
{
	criteria ConceptPlayerNiceShot IsNotCoughing IsManager IssuerClose  IsTalk IsTalkManager
	Response PlayerNiceShotManager
}

Response ReviveMeINterruptedManager
{
	scene "scenes/Manager/FallShort01.vcd"  //Wooaaah.
	scene "scenes/Manager/FallShort03.vcd"  //YAH!
	scene "scenes/Manager/FallShort04.vcd"  //YAH!
	scene "scenes/Manager/ReactionStartled01.vcd"  //AHHHH!
	scene "scenes/Manager/ReactionStartled02.vcd"  //Whoah!
	scene "scenes/Manager/ReactionStartled04.vcd"  //Ah ah!
	scene "scenes/Manager/ViolenceAwe01.vcd"  //Whoa!
}
Rule ReviveMeINterruptedManager
{
	criteria ConceptReviveMeInterrupted IsManager
	ApplyContext "ReviveInterrupt:1:2"
	applycontexttoworld
	Response ReviveMeINterruptedManager
}

Response PlayerRevivedByDefibrillatorManager
{
	scene "scenes/Manager/FallShort01.vcd"  //Wooaaah.
	scene "scenes/Manager/FallShort03.vcd"  //YAH!
	scene "scenes/Manager/FallShort04.vcd"  //YAH!
	scene "scenes/Manager/ReactionStartled01.vcd"  //AHHHH!
	scene "scenes/Manager/ReactionStartled02.vcd"  //Whoah!
	scene "scenes/Manager/ReactionStartled04.vcd"  //Ah ah!
}
Rule PlayerRevivedByDefibrillatorManager
{
	criteria ConceptRevivedByDefibrillator IsNotCoughing IsManager
	ApplyContext "TalkManager:1:3"
	applycontexttoworld
	Response PlayerRevivedByDefibrillatorManager
}

Response PlayerRevivedByDefibrillator2Manager
{
	scene "scenes/Manager/Thanks03.vcd" predelay ".5,1.5" then subject PlayerYouAreWelcome foo:0 0.1 //Thanks, I owe you one.
	scene "scenes/Manager/Thanks08.vcd" predelay ".5,1.5" then subject PlayerYouAreWelcome foo:0 0.1 //Thanks, I owe ya a big one.
	scene "scenes/Manager/Thanks10.vcd" predelay ".5,1.5" then subject PlayerYouAreWelcome foo:0 0.1 //Whoo, thanks.
}
Rule PlayerRevivedByDefibrillator2Manager
{
	criteria ConceptRevivedByDefibrillatorDelayed  IsManager
	ApplyContext "TalkManager:1:3"
	applycontexttoworld
	Response PlayerRevivedByDefibrillator2Manager
}

Response SurvivorMournBillManager
{
	scene "scenes/Manager/C6DLC3BILLDIES04.vcd"  //Bill! Goddamnit, I'm going to miss you!
	scene "scenes/Manager/C6DLC3BILLDIES05.vcd"  //Bill! Bill! You can't be dead! You can't be.
	scene "scenes/Manager/GriefVet01.vcd"  //Bill, no!
	scene "scenes/Manager/GriefVet03.vcd"  //Ah Bill. Ah, shit.
	scene "scenes/Manager/GriefVet04.vcd"  //Bill, Bill, no!
	scene "scenes/Manager/GriefVet06.vcd"  //Bill, no!
	scene "scenes/Manager/GriefVet07.vcd"  //Oh no, no, not the old man.
	scene "scenes/Manager/GriefVet08.vcd"  //Ah Bill. Ah, shit.
}
Rule SurvivorMournBillManager
{
	criteria ConceptPlayerSeeDeadPlayer IsNotCoughing IsManager IsDeadNamVet IsNotSaidSomeoneDied IsTalk IsTalkManager IsNotIncapacitated HasNotDefibrillator
	ApplyContext "TalkManager:1:5"
	applycontexttoworld
	Response SurvivorMournBillManager
}

Response SurvivorMournFrancisManager
{
	scene "scenes/Manager/C6DLC3FRANCISDIES02.vcd"  //Fraaaancis!
	scene "scenes/Manager/C6DLC3FRANCISDIES03.vcd"  //I'm gonna miss that guy.
	scene "scenes/Manager/C6DLC3FRANCISDIES04.vcd"  //I'm gonna... I'm gonna miss that guy.
	scene "scenes/Manager/C6DLC3FRANCISDIES05.vcd"  //FRANCIS!
	scene "scenes/Manager/GriefBiker01.vcd"  //Francis!  NO!
	scene "scenes/Manager/GriefBiker03.vcd"  //Oh shit. Shit. Shit shit shit.
	scene "scenes/Manager/GriefBiker04.vcd"  //Francis!  NO!
	scene "scenes/Manager/GriefBiker05.vcd"  //Jesus, Francis!
	scene "scenes/Manager/GriefBiker06.vcd"  //Oh shit. Shit. Shit shit shit.
	scene "scenes/Manager/GriefBiker07.vcd"  //Jesus Christ, Francis, no, Francis!
}
Rule SurvivorMournFrancisManager
{
	criteria ConceptPlayerSeeDeadPlayer IsNotCoughing IsManager IsDeadBiker IsNotSaidSomeoneDied IsTalk IsTalkManager IsNotIncapacitated HasNotDefibrillator
	ApplyContext "TalkManager:1:5"
	applycontexttoworld
	Response SurvivorMournFrancisManager
}

Response SurvivorMournZoeyManager
{
    scene "scenes/Manager/C6DLC3ZOEYDIES04.vcd"  //Ah Damnit, Zoey's dead!
	scene "scenes/Manager/C6DLC3ZOEYDIES05.vcd"  //Not Zoey!
	scene "scenes/Manager/C6DLC3ZOEYDIES01.vcd"  //Oh my god! Zoey!
//	scene "scenes/Manager/GriefFemaleGeneric02.vcd"  //Oh this is bad - she's dead.
	scene "scenes/Manager/GriefTeengirl01.vcd"  //Ah! Zoey!
	scene "scenes/Manager/GriefTeengirl02.vcd"  //ZOEY! Goddamn it.
	scene "scenes/Manager/GriefTeengirl03.vcd"  //Noo, oh ho ho, ZOEY!
	scene "scenes/Manager/GriefTeengirl04.vcd"  //Goddamn it zoey wakeup
	scene "scenes/Manager/GriefTeengirl05.vcd"  //Ah! Zoey!
	scene "scenes/Manager/GriefTeengirl06.vcd"  //Zoey!
	scene "scenes/Manager/GriefTeengirl07.vcd"  //Damn Zoey
	scene "scenes/Manager/GriefTeengirl08.vcd"  //Zoey, Zoey Goddamnit
}
Rule SurvivorMournZoeyManager
{
	criteria ConceptPlayerSeeDeadPlayer IsNotCoughing IsManager IsDeadTeenGirl IsNotSaidSomeoneDied IsTalk IsTalkManager IsNotIncapacitated HasNotDefibrillator
	ApplyContext "TalkManager:1:5"
	applycontexttoworld
	Response SurvivorMournZoeyManager
}


//--------------------------------------------------------------------------------------------------------------
// At Top
//--------------------------------------------------------------------------------------------------------------
Response PlayerRemarkFarm01_path09Manager
{
	scene "scenes/Manager/SafeSpotAhead04.vcd"  then any SafeSpotAheadResponse foo:0 0 //Safe house ahead!
	scene "scenes/Manager/SafeSpotAhead05.vcd"  then any SafeSpotAheadResponse foo:0 0 //There's the safe house!
	scene "scenes/Manager/SafeSpotAhead07.vcd"  then any SafeSpotAheadResponse foo:0 0 //Safe house up ahead!
}
Rule PlayerRemarkFarm01_path09Manager
{
	criteria ConceptRemark IsManager IsFarm01_path09 IsNotSaidFarm01_path09 IsNotCoughing IsTalk IsTalkManager IsSubjectNear1500
	ApplyContext "SaidFarm01_path09:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm01_path09Manager
}

Response PlayerRemarkSmalltown03_path14Manager
{
	scene "scenes/Manager/SafeSpotAhead07.vcd"  then any SafeSpotAheadResponse foo:0 0 //Safe house up ahead!
}
Rule PlayerRemarkSmalltown03_path14Manager
{
	criteria ConceptRemark IsManager IsSmalltown03_path14 IsNotSaidSmalltown03_path14 IsNotCoughing IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "SaidSmalltown03_path14:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown03_path14Manager
}


//--------------------------------------------------------------------------------------------------------------
// AutoResponder
//--------------------------------------------------------------------------------------------------------------
Response ThanksGotItemManager
{
	scene "scenes/Manager/Thanks01.vcd"  //Thanks.
	scene "scenes/Manager/Thanks02.vcd"  //Thanks.
}
Rule ThanksGotItemManager
{
	criteria IsAwardConcept IsSharingSubject IsNotCoughing  SubjectIsManager IsTalk IsTalkManager
	Response ThanksGotItemManager
}


//--------------------------------------------------------------------------------------------------------------
// AwardSpeech
//--------------------------------------------------------------------------------------------------------------
Response HealThanksManager
{
	scene "scenes/Manager/Thanks03.vcd" predelay ".2,.5" then Subject PlayerYouAreWelcome foo:0 0 //Thanks, I owe you one.
	scene "scenes/Manager/Thanks08.vcd" predelay ".2,.5" then Subject PlayerYouAreWelcome foo:0 0 //Thanks, I owe ya a big one.
	scene "scenes/Manager/Thanks09.vcd" predelay ".2,.5" then Subject PlayerYouAreWelcome foo:0 0 //Thanks a lot.
	scene "scenes/Manager/Thanks10.vcd" predelay ".2,.5" then Subject PlayerYouAreWelcome foo:0 0 //Whoo, thanks.
	scene "scenes/Manager/C6DLC3JUMPINGOFFBRIDGE14.vcd" predelay ".2,.5" then Subject PlayerYouAreWelcome foo:0 0 //I love you guys!
	scene "scenes/Manager/C6DLC3JUMPINGOFFBRIDGE15.vcd" predelay ".2,.5" then Subject PlayerYouAreWelcome foo:0 0 //I love you guys!
}
Rule HealThanksManager
{
	criteria ConceptHealedByFriend IsNotCoughing  IsManager IsTalk IsTalkManager SubjectIsNotManager
	ApplyContext "TalkManager:1:2"
	Response HealThanksManager
}

Response ReviveThanksManager
{
	scene "scenes/Manager/Thanks03.vcd" predelay ".2,.5" then Subject PlayerYouAreWelcome foo:0 0 //Thanks, I owe you one.
	scene "scenes/Manager/Thanks08.vcd" predelay ".2,.5" then Subject PlayerYouAreWelcome foo:0 0 //Thanks, I owe ya a big one.
	scene "scenes/Manager/Thanks09.vcd" predelay ".2,.5" then Subject PlayerYouAreWelcome foo:0 0 //Thanks a lot.
	scene "scenes/Manager/Thanks10.vcd" predelay ".2,.5" then Subject PlayerYouAreWelcome foo:0 0 //Whoo, thanks.
	scene "scenes/Manager/C6DLC3JUMPINGOFFBRIDGE14.vcd" predelay ".2,.5" then Subject PlayerYouAreWelcome foo:0 0 //I love you guys!
	scene "scenes/Manager/C6DLC3JUMPINGOFFBRIDGE15.vcd" predelay ".2,.5" then Subject PlayerYouAreWelcome foo:0 0 //I love you guys!
}
Rule ReviveThanksManager
{
	criteria ConceptRevivedByFriend  IsNotCoughing  IsManager
	ApplyContext "TalkManager:1:2"
	Response ReviveThanksManager
}

Response ReviveThanksBillManager
{
	scene "scenes/Manager/C6DLC3INTRO21.vcd" predelay ".2,.5" then Subject PlayerYouAreWelcome foo:0 0 //Well, thanks, man!
	scene "scenes/Manager/Thanks05.vcd" predelay ".2,.5" then Subject PlayerYouAreWelcome foo:0 0 //Thanks, man.
	scene "scenes/Manager/Thanks12.vcd" predelay ".2,.5" then Subject PlayerYouAreWelcome foo:0 0 //Thanks, Dog.
	scene "scenes/Manager/ToTheRescueThanks02.vcd" predelay ".2,.5" then Subject PlayerYouAreWelcome foo:0 0 //Thanks, man!
}
Rule ReviveThanksBillManager
{
	criteria ConceptRevivedByFriend  IsNotCoughing  IsManager SubjectIsNamVet
	ApplyContext "TalkManager:1:2"
	Response ReviveThanksBillManager
}

Response ReviveThanksFrancisManager
{
	scene "scenes/Manager/C6DLC3INTRO22.vcd" predelay ".2,.5" then Subject PlayerYouAreWelcome foo:0 0 //Thanks, man!
	scene "scenes/Manager/Thanks06.vcd" predelay ".2,.5" then Subject PlayerYouAreWelcome foo:0 0 //Thanks, man.
	scene "scenes/Manager/Thanks14.vcd" predelay ".2,.5" then Subject PlayerYouAreWelcome foo:0 0 //Thanks, Playa.
	scene "scenes/Manager/ToTheRescueThanks03.vcd" predelay ".2,.5" then Subject PlayerYouAreWelcome foo:0 0 //Yo, thanks, man.
}
Rule ReviveThanksFrancisManager
{
	criteria ConceptRevivedByFriend  IsNotCoughing  IsManager SubjectIsBiker 
	ApplyContext "TalkManager:1:2"
	Response ReviveThanksFrancisManager
}

Response ReviveThanksZoeyManager
{
	scene "scenes/Manager/Thanks13.vcd" predelay ".2,.5" then Subject PlayerYouAreWelcome foo:0 0 //Girl, thanks
}
Rule ReviveThanksZoeyManager
{
	criteria ConceptRevivedByFriend  IsNotCoughing  IsManager SubjectIsTeenGirl
	ApplyContext "TalkManager:1:2"
	Response ReviveThanksZoeyManager
}


//--------------------------------------------------------------------------------------------------------------
// Bots
//--------------------------------------------------------------------------------------------------------------
Response BotAttentionBattleManager
{
	scene "scenes/Manager/AskReady03.vcd"  //Ready for this?
	scene "scenes/Manager/AskReady05.vcd"  //Waddya say, we ready?
	scene "scenes/Manager/WorldAirportNPC07.vcd"  //Okay, let's do it!
}
Rule BotAttentionBattleManager
{
	criteria ConceptSurvivorBotNoteHumanAttention IsNotCoughing IsNotSpeaking IsManager IsNotBotAttention IsTalk IsTalkManager IsNotIncapacitated IsInBattlefield TimeSinceGroupInCombat20
	ApplyContext "SaidBotAttention:1:30"
	applycontexttoworld
	Response BotAttentionBattleManager
}

Response BotHurrahAlsoManager
{
	scene "scenes/Manager/Hurrah02.vcd"  //Woo baby, Aw riiiight!
	scene "scenes/Manager/Hurrah03.vcd"  //Hell yeah.
	scene "scenes/Manager/Hurrah14.vcd"  //YEAH!
	scene "scenes/Manager/PositiveNoise02.vcd"  //[Improv non-verbal pleasure & interest sounds]
	scene "scenes/Manager/PositiveNoise03.vcd"  //[Improv non-verbal pleasure & interest sounds]
	scene "scenes/Manager/PositiveNoise04.vcd"  //[Improv non-verbal pleasure & interest sounds]
	scene "scenes/Manager/ReactionPositive09.vcd"  //Sweet Baby!
	scene "scenes/Manager/ReactionPositive10.vcd"  //That's what I'm talkin' about
	scene "scenes/Manager/Taunt03.vcd"  //Yeah, baby, Yeah!
	scene "scenes/Manager/Taunt06.vcd"  //Helll yeah, Hell yeah!
}
Rule BotHurrahAlsoManager
{
	criteria ConceptHurrahAlso IsNotCoughing IsNotSpeaking IsManager IsTalk IsTalkManager IsNotSaidHurrahAlso IsBotIsAvailable
	ApplyContext "SaidHurrahAlso:1:90"
	applycontexttoworld
	Response BotHurrahAlsoManager
}

Response BotNoteHumanAttentionManager
{
	scene "scenes/Manager/AnswerReady02.vcd"  //Let's do it!
	scene "scenes/Manager/AnswerReady04.vcd"  //Come on, let's do it!
	scene "scenes/Manager/AskReady05.vcd"  //Waddya say, we ready?
	scene "scenes/Manager/AskReady09.vcd"  //I'm ready, you ready?
}
Rule BotNoteHumanAttentionManager
{
	criteria ConceptSurvivorBotNoteHumanAttention IsNotCoughing IsNotSpeaking IsManager IsNotBotAttention IsTalk IsTalkManager IsNotIncapacitated IsInSafeSpot
	ApplyContext "SaidBotAttention:1:30"
	applycontexttoworld
	Response BotNoteHumanAttentionManager
}

Response BotReassureComingManager
{
	scene "scenes/Manager/Yes01.vcd" predelay "1,3.5" //Allright.
	scene "scenes/Manager/Yes02.vcd" predelay "1,3.5" //Yeah.
	scene "scenes/Manager/Yes05.vcd" predelay "1,3.5" //Okay.
	scene "scenes/Manager/Yes07.vcd" predelay "1,3.5" //Yeah, I'm cool with that
	scene "scenes/Manager/Yes08.vcd" predelay "1,3.5" //Yes
	scene "scenes/Manager/Yes09.vcd" predelay "1,3.5" //Cool
}
Rule BotReassureComingManager
{
	criteria ConceptSurvivorBotReassureComing IsNotCoughing IsNotSpeaking IsManager IsTalk IsTalkManager
	Response BotReassureComingManager
}

Response BotReassureNearbyManager
{
	scene "scenes/Manager/ImWithYou01.vcd" predelay "1,3.5" //Don't worry, I got your back.
	scene "scenes/Manager/ImWithYou02.vcd" predelay "1,3.5" //Right behind you.
	scene "scenes/Manager/ImWithYou03.vcd" predelay "1,3.5" //I'm with ya.
}
Rule BotReassureNearbyManager
{
	criteria ConceptSurvivorBotReassureNearby IsNotCoughing IsNotSpeaking IsManager IsTalk IsTalkManager
	Response BotReassureNearbyManager
}

Response BotYesReadyManager
{
	scene "scenes/Manager/AskReady08.vcd" predelay "1,3.5" //Yeah, let's get ready
	scene "scenes/Manager/Yes01.vcd" predelay "1,3.5" //Allright.
	scene "scenes/Manager/Yes02.vcd" predelay "1,3.5" //Yeah.
	scene "scenes/Manager/Yes05.vcd" predelay "1,3.5" //Okay.
	scene "scenes/Manager/Yes07.vcd" predelay "1,3.5" //Yeah, I'm cool with that
	scene "scenes/Manager/Yes08.vcd" predelay "1,3.5" //Yes
	scene "scenes/Manager/Yes09.vcd" predelay "1,3.5" //Cool
	scene "scenes/Manager/WorldAirportNPC07.vcd" predelay "1,3.5" //Okay, let's do it!
}
Rule BotYesReadyManager
{
	criteria ConceptSurvivorBotYesReady IsNotCoughing IsNotSpeaking IsManager IsTalk IsTalkManager
	Response BotYesReadyManager
}

Response PlayerToTheRescueManager
{
	scene "scenes/Manager/ToTheRescue01.vcd" predelay "0.75,1.5" //Hold on, I'm on my way!
	scene "scenes/Manager/ToTheRescue02.vcd" predelay "0.75,1.5" //Look, I'm coming!
	scene "scenes/Manager/ToTheRescue03.vcd" predelay "0.75,1.5" //Don't worry, I'm on my way!
}
Rule PlayerToTheRescueManager
{
	criteria ConceptSurvivorBotMovingToReviveFriend IsNotCoughing IsManager IsTalk IsTalkManager NotInCombat IsNotSaidRescueComing IsDistanceSubjectO600
	ApplyContext "SaidRescueComing:1:20"
	applycontexttoworld
	Response PlayerToTheRescueManager
}

Response SurvivorMovingToBattleStationManager
{
	scene "scenes/Manager/AnswerReady01.vcd"  //Ready!
	scene "scenes/Manager/AnswerReady02.vcd"  //Let's do it!
	scene "scenes/Manager/AnswerReady03.vcd"  //Hit it!
	scene "scenes/Manager/AnswerReady04.vcd"  //Come on, let's do it!
}
Rule SurvivorMovingToBattleStationManager
{
	criteria ConceptBotMovingToBattleStation IsNotCoughing IsNotSpeaking IsManager IsTalk IsTalkManager IsSaidCreshendoStartNear IsNotSaidBattleStationsManager
	ApplyContext "SaidBattleStationsManager:1:30"
	applycontexttoworld
	Response SurvivorMovingToBattleStationManager
}

Response RespondAffirmativeManager
{
	scene "scenes/Manager/Yes01.vcd"  //Allright.
	scene "scenes/Manager/Yes05.vcd"  //Okay.
}
Rule RespondAffirmativeManager
{
	criteria ConceptRespondAffirmative IssuerMediumClose IsNotCoughing NotInCombat isManager IsTalkManager
	Response RespondAffirmativeManager
}


//--------------------------------------------------------------------------------------------------------------
// Call For Rescue
//--------------------------------------------------------------------------------------------------------------
Response PlayerCallForRescueManager
{
	speak "Player.Manager_CallForRescue01" noscene //Come on, let me out!  I can give you a hand!// test Vcd's name is correct.
	speak "Player.Manager_CallForRescue02" noscene //Come on, let me out!  I can help!
	speak "Player.Manager_CallForRescue03" noscene //I'm trapped in here, let me out!
	speak "Player.Manager_LostCall01" noscene  //Hello?
	speak "Player.Manager_LostCall03" noscene  //Where is everyone?
	speak "Player.Manager_LostCall04" noscene  //Is anyone there?
	speak "Player.Manager_LostCall05" noscene  //Where'd everyone get to?
	speak "Player.Manager_LostCall06" noscene  //Can anyone hear me?
}
Rule PlayerCallForRescueManager
{
	criteria ConceptCallForRescue IsManager IsTalk IsTalkManager
	Response PlayerCallForRescueManager
}


//--------------------------------------------------------------------------------------------------------------
// DLC2 - Crescendo
//--------------------------------------------------------------------------------------------------------------
Response crashHowitzerNagManager
{
	scene "scenes/Manager/DLC2M1GunNag02.vcd" then any RespondAffirmative foo: 0 0.1 //Someone needs to fire that big ass gun.
}
Rule crashHowitzerNagManager
{
	criteria ConceptTalkIdle IsManager IsNotCoughing NotInCombat IsTalk IsTalkManager NotHowitzerFired IsHowitzerNag IsHowitzerSeen NotNagCrashManager NotSurvivalMode
	ApplyContext "NagHowitzer:1:30,NagCrashManager:1:32"
	applycontexttoworld
	Response crashHowitzerNagManager
}

Response HowitzerBurnEnd00Manager
{
	scene "scenes/Manager/DLC2M1GunEnd03.vcd" then any PlayerYellRun foo:0 0 //The fire's out! Let's get across that bridge!
}
Rule HowitzerBurnEnd00Manager
{
	criteria ConceptHowitzerBurnEnd00 IsManager NotCrash01ThroughBridge NotSurvivalMode
	Response HowitzerBurnEnd00Manager
}


//--------------------------------------------------------------------------------------------------------------
// DLC2 - Finale
//--------------------------------------------------------------------------------------------------------------
Response CrashFinaleGenerator2OnSpkManager
{
	scene "scenes/Manager/ReactionPositive09.vcd"  //Sweet Baby!
}
Rule CrashFinaleGenerator2OnSpkManager
{
	criteria ConceptCrashFinaleGenerator2OnSpk IsManager
	Response CrashFinaleGenerator2OnSpkManager
}

Response CrashFinaleGenerator2SpeakManager
{
	scene "scenes/Manager/DLC2M2FinaleButtonPressGen201.vcd"  //Come on! Hurry up, hurry up! I'm starting not to like this generator...
	scene "scenes/Manager/DLC2M2FinaleButtonPressGen202.vcd"  //Oh god. Hurry up, hurry up. Goddamit generator, START!
	scene "scenes/Manager/DLC2M2FinaleButtonPressGen301.vcd"  //Start. Start. Damn generator. Start, dammit, start!
}
Rule CrashFinaleGenerator2SpeakManager
{
	criteria ConceptCrashFinaleGenerator2Speak IsManager
	Response CrashFinaleGenerator2SpeakManager
}

Response CrashFinaleGeneratorBreakSpkManager
{
	scene "scenes/Manager/DLC2M2FinaleBreak101.vcd"  //The generator's off!
	scene "scenes/Manager/DLC2M2FinaleBreak201.vcd"  //The damn generator broke again!
}
Rule CrashFinaleGeneratorBreakSpkManager
{
	criteria ConceptCrashFinaleGeneratorBreakSpk IsManager NotSurvivalMode
	Response CrashFinaleGeneratorBreakSpkManager
}

Response CrashFinaleGeneratorNagManager
{
	scene "scenes/Manager/DLC2M2FinaleBreak102.vcd"  //We need to restart the generator!
	scene "scenes/Manager/DLC2M2FinaleBreak202.vcd"  //Someone needs to restart the generator!
}
Rule CrashFinaleGeneratorNagManager
{
	criteria ConceptTalkIdle IsManager IsNotCoughing NotInCombat IsTalk IsTalkManager IsCrashFinaleGeneratorBroken NotCrashFinaleSaidGeneratorBroken NotNagCrashManager NotSurvivalMode
	ApplyContext "CrashFinaleSaidGeneratorBroken:1:15,NagCrashManager:1:25"
	applycontexttoworld
	Response CrashFinaleGeneratorNagManager
}

Response CrashFinaleGeneratorSpeakManager
{
	scene "scenes/Manager/DLC2M2FinaleButtonPressGen101.vcd"  //Allright, allright. Come onnnn. Come on, catch.
	scene "scenes/Manager/DLC2M2FinaleButtonPressGen102.vcd"  //Allright, allright. Come on baby, start for me.
}
Rule CrashFinaleGeneratorSpeakManager
{
	criteria ConceptCrashFinaleGeneratorSpeak IsManager
	Response CrashFinaleGeneratorSpeakManager
}

Response CrashFinaleGenUnPressSpeakManager
{
	scene "scenes/Manager/Swears10.vcd"  //Dammit.
}
Rule CrashFinaleGenUnPressSpeakManager
{
	criteria ConceptCrashFinaleGeneratorUnPressSpeak IsManager
	Response CrashFinaleGenUnPressSpeakManager
}

Response CrashFinaleTruckNagManager
{
	scene "scenes/Manager/ArriveTruck01.vcd" then any PlayerYellRun foo:0 0 //Get to the truck! TO THE TRUCK!
	scene "scenes/Manager/ArriveTruck02.vcd" then any PlayerYellRun foo:0 0 //GET TO THE TRUCK!
}
Rule CrashFinaleTruckNagManager
{
	criteria ConceptTalkIdle IsManager IsNotCoughing IsCrashFinaleTruckReady NotCrashFinaleTruckNagPaused NotNagCrashManager NotSurvivalMode
	ApplyContext "CrashFinaleTruckNagPaused:1:6,NagCrashManager:1:11"
	applycontexttoworld
	Response CrashFinaleTruckNagManager
}

Response CrashFinaleTruckReadySpkManager
{
	scene "scenes/Manager/DLC2M2FinaleTruckDown01.vcd" then any PlayerYellRun foo:0 0 //It's down! Get in!
}
Rule CrashFinaleTruckReadySpkManager
{
	criteria ConceptCrashFinaleTruckReadySpk IsManager IsNotCoughing NotSurvivalMode
	Response CrashFinaleTruckReadySpkManager
}

Response CrashFinaleTruckResp01Manager
{
	scene "scenes/Manager/DLC2M2FinaleSetup02.vcd"  //If we power up the generator, we can bring down the lift.
}
Rule CrashFinaleTruckResp01Manager
{
	criteria ConceptCrashFinaleTruckResp01 IsManager
	Response CrashFinaleTruckResp01Manager
}

Response IntroCrashWalkingBManager
{
	scene "scenes/Manager/DLC2Intro13.vcd"  //I got a baaad feeling about this. Ohp. It passed. I think we're gonna be JUST fine.
}
Rule IntroCrashWalkingBManager
{
	criteria ConceptIntroCrashWalkingB IsManager
	Response IntroCrashWalkingBManager
}

Response PlayerRemarkcrashcourse02_path14Manager
{
	scene "scenes/Manager/DLC2M2Directional05.vcd"  then any CrashFinaleTruckResp01 foo:0 0.05 //Cool truck!
	scene "scenes/Manager/DLC2M2Directional06.vcd"  then any CrashFinaleTruckResp02 foo:0 0.05 //Looks like they were working here for awhile!
}
Rule PlayerRemarkcrashcourse02_path14Manager
{
	criteria ConceptRemark IsManager Iscrashcourse02_path14 IsNotSaidcrashcourse02_path14 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300 NotCrash02FinaleStarted NotSurvivalMode
	ApplyContext "Saidcrashcourse02_path14:1:0"
	applycontexttoworld
	Response PlayerRemarkcrashcourse02_path14Manager
}


//--------------------------------------------------------------------------------------------------------------
// DLC2 - Info Remarkable
//--------------------------------------------------------------------------------------------------------------
Response CrashCourseR04Manager
{
	scene "scenes/Manager/DLC2ForLease01.vcd"  //I'll be damned. Francis, when'd you learn to read?
}
Rule CrashCourseR04Manager
{
	criteria ConceptCrashCourseR04 IsManager IsBikerNear500
	Response CrashCourseR04Manager
}

Response CrashCourseR06Manager
{
	scene "scenes/Manager/DLC2Riverside03.vcd"  then biker CrashCourseR07 foo:0 0.05 //Canada? Francis, we're in Pennsylvania.
}
Rule CrashCourseR06Manager
{
	criteria ConceptCrashCourseR06 IsManager
	Response CrashCourseR06Manager
}

Response PlayerRemarkcrashcourse01_path04Manager
{
	scene "scenes/Manager/DLC2M1Goal01.vcd"  //If we can get on that bridge, I'm sure we can follow the train tracks out of town.
}
Rule PlayerRemarkcrashcourse01_path04Manager
{
	criteria ConceptRemark IsManager Iscrashcourse01_path04 IsNotSaidcrashcourse01_path04 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear1000
	ApplyContext "Saidcrashcourse01_path04:1:0"
	applycontexttoworld
	Response PlayerRemarkcrashcourse01_path04Manager
}

Response PlayerRemarkcrashcourse01_path05Manager
{
	scene "scenes/Manager/DLC2M1Directional03.vcd"  //That truck is blocking the alley.
}
Rule PlayerRemarkcrashcourse01_path05Manager
{
	criteria ConceptRemark IsManager Iscrashcourse01_path05 IsNotSaidcrashcourse01_path05 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "Saidcrashcourse01_path05:1:0"
	applycontexttoworld
	Response PlayerRemarkcrashcourse01_path05Manager
}

Response PlayerRemarkcrashcourse01_path06Manager
{
	scene "scenes/Manager/DLC2M1Searching02.vcd"  //Anything in this warehouse?
}
Rule PlayerRemarkcrashcourse01_path06Manager
{
	criteria ConceptRemark IsManager Iscrashcourse01_path06 IsNotSaidcrashcourse01_path06 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "Saidcrashcourse01_path06:1:0"
	applycontexttoworld
	Response PlayerRemarkcrashcourse01_path06Manager
}

Response PlayerRemarkcrashcourse01_path13Manager
{
	scene "scenes/Manager/DLC2M1Directional06.vcd"  //We can cross the river on that bridge.
}
Rule PlayerRemarkcrashcourse01_path13Manager
{
	criteria ConceptRemark IsManager Iscrashcourse01_path13 IsNotSaidcrashcourse01_path13 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear400 NotSurvivalMode
	ApplyContext "Saidcrashcourse01_path13:1:0"
	applycontexttoworld
	Response PlayerRemarkcrashcourse01_path13Manager
}

Response PlayerRemarkcrashcourse01_path14Manager
{
	scene "scenes/Manager/DLC2M1Directional08.vcd"  //We can get back up over here!
}
Rule PlayerRemarkcrashcourse01_path14Manager
{
	criteria ConceptRemark IsManager Iscrashcourse01_path14 IsNotSaidcrashcourse01_path14 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear400 NotSurvivalMode
	ApplyContext "Saidcrashcourse01_path14:1:0"
	applycontexttoworld
	Response PlayerRemarkcrashcourse01_path14Manager
}

Response PlayerRemarkcrashcourse01_path17Manager
{
	scene "scenes/Manager/DLC2M1Directional10.vcd"  //How are we going to get past the barricade?
	scene "scenes/Manager/DLC2M1GunNag01.vcd"  //We can fire that big ass gun to break the barricade!
}
Rule PlayerRemarkcrashcourse01_path17Manager
{
	criteria ConceptRemark IsManager Iscrashcourse01_path17 IsNotSaidcrashcourse01_path17 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300 NotHowitzerFired NotSurvivalMode
	ApplyContext "Saidcrashcourse01_path17:1:0"
	applycontexttoworld
	Response PlayerRemarkcrashcourse01_path17Manager
}

Response PlayerRemarkcrashcourse01_path18Manager
{
	scene "scenes/Manager/DLC2M1GunNag01.vcd"  //We can fire that big ass gun to break the barricade!
}
Rule PlayerRemarkcrashcourse01_path18Manager
{
	criteria ConceptRemark IsManager Iscrashcourse01_path18 IsNotSaidcrashcourse01_path18 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300 NotHowitzerFired NotSurvivalMode
	ApplyContext "Saidcrashcourse01_path18:1:0,HowitzerSeen:1:0,NagHowitzer:1:30"
	applycontexttoworld
	Response PlayerRemarkcrashcourse01_path18Manager
}

Response PlayerRemarkcrashcourse01_path20Manager
{
	scene "scenes/Manager/DLC2M1Directional11.vcd"  //Riverside! We're headed the right way!
	scene "scenes/Manager/DLC2Riverside01.vcd"  then Biker CrashCourseR08 foo:0 0.05 //If we can just make it to Riverside, we are HOME FREE, guys...
}
Rule PlayerRemarkcrashcourse01_path20Manager
{
	criteria ConceptRemark IsManager Iscrashcourse01_path20 IsNotSaidcrashcourse01_path20 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300
	ApplyContext "Saidcrashcourse01_path20:1:0"
	applycontexttoworld
	Response PlayerRemarkcrashcourse01_path20Manager
}

Response PlayerRemarkcrashcourse01_path24Manager
{
	scene "scenes/Manager/DLC2M1Directional12.vcd"  //Safehouse down there!
}
Rule PlayerRemarkcrashcourse01_path24Manager
{
	criteria ConceptRemark IsManager Iscrashcourse01_path24 IsNotSaidcrashcourse01_path24 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200 NotSaidCrash01SafeHouse
	ApplyContext "Saidcrashcourse01_path24:1:0,SaidCrash01Safehouse:1:250"
	applycontexttoworld
	Response PlayerRemarkcrashcourse01_path24Manager
}

Response PlayerRemarkcrashcourse01_path25Manager
{
	scene "scenes/Manager/WorldHospital0408.vcd" then any PlayerLeadOn foo:0 0 //Safe house through here.
}
Rule PlayerRemarkcrashcourse01_path25Manager
{
	criteria ConceptRemark IsManager Iscrashcourse01_path25 IsNotSaidcrashcourse01_path25 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300 NotSaidCrash01SafeHouse
	ApplyContext "Saidcrashcourse01_path25:1:0,SaidCrash01SafeHouse:1:250"
	applycontexttoworld
	Response PlayerRemarkcrashcourse01_path25Manager
}

Response PlayerRemarkcrashcourse02_path01Manager
{
	scene "scenes/Manager/DLC2MagazineRack01.vcd"  //Wall Street Weekly. There's no more Wall Street Weekly. DAMN.
}
Rule PlayerRemarkcrashcourse02_path01Manager
{
	criteria ConceptRemark IsManager Iscrashcourse02_path01 IsNotSaidcrashcourse02_path01 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear100
	ApplyContext "Saidcrashcourse02_path01:1:0"
	applycontexttoworld
	Response PlayerRemarkcrashcourse02_path01Manager
}

//AUTOGENERATED BLANK FOR PlayerRemarkcrashcourse02_path01Manager : ChanceToFire20Percent
Rule AUTOBLANK_PlayerRemarkcrashcourse02_path01Manager
{
	criteria ConceptRemark IsManager Iscrashcourse02_path01 IsNotSaidcrashcourse02_path01 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear100
	ApplyContext "Saidcrashcourse02_path01:1:0"
	applycontexttoworld
	Response _PlayerInfoRemarkableBlankManager
}

Response PlayerRemarkcrashcourse02_path04Manager
{
	scene "scenes/Manager/DLC2Alley01.vcd"  then biker CrashCourseR09 foo:0 0.05 //Hey, Francis. Wasn't this the alley you were born in?
}
Rule PlayerRemarkcrashcourse02_path04Manager
{
	criteria ConceptRemark IsManager Iscrashcourse02_path04 IsNotSaidcrashcourse02_path04 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200 IsBikerAlive IsBikerNear400
	ApplyContext "Saidcrashcourse02_path04:1:0"
	applycontexttoworld
	Response PlayerRemarkcrashcourse02_path04Manager
}

Response PlayerRemarkcrashcourse02_path05Manager
{
	scene "scenes/Manager/DLC2Container01.vcd" then any PlayerLeadOn foo:0 0 //Through this container!
}
Rule PlayerRemarkcrashcourse02_path05Manager
{
	criteria ConceptRemark IsManager Iscrashcourse02_path05 IsNotSaidcrashcourse02_path05 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300
	ApplyContext "Saidcrashcourse02_path05:1:0"
	applycontexttoworld
	Response PlayerRemarkcrashcourse02_path05Manager
}

Response PlayerRemarkcrashcourse02_path07Manager
{
	scene "scenes/Manager/DLC2BulletinBoard01.vcd"  //'Team building exercise every Tuesday.' Man, they oughtta try this zombie bullshit.
}
Rule PlayerRemarkcrashcourse02_path07Manager
{
	criteria ConceptRemark IsManager Iscrashcourse02_path07 IsNotSaidcrashcourse02_path07 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear100
	ApplyContext "Saidcrashcourse02_path07:1:0"
	applycontexttoworld
	Response PlayerRemarkcrashcourse02_path07Manager
}

Response PlayerRemarkcrashcourse02_path10Manager
{
	scene "scenes/Manager/DLC2M2Directional04.vcd" then any PlayerLeadOn foo:0 0 //Over that truck!
}
Rule PlayerRemarkcrashcourse02_path10Manager
{
	criteria ConceptRemark IsManager Iscrashcourse02_path10 IsNotSaidcrashcourse02_path10 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear500
	ApplyContext "Saidcrashcourse02_path10:1:0"
	applycontexttoworld
	Response PlayerRemarkcrashcourse02_path10Manager
}

Response PlayerRemarkcrashcourse02_path11Manager
{
	scene "scenes/Manager/DLC2Recycling01.vcd"  //We get out of this alive? I can't WAIT to have to recycle shit again.
}
Rule PlayerRemarkcrashcourse02_path11Manager
{
	criteria ConceptRemark IsManager Iscrashcourse02_path11 IsNotSaidcrashcourse02_path11 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear500 NotSurvivalMode
	ApplyContext "Saidcrashcourse02_path11:1:0"
	applycontexttoworld
	Response PlayerRemarkcrashcourse02_path11Manager
}

Response PlayerRemarkcrashcourse02_path12Manager
{
	scene "scenes/Manager/DLC2M2Directional02.vcd" then any PlayerLeadOn foo:0 0 //Through the truck yard!
}
Rule PlayerRemarkcrashcourse02_path12Manager
{
	criteria ConceptRemark IsManager Iscrashcourse02_path12 IsNotSaidcrashcourse02_path12 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "Saidcrashcourse02_path12:1:0"
	applycontexttoworld
	Response PlayerRemarkcrashcourse02_path12Manager
}


//--------------------------------------------------------------------------------------------------------------
// DLC2 - Intro
//--------------------------------------------------------------------------------------------------------------
Response IntroCrashR03Manager
{
	scene "scenes/Manager/DLC2Intro02.vcd"  then Biker IntroCrashR04 foo:0 0.05 //We're walkin' AWAY from it, ain't we?
}
Rule IntroCrashR03Manager
{
	criteria ConceptIntroCrashR03 IsManager
	Response IntroCrashR03Manager
}

Response IntroCrashR05Manager
{
	scene "scenes/Manager/DLC2Intro08.vcd"  then Biker IntroCrashR06 foo:0 0.05 //Great. What is it?
}
Rule IntroCrashR05Manager
{
	criteria ConceptIntroCrashR05 IsManager
	Response IntroCrashR05Manager
}

Response IntroCrashR09Manager
{
	scene "scenes/Manager/DLC2Intro05.vcd"  then any IntroCrashR10 foo:0 0.05 //For once, we're in complete agreement, Francis.
}
Rule IntroCrashR09Manager
{
	criteria ConceptIntroCrashR09 IsManager
	Response IntroCrashR09Manager
}

Response IntroCrashR10Manager
{
	scene "scenes/Manager/DLC2Intro06.vcd" then Biker IntroCrashR21 foo:0 0.05 //Well, I guess we're walking.
	scene "scenes/Manager/DLC2Intro10.vcd" then Biker IntroCrashR21 foo:0 0.05 //Looks like we're gonna have to walk outta here.
}
Rule IntroCrashR10Manager
{
	criteria ConceptIntroCrashR10 IsManager
	Response IntroCrashR10Manager
}

Response IntroCrashR13Manager
{
	scene "scenes/Manager/DLC2M2Misc01.vcd"  then Biker CrashYerKidding foo:0 0.05 //Have you tried turning it off and on again?
	scene "scenes/Manager/No02.vcd"  then Biker IntroCrashR14 foo:0 0.05 //Uh uh.
}
Rule IntroCrashR13Manager
{
	criteria ConceptIntroCrashR13 IsManager
	Response IntroCrashR13Manager
}

Response IntroCrashR15Manager
{
	scene "scenes/Manager/No02.vcd"  then Biker IntroCrashR16 foo:0 0.05 //Uh uh.
}
Rule IntroCrashR15Manager
{
	criteria ConceptIntroCrashR15 IsManager
	Response IntroCrashR15Manager
}

Response IntroCrashR17Manager
{
	scene "scenes/Manager/DLC2Intro01.vcd"  then Biker IntroCrashR18 foo:0 0.05 //Francis, why would you BET that we're doomed?
}
Rule IntroCrashR17Manager
{
	criteria ConceptIntroCrashR17 IsManager
	Response IntroCrashR17Manager
}

Response IntroCrashR22Manager
{
	scene "scenes/Manager/DLC2Intro07.vcd"  then Biker IntroCrashR23 foo:0 0.05 //Look, five minutes ago you hated flying.
}
Rule IntroCrashR22Manager
{
	criteria ConceptIntroCrashR22 IsManager
	Response IntroCrashR22Manager
}

Response IntroCrashR24Manager
{
	scene "scenes/Manager/DLC2Intro09.vcd"  then NamVet IntroCrashR25 foo:0 0.05 //That's FUNNY, Francis. Why don't you take your moustache, your little vest and your chaps and go find yourself a PARADE.
}
Rule IntroCrashR24Manager
{
	criteria ConceptIntroCrashR24 IsManager
	Response IntroCrashR24Manager
}

Response IntroCrashR30Manager
{
	scene "scenes/Manager/DLC2Intro12.vcd"  //Damn. I had a good feeling about that helicopter, too.
}
Rule IntroCrashR30Manager
{
	criteria ConceptIntroCrashR30 IsManager
	Response IntroCrashR30Manager
}

Response IntroCrashR31Manager
{
	scene "scenes/Manager/DLC2Intro11.vcd"  //On the bright side: look at all the great scenery we'd have missed if we flew over this in a helicopter, huh?
}
Rule IntroCrashR31Manager
{
	criteria ConceptIntroCrashR31 IsManager
	Response IntroCrashR31Manager
}

Response IntroCrashR36Manager
{
	scene "scenes/Manager/DLC2Intro06.vcd"  then Biker IntroCrashR21 foo:0 0.05 //Well, I guess we're walking.
}
Rule IntroCrashR36Manager
{
	criteria ConceptIntroCrashR36 IsManager
	Response IntroCrashR36Manager
}

Response IntroCrashR37Manager
{
	scene "scenes/Manager/DLC2M1Intro01.vcd"  then Biker IntroCrashR04 foo:0 0.05 //That was my first time in a helicopter, pretty exciting!
	scene "scenes/Manager/DLC2Misc01.vcd"  then TeenGirl IntroCrashR39 foo:0 0.05 //You know what? I don't think we're gonna see a witch from NOW ON. Who wants to bet me?
}
Rule IntroCrashR37Manager
{
	criteria ConceptIntroCrashR37 IsManager
	Response IntroCrashR37Manager
}


//--------------------------------------------------------------------------------------------------------------
// DLC2 - Lots Intro
//--------------------------------------------------------------------------------------------------------------
Response CrashCourseI01Manager
{
	scene "scenes/Manager/GenericResponses24.vcd"  //Sounds good.
	scene "scenes/Manager/WorldFarmHouseNPC10.vcd"  //Sounds good to me.
}
Rule CrashCourseI01Manager
{
	criteria ConceptCrashCourseI01 IsManager
	Response CrashCourseI01Manager
}

Response PlayerRemarkcrashcourse02_introManager
{
	scene "scenes/Manager/DLC2M2Saferoom01.vcd"  then any CrashCourseI01 foo:0 0.05 //We should try and find this depot.
}
Rule PlayerRemarkcrashcourse02_introManager
{
	criteria ConceptRemark IsManager Iscrashcourse02_intro IsNotSaidcrashcourse02_intro IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear400 IsCrash02IntroReady NotCrash02IntroPaused
	ApplyContext "Saidcrashcourse02_intro:1:0,SaidCreshendoStartNear:1:0"
	applycontexttoworld
	Response PlayerRemarkcrashcourse02_introManager
}

Response PlayerRemarkcrashcourse02_startaManager
{
	scene "scenes/Manager/blank.vcd"  //
}
Rule PlayerRemarkcrashcourse02_startaManager
{
	criteria ConceptRemark IsManager Iscrashcourse02_starta NotCrash02IntroReady IsSubjectNear400
	ApplyContext "Crash02IntroReady:1:0,Crash02IntroPaused:1:7,SaidFinaleAhead:1:0,SaidCreshendoStartNear:1:0"
	applycontexttoworld
	Response PlayerRemarkcrashcourse02_startaManager
}

Rule PlayerRemarkcrashcourse02_startbManager
{
	criteria ConceptRemark IsManager Iscrashcourse02_startb NotCrash02IntroReady IsSubjectNear400
	ApplyContext "Crash02IntroReady:1:0,Crash02IntroPaused:1:7,SaidFinaleAhead:1:0,SaidCreshendoStartNear:1:0"
	applycontexttoworld
	Response PlayerRemarkcrashcourse02_startaManager
}

Rule PlayerRemarkcrashcourse02_startcManager
{
	criteria ConceptRemark IsManager Iscrashcourse02_startc NotCrash02IntroReady IsSubjectNear400
	ApplyContext "Crash02IntroReady:1:0,Crash02IntroPaused:1:7,SaidFinaleAhead:1:0,SaidCreshendoStartNear:1:0"
	applycontexttoworld
	Response PlayerRemarkcrashcourse02_startaManager
}

Rule PlayerRemarkcrashcourse02_startdManager
{
	criteria ConceptRemark IsManager Iscrashcourse02_startd NotCrash02IntroReady IsSubjectNear400
	ApplyContext "Crash02IntroReady:1:0,Crash02IntroPaused:1:7,SaidFinaleAhead:1:0,SaidCreshendoStartNear:1:0"
	applycontexttoworld
	Response PlayerRemarkcrashcourse02_startaManager
}


//--------------------------------------------------------------------------------------------------------------
// Farm Intro
//--------------------------------------------------------------------------------------------------------------
Response IntroFarm4Manager
{
	scene "scenes/Manager/C6DLC3SECONDSAFEROOM24.vcd"  //Sounds good to me.
	scene "scenes/Manager/WorldFarmHouseNPC10.vcd"  //Sounds good to me.
}
Rule IntroFarm4Manager
{
	criteria ConceptIntroFarm4 IsManager
	ApplyContext "talk:1:4"
	applycontexttoworld
	Response IntroFarm4Manager
}


//--------------------------------------------------------------------------------------------------------------
// FaultSpeech
//--------------------------------------------------------------------------------------------------------------
Response SurvivorBoomerBlunderManager
{
	scene "scenes/Manager/Sorry03.vcd" predelay "1,2" //Sorry about that!
	scene "scenes/Manager/Sorry04.vcd" predelay "1,2" //Aww, man, sorry.
}
Rule SurvivorBoomerBlunderManager
{
	criteria IsFaultConcept IsFaultBoomerBlunder IsNotCoughing IsManager SubjectIsNotManager IsTalk IsTalkManager
	Response SurvivorBoomerBlunderManager
}


//--------------------------------------------------------------------------------------------------------------
// Finale Speech
//--------------------------------------------------------------------------------------------------------------
Response SurvivorFinaleTriggeredBoatManager
{
	scene "scenes/Manager/RadioUsedBoat01.vcd" predelay ".5,1" then any RespondAffirmative foo:0 0 //Okay, we gotta hold out til the rescue boat gets here.
}
Rule SurvivorFinaleTriggeredBoatManager
{
	criteria ConceptFinaleTriggered IsTriggeredByManager ismap_l4d_smalltown05_houseboat IsNotSaidRadioTriggered IsTalk IsTalkManager IsManager IsNotIncapacitated
	ApplyContext "SaidRadioTriggered:1:30"
	applycontexttoworld
	Response SurvivorFinaleTriggeredBoatManager
}

Response SurvivorFinaleTriggeredFarmManager
{
	scene "scenes/Manager/RadioUsedGeneric01.vcd" predelay ".5,1" then any RespondAffirmative foo:0 0 //Our ride out of here's on its way.
	scene "scenes/Manager/RadioUsedTruck01.vcd" predelay ".5,1" then any RespondAffirmative foo:0 0 //Allright, now we just gotta hold out til the truck gets here.
}
Rule SurvivorFinaleTriggeredFarmManager
{
	criteria ConceptFinaleTriggered IsTriggeredByManager ismap_l4d_farm05_cornfield IsNotSaidRadioTriggered IsTalk IsTalkManager IsManager IsNotIncapacitated
	ApplyContext "SaidRadioTriggered:1:30"
	applycontexttoworld
	Response SurvivorFinaleTriggeredFarmManager
}

Response SurvivorFinaleTriggeredRooftopManager
{
	scene "scenes/Manager/RadioUsedChopper01.vcd" predelay ".5,1" then any PlayerYellRun foo:0 0 //Okay, the chopper's coming.
	scene "scenes/Manager/RadioUsedGeneric03.vcd" predelay ".5,1" then any PlayerYellRun foo:0 0 //Help is on the way! I can't believe it, but I think we might actually make it out of here!
}
Rule SurvivorFinaleTriggeredRooftopManager
{
	criteria ConceptFinaleTriggered IsTriggeredByManager ismap_l4d_hospital05_rooftop IsNotSaidRadioTriggered IsTalk IsTalkManager IsManager IsNotIncapacitated
	ApplyContext "SaidRadioTriggered:1:30"
	applycontexttoworld
	Response SurvivorFinaleTriggeredRooftopManager
}

Response SurvivorFinalVehicleBoatManager
{
	scene "scenes/Manager/ArriveBoat01.vcd"  then any PlayerYellRun foo:0 0 //Get to the boat!
	scene "scenes/Manager/ArriveBoat02.vcd"  then any PlayerYellRun foo:0 0 //Get to the boat!
	scene "scenes/Manager/ArriveBoat03.vcd"  then any PlayerYellRun foo:0 0 //Run to the boat!
}
Rule SurvivorFinalVehicleBoatManager
{
	criteria ConceptGetToVehicle IsManager ismap_l4d_smalltown05_houseboat IsNotSaidFinalVehicleArrived
	ApplyContext "SaidFinalVehicleArrived:1:20,Talk:1:3"
	applycontexttoworld
	Response SurvivorFinalVehicleBoatManager
}

Response SurvivorFinalVehicleFarmManager
{
	scene "scenes/Manager/ArriveTruck01.vcd"  then any PlayerYellRun foo:0 0 //Get to the truck! TO THE TRUCK!
	scene "scenes/Manager/ArriveTruck02.vcd"  then any PlayerYellRun foo:0 0 //GET TO THE TRUCK!
}
Rule SurvivorFinalVehicleFarmManager
{
	criteria ConceptGetToVehicle IsManager ismap_l4d_farm05_cornfield IsNotSaidFinalVehicleArrived
	ApplyContext "SaidFinalVehicleArrived:1:20,Talk:1:6"
	applycontexttoworld
	Response SurvivorFinalVehicleFarmManager
}

Response SurvivorFinalVehicleFarmSpottedManager
{
	scene "scenes/Manager/ArriveTruckInitial01.vcd"  then any EmphaticArriveRunFarm foo:0 0 //The truck's here! Let's go!
}
Rule SurvivorFinalVehicleFarmSpottedManager
{
	criteria ConceptFinalVehicleSpotted IsManager ismap_l4d_farm05_cornfield IsNotSaidFinalVehicleSpotted
	ApplyContext "SaidFinalVehicleSpotted:1:20,Talk:1:6"
	applycontexttoworld
	Response SurvivorFinalVehicleFarmSpottedManager
}

Response SurvivorFinalVehicleRooftopManager
{
	scene "scenes/Manager/ArriveChopper01.vcd"  then any PlayerYellRun foo:0 0 //Everyone in the helicopter! Go!
	scene "scenes/Manager/ArriveChopper02.vcd"  then any PlayerYellRun foo:0 0 //Get to the helicopter!
}
Rule SurvivorFinalVehicleRooftopManager
{
	criteria ConceptGetToVehicle IsManager ismap_l4d_hospital05_rooftop IsNotSaidFinalVehicleArrived
	ApplyContext "SaidFinalVehicleArrived:1:20,Talk:1:5"
	applycontexttoworld
	Response SurvivorFinalVehicleRooftopManager
}

Response SurvivorFinalVehicleRunwayManager
{
	scene "scenes/Manager/ArrivePlane01.vcd"  then any PlayerYellRun foo:0 0 //Get to the plane. GO!
	scene "scenes/Manager/ArrivePlane02.vcd"  then any PlayerYellRun foo:0 0 //Get to the plane!
}
Rule SurvivorFinalVehicleRunwayManager
{
	criteria ConceptGetToVehicle IsManager isrunway IsNotSaidFinalVehicleArrived
	ApplyContext "SaidFinalVehicleArrived:1:20,Talk:1:6"
	applycontexttoworld
	Response SurvivorFinalVehicleRunwayManager
}

Response SurvivorFinalVehicleSpottedBoatManager
{
	scene "scenes/Manager/ArriveBoatInitial01.vcd"  then any PlayerYellRun foo:0 0 //The boat's here! Let's go!
	scene "scenes/Manager/ArriveBoatInitial02.vcd"  then any PlayerYellRun foo:0 0 //Our boat's here! Let's go!
}
Rule SurvivorFinalVehicleSpottedBoatManager
{
	criteria ConceptFinalVehicleSpotted IsManager ismap_l4d_smalltown05_houseboat IsNotSaidFinalVehicleSpotted
	ApplyContext "SaidFinalVehicleSpotted:1:20,Talk:1:6"
	applycontexttoworld
	Response SurvivorFinalVehicleSpottedBoatManager
}

Response SurvivorFinalVehicleSpottedRooftopManager
{
	scene "scenes/Manager/ArriveChopperInitial01.vcd"  then any PlayerYellRun foo:0 0 //The heli's here. Let's go!
	scene "scenes/Manager/ArriveChopperInitial02.vcd"  then any PlayerYellRun foo:0 0 //The helicopter's here! Let's go!
}
Rule SurvivorFinalVehicleSpottedRooftopManager
{
	criteria ConceptFinalVehicleSpotted IsManager ismap_l4d_hospital05_rooftop IsNotSaidFinalVehicleSpotted
	ApplyContext "SaidFinalVehicleSpotted:1:20,Talk:1:6"
	applycontexttoworld
	Response SurvivorFinalVehicleSpottedRooftopManager
}

Response SurvivorFinalVehicleSpottedRunwayManager
{
	scene "scenes/Manager/ArrivePlane01.vcd"  then any PlayerYellRun foo:0 0 //Get to the plane. GO!
	scene "scenes/Manager/ArrivePlane02.vcd"  then any PlayerYellRun foo:0 0 //Get to the plane!
}
Rule SurvivorFinalVehicleSpottedRunwayManager
{
	criteria ConceptFinalVehicleSpotted IsManager ismap_urban05a_finale_runway IsNotSaidFinalVehicleSpotted
	ApplyContext "SaidFinalVehicleSpotted:1:20,Talk:1:6"
	applycontexttoworld
	Response SurvivorFinalVehicleSpottedRunwayManager
}


//--------------------------------------------------------------------------------------------------------------
// General Responses
//--------------------------------------------------------------------------------------------------------------
Response ResponseLoudDispleasureSwearManager
{
	scene "scenes/Manager/FallShort02.vcd" predelay "0.1,0.7" //ohhh nooooo
	scene "scenes/Manager/PlayerTransitionClose02.vcd" predelay "0.1,0.7" //Dammit.
	scene "scenes/Manager/Swears02.vcd" predelay "0.1,0.7" //Dammit.
	scene "scenes/Manager/Swears03.vcd" predelay "0.1,0.7" //Aw hell.
	scene "scenes/Manager/Swears05.vcd" predelay "0.1,0.7" //Shit.
	scene "scenes/Manager/Swears06.vcd" predelay "0.1,0.7" //Ah shit.
	scene "scenes/Manager/Swears07.vcd" predelay "0.1,0.7" //Shit shit shit.
	scene "scenes/Manager/ViolenceAwe02.vcd" predelay "0.1,0.7" //Jee-zus...
	scene "scenes/Manager/ViolenceAwe05.vcd" predelay "0.1,0.7" //Holy shit...
}
Rule ResponseLoudDispleasureSwearManager
{
	criteria ConceptPanicEvent IsManager IsNotCoughing IsTalk IsTalkManager
	Response ResponseLoudDispleasureSwearManager
}

Response ResponseSoftDispleasureSwearManager
{
	scene "scenes/Manager/Swears10.vcd"  //Dammit.
	scene "scenes/Manager/Swears11.vcd"  //Aw hell.
	scene "scenes/Manager/Swears12.vcd"  //Shit.
	scene "scenes/Manager/Swears13.vcd"  //Ah shit.
	scene "scenes/Manager/Swears16.vcd"  //That's some country-ass bullshit.
	scene "scenes/Manager/ViolenceAwe08.vcd"  //Jee-zus...
	scene "scenes/Manager/ViolenceAwe10.vcd"  //Holy shit...
}
Rule ResponseSoftDispleasureSwearManager
{
	criteria ConceptResponseSoftDispleasureSwear IsManager IsNotCoughing NotInCombat IsTalk IsTalkManager IssuerMediumClose
	Response ResponseSoftDispleasureSwearManager
}


//--------------------------------------------------------------------------------------------------------------
// Item Spotted
//--------------------------------------------------------------------------------------------------------------
Response SurvivorAskForHealth2Manager
{
	scene "scenes/Manager/GoingToDieAskForHeal01.vcd"  //Someone got a first aid kit?
	scene "scenes/Manager/GoingToDieAskForHeal02.vcd"  //Can anybody spare a kit?
	scene "scenes/Manager/GoingToDieAskForHeal03.vcd"  //Could use a first aid kit.
	scene "scenes/Manager/GoingToDieAskForHeal04.vcd"  //Could use some first aid.
}
Rule SurvivorAskForHealth2Manager
{
	criteria ConceptAskForHealth2  IsManager
	Response SurvivorAskForHealth2Manager
}

Response SurvivorAskBillForHealthManager
{
	scene "scenes/Manager/PlayerSuggestHealthSpecific06.vcd" then subject PlayerNo foo:0 0 //Bill, Bill... first aid kit?
	scene "scenes/Manager/PlayerSuggestHealthSpecific07.vcd" then subject PlayerNo foo:0 0 //Bill, could I get some first aid?
}
Rule SurvivorAskBillForHealthManager
{
	criteria ConceptAskForHealth2  IsManager SubjectIsNamVet IsSubjectNear400
	Response SurvivorAskBillForHealthManager
}

Response SurvivorAskForHealthManager
{
	scene "scenes/Manager/blank.vcd"  then Subject AskForHealth foo:0 0 // NoHasPainPills NotInCombat
}
Rule SurvivorAskForHealthManager
{
	criteria ConceptPlayerLookHere IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto  IsSubjectNear400   NoHasFirstAidKit IsNotHealthyHalf  IsNotSaidAskForHealth
	ApplyContext "SaidAskForHealth:1:5"
	applycontexttoworld
	Response SurvivorAskForHealthManager
}

Response SurvivorAskFrancisForHealthManager
{
	scene "scenes/Manager/PlayerSuggestHealthSpecific01.vcd" then subject PlayerNo foo:0 0 //Francis, can you lend me your med kit?
	scene "scenes/Manager/PlayerSuggestHealthSpecific02.vcd" then subject PlayerNo foo:0 0 //Francis, mind spottin' me a med kit?
	scene "scenes/Manager/PlayerSuggestHealthSpecific03.vcd" then subject PlayerNo foo:0 0 //Francis, health kit?
}
Rule SurvivorAskFrancisForHealthManager
{
	criteria ConceptAskForHealth2  IsManager SubjectIsBiker IsSubjectNear400
	Response SurvivorAskFrancisForHealthManager
}

Response SurvivorAskZoeyForHealthManager
{
	scene "scenes/Manager/PlayerSuggestHealthSpecific04.vcd" then subject PlayerNo foo:0 0 //Zoey, are you going to use that med kit?
	scene "scenes/Manager/PlayerSuggestHealthSpecific05.vcd" then subject PlayerNo foo:0 0 //Zoey, any chance I could get some first aid?
}
Rule SurvivorAskZoeyForHealthManager
{
	criteria ConceptAskForHealth2  IsManager SubjectIsTeenGirl IsSubjectNear400
	Response SurvivorAskZoeyForHealthManager
}

Response SurvivorFrancisHealthHereManager
{
	scene "scenes/Manager/blank.vcd"  then From AskForHealth2 foo:0 0 //
}
Rule SurvivorFrancisHealthHereManager
{
	criteria ConceptAskForHealth IsNotCoughing IsManager IsTalk IsTalkManager YesHasFirstAidKit
	Response SurvivorFrancisHealthHereManager
}

Response SurvivorSpottedAmmoManager
{
	scene "scenes/Manager/SpotAmmo01.vcd"  //Ammo here!
}
Rule SurvivorSpottedAmmoManager
{
	criteria ConceptPlayerSpotAmmo IsNotCoughing  IsManager IsTalk IsTalkManager IsNotSmartLookAuto
	ApplyContext "SaidSpotAmmo:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedAmmoManager
}

Rule SurvivorSpottedAmmoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsAmmo IsWorldTalkManager
	ApplyContext "SaidSpotAmmo:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedAmmoManager
}

Rule SurvivorSpottedAmmoAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing  IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotAmmo IsNotSaidSpot IsAmmo IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotAmmo:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedAmmoManager
}

Response SurvivorSpottedBillCloseManager
{
	scene "scenes/Manager/NameBill04.vcd"  //Bill (quiet)
	scene "scenes/Manager/NameBill05.vcd"  //Bill (quiet)
}
Rule SurvivorSpottedBillCloseManager
{
	criteria ConceptPlayerLookHere IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto SubjectIsNamVet IsNamVetNear400 IsWorldTalkManager
	Response SurvivorSpottedBillCloseManager
}

Rule SurvivorSpottedBillClose2Manager
{
	criteria ConceptPlayerLook IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto SubjectIsNamVet IsNamVetNear400 IsWorldTalkManager
	Response SurvivorSpottedBillCloseManager
}

Response SurvivorSpottedBillFarManager
{
	scene "scenes/Manager/HunterBillPounced01.vcd"  //Bill!
	scene "scenes/Manager/NameBill01.vcd"  //Bill! (loud)
	scene "scenes/Manager/NameBill02.vcd"  //Bill! (loud)
	scene "scenes/Manager/NameBill03.vcd"  //Bill! (calling out)
}
Rule SurvivorSpottedBillFarManager
{
	criteria ConceptPlayerLook IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto SubjectIsNamVet IsNamVetFar400 IsWorldTalkManager
	Response SurvivorSpottedBillFarManager
}

Response SurvivorSpottedFrancisCloseManager
{
	scene "scenes/Manager/NameFrancis04.vcd"  //Francis (quiet)
	scene "scenes/Manager/NameFrancis05.vcd"  //Francis (quiet)
}
Rule SurvivorSpottedFrancisCloseManager
{
	criteria ConceptPlayerLookHere IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto SubjectIsBiker IsBikerNear400 IsWorldTalkManager
	Response SurvivorSpottedFrancisCloseManager
}

Rule SurvivorSpottedFrancisClose2Manager
{
	criteria ConceptPlayerLook IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto SubjectIsBiker IsBikerNear400 IsWorldTalkManager
	Response SurvivorSpottedFrancisCloseManager
}

Response SurvivorSpottedFrancisFarManager
{
	scene "scenes/Manager/HunterFrancisPounced01.vcd"  //Francis!
	scene "scenes/Manager/NameFrancis01.vcd"  //Francis! (loud)
	scene "scenes/Manager/NameFrancis02.vcd"  //Francis! (loud)
	scene "scenes/Manager/NameFrancis03.vcd"  //Francis! (calling out)
}
Rule SurvivorSpottedFrancisFarManager
{
	criteria ConceptPlayerLook IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto SubjectIsBiker IsBikerFar400 IsWorldTalkManager
	Response SurvivorSpottedFrancisFarManager
}

Response SurvivorSpottedGrenadeManager
{
	scene "scenes/Manager/SpotGrenades04.vcd" then any _SpotStuffResponse foo:0 0.01 //Pipe bomb here!
	scene "scenes/Manager/SpotGrenades05.vcd" then any _SpotStuffResponse foo:0 0.01 //Pipe bomb!
}
Rule SurvivorSpottedGrenadeManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsPipeBomb
	ApplyContext "SaidSpotGrenade:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedGrenadeManager
}

Rule SurvivorSpottedGrenadeAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotGrenade IsNotSaidSpot IsPipeBomb  YesHasGrenade _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotGrenade:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedGrenadeManager
}

Response SurvivorSpottedGrenadeAutoManager2
{
	scene "scenes/Manager/Generic02.vcd"  //Oh cool
	scene "scenes/Manager/GenericResponses15.vcd"  //Okay...
	scene "scenes/Manager/PositiveNoise04.vcd"  //[Improv non-verbal pleasure & interest sounds]
	scene "scenes/Manager/Yes02.vcd"  //Yeah.
	scene "scenes/Manager/Yes09.vcd"  //Cool
}
Rule SurvivorSpottedGrenadeAutoManager2
{
	criteria ConceptPlayerSpotGrenade IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot NoHasGrenade IsNotAlone IsSaidSpotGrenade IsNotSaidSpot
	ApplyContext "SaidSpotGrenade:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedGrenadeAutoManager2
}

Response SurvivorSpottedHealthManager
{
	scene "scenes/Manager/SpotFirstAid01.vcd" then any _SpotStuffResponse foo:0 0.01 //A First Aid Kit here!
	scene "scenes/Manager/SpotFirstAid02.vcd" then any _SpotStuffResponse foo:0 0.01 //First Aid here!
	scene "scenes/Manager/SpotFirstAid03.vcd" then any _SpotStuffResponse foo:0 0.01 //First aid kit over here!
	scene "scenes/Manager/SpotFirstAid04.vcd" then any _SpotStuffResponse foo:0 0.01 //First aid here!
}
Rule SurvivorSpottedHealthManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsFirstAidKit
	ApplyContext "SaidSpotHealth:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedHealthManager
}

Rule SurvivorSpottedHealthAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotHealth IsNotSaidSpot IsFirstAidKit  YesHasFirstAidKit _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotHealth:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedHealthManager
}

Rule SurvivorSpottedHealthAutoManager2
{
	criteria ConceptPlayerSpotFirstAid IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto  IsNotInSafeSpot NoHasFirstAidKit IsNotAlone IsSaidSpotHealth IsNotSaidSpot
	ApplyContext "SaidSpotHealth:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedGrenadeAutoManager2
}

Response SurvivorSpottedMolotovManager
{
	scene "scenes/Manager/SpotGrenades02.vcd" then any _SpotStuffResponse foo:0 0.01 //Molotovs over here!
	scene "scenes/Manager/SpotGrenades03.vcd" then any _SpotStuffResponse foo:0 0.01 //Molotovs here!
}
Rule SurvivorSpottedMolotovManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsMolotov
	ApplyContext "SaidSpotMolotov:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedMolotovManager
}

Rule SurvivorSpottedMolotovAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotMolotov IsNotSaidSpot IsMolotov  YesHasMolotov _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotMolotov:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedMolotovManager
}

Rule SurvivorSpottedMolotovAutoManager2
{
	criteria ConceptPlayerSpotMolotov IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto  IsNotInSafeSpot NoHasMolotov IsNotAlone IsSaidSpotMolotov IsNotSaidSpot
	ApplyContext "SaidSpotMolotov:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedGrenadeAutoManager2
}

Response SurvivorSpottedPillsManager
{
	scene "scenes/Manager/SpotPills01.vcd" then any _SpotStuffResponse foo:0 0.01 //Pills here!
}
Rule SurvivorSpottedPillsManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsPainPills
	ApplyContext "SaidSpotPIlls:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedPillsManager
}

Rule SurvivorSpottedPillsAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotPills IsNotSaidSpot IsPainPills YesHasPainPills _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotPills:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedPillsManager
}

Rule SurvivorSpottedPillsAutoManager2
{
	criteria ConceptPlayerSpotPills IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot NoHasPainPills IsNotAlone IsSaidSpotPills IsNotSaidSpot _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotPills:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedGrenadeAutoManager2
}

Response SurvivorSpottedWorldCloseManager
{
	scene "scenes/Manager/LookHere01.vcd"  then any _SpotStuffResponse foo:0 0.01 //Check this out.
	scene "scenes/Manager/LookHere02.vcd"  then any _SpotStuffResponse foo:0 0.01 //Yo, Check this out.
	scene "scenes/Manager/LookHere03.vcd"  then any _SpotStuffResponse foo:0 0.01 //Oh man, look at this.
	scene "scenes/Manager/LookHere04.vcd"  then any _SpotStuffResponse foo:0 0.01 //Look at this.
	scene "scenes/Manager/LookHere05.vcd"  then any _SpotStuffResponse foo:0 0.01 //Oh man, you better look at this.
}
Rule SurvivorSpottedWorldCloseManager
{
	criteria ConceptPlayerLookHere IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsWorldTalkManager
	Response SurvivorSpottedWorldCloseManager
}

Response SurvivorSpottedWorldFarManager
{
	scene "scenes/Manager/Look01.vcd"  //Over there.
	scene "scenes/Manager/Look02.vcd"  //Over there.
	scene "scenes/Manager/Look03.vcd"  //Look.
	scene "scenes/Manager/Look04.vcd"  //Look!
	scene "scenes/Manager/Look05.vcd"  //Look!
}
Rule SurvivorSpottedWorldFarManager
{
	criteria ConceptPlayerLook IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsSubjectNone IsWorldTalkManager
	Response SurvivorSpottedWorldFarManager
}

Response SurvivorSpottedZoeyCloseManager
{
	scene "scenes/Manager/NameZoey04.vcd"  //Zoey (quiet)
}
Rule SurvivorSpottedZoeyCloseManager
{
	criteria ConceptPlayerLookHere IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto SubjectIsTeenGirl IsTeenGirlNear400 IsWorldTalkManager
	Response SurvivorSpottedZoeyCloseManager
}

Rule SurvivorSpottedZoeyClose2Manager
{
	criteria ConceptPlayerLook IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto SubjectIsTeenGirl IsTeenGirlNear400 IsWorldTalkManager
	Response SurvivorSpottedZoeyCloseManager
}

Response SurvivorSpottedZoeyFarManager
{
	scene "scenes/Manager/HunterZoeyPounced02.vcd"  //Zoey!
	scene "scenes/Manager/NameZoey01.vcd"  //Zoey! (loud)
	scene "scenes/Manager/NameZoey02.vcd"  //Zoey! (loud)
	scene "scenes/Manager/NameZoey03.vcd"  //Zoey! (calling out)
}
Rule SurvivorSpottedZoeyFarManager
{
	criteria ConceptPlayerLook IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto SubjectIsTeenGirl IsTeenGirlFar400 IsWorldTalkManager
	Response SurvivorSpottedZoeyFarManager
}


//--------------------------------------------------------------------------------------------------------------
// Monster Spotted
//--------------------------------------------------------------------------------------------------------------
Response SurvivorSpottedBoomerManager
{
	scene "scenes/Manager/WarnBoomer01.vcd"  //BOOMER!
	scene "scenes/Manager/WarnBoomer02.vcd"  //BOOMER!
	scene "scenes/Manager/WarnBoomer03.vcd"  //BOOMER!
}
Rule SurvivorSpottedBoomerManager
{
	criteria ConceptPlayerWarnSpecial IsSpecialTypeBoomer IsNotCoughing IsManager IsTalk IsTalkManager IsNotSpeakingWeight0
	ApplyContext "SaidBoomerWarn:1:20,SaidSpecialWarn:1:30"
	applycontexttoworld
	Response SurvivorSpottedBoomerManager
}

Response SurvivorSpottedHunterManager
{
	scene "scenes/Manager/WarnHunter01.vcd"  //HUNTER!
	scene "scenes/Manager/WarnHunter02.vcd"  //HUNTER!
	scene "scenes/Manager/WarnHunter03.vcd"  //HUNTER!
}
Rule SurvivorSpottedHunterManager
{
	criteria ConceptPlayerWarnSpecial IsSpecialTypeHunter IsNotCoughing IsManager IsTalk IsTalkManager IsNotSpeakingWeight0
	ApplyContext "SaidHunterWarn:1:20,SaidSpecialWarn:1:30"
	applycontexttoworld
	Response SurvivorSpottedHunterManager
}

Response SurvivorSpottedInfectedManager
{
	scene "scenes/Manager/Incoming01.vcd"  //Here they come!
	scene "scenes/Manager/Incoming02.vcd"  //They're comin'!
	scene "scenes/Manager/Incoming03.vcd"  //Incoming!
    scene "scenes/Manager/Incoming04.vcd"  //Incoming!
    scene "scenes/Manager/HordeAttack02.vcd"  //Incoming!
    scene "scenes/Manager/HordeAttack03.vcd"  //Incoming!
}
Rule SurvivorSpottedInfectedManager
{
	criteria ConceptPlayerIncoming IsNotCoughing IsManager IsTalk IsTalkManager
	Response SurvivorSpottedInfectedManager
}

Response SurvivorSpottedSmokerManager
{
	scene "scenes/Manager/WarnSmoker01.vcd"  //SMOKER!
	scene "scenes/Manager/WarnSmoker02.vcd"  //SMOKER!
	scene "scenes/Manager/WarnSmoker03.vcd"  //SMOKER!
}
Rule SurvivorSpottedSmokerManager
{
	criteria ConceptPlayerWarnSpecial IsSpecialTypeSmoker IsNotCoughing IsManager IsTalk IsTalkManager IsNotSpeakingWeight0
	ApplyContext "SaidSmokerWarn:1:20,SaidSpecialWarn:1:30"
	applycontexttoworld
	Response SurvivorSpottedSmokerManager
}

Response SurvivorSpottedTankManager
{
	scene "scenes/Manager/WarnTank01.vcd"  //TANK!
	scene "scenes/Manager/WarnTank02.vcd"  //TANK!
	scene "scenes/Manager/WarnTank03.vcd"  //TANK!
}
Rule SurvivorSpottedTankManager
{
	criteria ConceptPlayerWarnSpecial IsSpecialTypeTank IsNotCoughing IsManager IsTalk IsTalkManager IsNotSpeakingWeight0
	ApplyContext "SaidTankWarn:1:20,SaidSpecialWarn:1:30,SaidTankWarn2:1:60"
	applycontexttoworld
	Response SurvivorSpottedTankManager
}

Response SurvivorSpottedWitchManager
{
	scene "scenes/Manager/WarnWitch01.vcd"  //WITCH!
	scene "scenes/Manager/WarnWitch02.vcd"  //WITCH!
	scene "scenes/Manager/WarnWitch03.vcd"  //WITCH!
}
Rule SurvivorSpottedWitchManager
{
	criteria ConceptPlayerWarnSpecial IsSpecialTypeWitch IsNotCoughing IsManager IsTalk IsTalkManager IsNotSpeakingWeight0
	ApplyContext "SaidWitchWarn:1:20,SaidSpecialWarn:1:30"
	applycontexttoworld
	Response SurvivorSpottedWitchManager
}

Rule SurvivorAlsoSpottedBoomerManager
{
	criteria ConceptPlayerAlsoWarnBoomer IsNotCoughing IsManager IsTalk IsTalkManager
	ApplyContext "SaidBoomerWarn:1:20,SaidSpecialWarn:1:30"
	applycontexttoworld
	Response SurvivorSpottedBoomerManager
}

Rule SurvivorAlsoSpottedHunterManager
{
	criteria ConceptPlayerAlsoWarnHunter IsNotCoughing IsManager IsTalk IsTalkManager
	ApplyContext "SaidHunterWarn:1:20,SaidSpecialWarn:1:30"
	applycontexttoworld
	Response SurvivorSpottedHunterManager
}

Rule SurvivorAlsoSpottedSmokerManager
{
	criteria ConceptPlayerAlsoWarnSmoker IsNotCoughing IsManager IsTalk IsTalkManager
	ApplyContext "SaidSmokerWarn:1:20,SaidSpecialWarn:1:30"
	applycontexttoworld
	Response SurvivorSpottedSmokerManager
}

Rule SurvivorAlsoSpottedTankManager
{
	criteria ConceptPlayerAlsoWarnTank IsNotCoughing IsNotSpeaking IsManager IsTalk IsTalkManager
	ApplyContext "SaidTankWarn:1:20,SaidSpecialWarn:1:30,SaidTankWarn2:1:60"
	applycontexttoworld
	Response SurvivorSpottedTankManager
}

Rule SurvivorAlsoSpottedWitchManager
{
	criteria ConceptPlayerAlsoWarnWitch IsNotCoughing IsManager IsTalk IsTalkManager
	ApplyContext "SaidWitchWarn:1:20,SaidSpecialWarn:1:30"
	applycontexttoworld
	Response SurvivorSpottedWitchManager
}


//--------------------------------------------------------------------------------------------------------------
// Not Rosetta - Responses
//--------------------------------------------------------------------------------------------------------------
Response PlayerAlertGiveItemManager
{
	scene "scenes/Manager/AlertGiveItem01.vcd"  //Here take this.
	scene "scenes/Manager/AlertGiveItem02.vcd"  //Here, I got something for you.
	scene "scenes/Manager/AlertGiveItem03.vcd"  //Take this.
	scene "scenes/Manager/AlertGiveItem04.vcd"  //Go ahead and take this.
	scene "scenes/Manager/AlertGiveItem05.vcd"  //Here man, take this.
	scene "scenes/Manager/AlertGiveItem06.vcd" //Take it and you can pay me back later
	scene "scenes/Manager/AlertGiveItem07.vcd" //It's not a time to be a hero, just take it
}
Rule PlayerAlertGiveItemManager
{
	criteria ConceptPlayerAlertGiveItem IsNotCoughing IsManager IsTalk IsTalkManager
	Response PlayerAlertGiveItemManager
}

Response PlayerAlertGiveItemStopManager
{
	scene "scenes/Manager/DLC1_C6M3_L4D1FinaleFinalGas01.vcd"  //Here you go!
	scene "scenes/Manager/DLC1_C6M3_L4D1FinaleFinalGas02.vcd"  //Here you go!
	scene "scenes/Manager/DLC1_C6M3_L4D1FinaleFinalGas03.vcd"  //You're gonna need this.
	scene "scenes/Manager/DLC1_C6M3_L4D1FinaleFinalGas04.vcd"  //Last one!
	scene "scenes/Manager/DLC1_C6M3_L4D1FinaleFinalGas05.vcd"  //Here you go!
	scene "scenes/Manager/DLC1_C6M3_L4D1FinaleFinalGas06.vcd"  //You're gonna need this.
	scene "scenes/Manager/DLC1_C6M3_L4D1FinaleFinalGas07.vcd"  //Last one!
}
Rule PlayerAlertGiveItemStopManager
{
	criteria ConceptAlertGiveItemStop IsNotCoughing IsManager IsTalk IsTalkManager IsNotSaidAlertGiveItemStopManager IsWorldTalkManager
	ApplyContext "SaidAlertGiveItemStopManager:1:10"
	Response PlayerAlertGiveItemStopManager
}

Response PlayerAlertGiveItemStopAnFirstAidManager
{
	scene "scenes/Manager/Blank.vcd"  then subject AlertGiveItemStop foo:0 0 //Blank
}
Rule PlayerAlertGiveItemStopAnFirstAidManager
{
	criteria ConceptAlertGiveItemStopFirstAidA IsNotCoughing IsManager IsTalk IsTalkManager  IsNotSaidAlertGiveItemStopFirstAidManager NoHasFirstAidKit IsWorldTalkManager
	Response PlayerAlertGiveItemStopAnFirstAidManager
}

Response PlayerAlertGiveItemStopQnFirstAidManager
{
	scene "scenes/Manager/Blank.vcd"  then subject AlertGiveItemStopFirstAidA foo:0 0 //Blank
}
Rule PlayerAlertGiveItemStopQnFirstAidManager
{
	criteria ConceptBashWithItem IsNotCoughing IsManager IsTalk IsTalkManager IsItemFirstAidKit IsNotSaidAlertGiveItemStopFirstAidManager IsWorldTalkManager
	ApplyContext "SaidAlertGiveItemStopFirstAidManager:1:10"
	Response PlayerAlertGiveItemStopQnFirstAidManager
}

Response PlayerFriendlyFireManager
{
	scene "scenes/Manager/FriendlyFire01.vcd" then subject PlayerSorry foo:0 0.1 //Hey, man, that hurt.
	scene "scenes/Manager/FriendlyFire02.vcd" then subject PlayerSorry foo:0 0.1 //AH! Will you knock it off?
	scene "scenes/Manager/FriendlyFire03.vcd" then subject PlayerLaugh foo:0 0 //Do I look like one of them?
	scene "scenes/Manager/FriendlyFire04.vcd" then subject PlayerSorry foo:0 0.1 //You know I would appreciate it, IF YOU'D STOP SHOOTING ME.
	scene "scenes/Manager/FriendlyFire05.vcd" then subject PlayerSorry foo:0 0.1 //Watch where you're shooting!
	scene "scenes/Manager/FriendlyFire06.vcd" then subject PlayerSorry foo:0 0.1 //Hey, man, that's not cool.
	scene "scenes/Manager/FriendlyFire07.vcd" then subject PlayerSorry foo:0 0.1 //Man, what the hell, quit shooting me
	scene "scenes/Manager/FriendlyFire08.vcd" then subject PlayerSorry foo:0 0.1 //Whoa, whoa, don't shoot, it's me!
	scene "scenes/Manager/FriendlyFire09.vcd" then subject PlayerSorry foo:0 0.1 //Ow man ow! Why you shooting me!
	scene "scenes/Manager/FriendlyFire10.vcd" then subject PlayerLaugh foo:0 0 //Look at my face, do I look like them?
	scene "scenes/Manager/FriendlyFire11.vcd" then subject PlayerSorry foo:0 0.1 //Oh what the hell, why you shootin' me
	scene "scenes/Manager/FriendlyFire12.vcd" then subject PlayerSorry foo:0 0.1 //I'm gonna shoot you back next time
	scene "scenes/Manager/FriendlyFire13.vcd" then subject PlayerSorry foo:0 0.1 //Ahhh Mother
	scene "scenes/Manager/FriendlyFire14.vcd" then subject PlayerSorry foo:0 0.1 //Whoa, whoa, don't shoot, it's me!
	scene "scenes/Manager/Manager_FriendlyFireBill06.vcd" then subject PlayerSorry foo:0 0.1 //I cannot BELIEVE you just shot me AGAIN.
}
Rule PlayerFriendlyFireManager
{
	criteria ConceptPlayerFriendlyFire IsNotCoughing IsManager IsNotManagerFriendlyFire IsDamageTypeBullet IsTalk IsTalkManager IsNotIncapacitated 
	ApplyContext "ManagerFriendlyFire:1:10"
	applycontexttoworld
	Response PlayerFriendlyFireManager
}

Response PlayerFriendlyFire2Manager
{
	scene "scenes/Manager/TeamKillAccident01.vcd" then subject PlayerSorry foo:0 0.1 //Woah man, you gotta be careful.
	scene "scenes/Manager/TeamKillAccident02.vcd" then subject PlayerSorry foo:0 0.1 //Woah man, you gotta be careful.
	scene "scenes/Manager/TeamKillAccident03.vcd" then subject PlayerSorry foo:0 0.1 //What the hell man?
	scene "scenes/Manager/TeamKillAccident04.vcd" then subject PlayerSorry foo:0 0.1 //Be careful, what are you doing?
}
Rule PlayerFriendlyFire2Manager
{
	criteria ConceptPlayerFriendlyFire IsNotCoughing IsManager IsNotManagerFriendlyFire IsDamageTypeBullet IsManagerFriendlyFire IsTalk IsTalkManager
	ApplyContext "ManagerFriendlyFire:1:3"
	applycontexttoworld
	Response PlayerFriendlyFire2Manager
}

Response PlayerFriendlyFireFromBillManager
{
	scene "scenes/Manager/Manager_FriendlyFireBill01.vcd" then namvet PlayerSorry foo:0 0.1  //Old man, stop shooting me!
	scene "scenes/Manager/Manager_FriendlyFireBill02.vcd" then namvet PlayerSorry foo:0 0.1  //Whoah, whoah whoah! Jesus, Bill, what are you doing?
	scene "scenes/Manager/Manager_FriendlyFireBill03.vcd" then namvet PlayerSorry foo:0 0.1  //William! Come on, man!
	scene "scenes/Manager/Manager_FriendlyFireBill04.vcd" then namvet PlayerSorry foo:0 0.1  //Watch it, Bill!
	scene "scenes/Manager/Manager_FriendlyFireBill05.vcd" then namvet PlayerSorry foo:0 0.1  //[angry] Bill!
	scene "scenes/Manager/Manager_FriendlyFireBill08.vcd" then namvet PlayerSorry foo:0 0.1  //[angry] Bill!
	scene "scenes/Manager/Manager_FriendlyFireBill09.vcd" then namvet PlayerSorry foo:0 0.1  //[angry] Bill!
	scene "scenes/Manager/C6DLC3FIRSTSAFEROOM03.vcd" then namvet PlayerSorry foo:0 0.1  //\Bill's an idiot.\
	scene "scenes/Manager/C6DLC3FIRSTSAFEROOM04.vcd" then namvet PlayerSorry foo:0 0.1  //\Bill's an idiot.\
}
Rule PlayerFriendlyFireFromBillManager
{
	criteria ConceptPlayerFriendlyFire IsNotCoughing IsManager IsNotManagerFriendlyFire IsDamageTypeBullet IsTalk IsTalkManager SubjectIsNamVet IsNotIncapacitated 
	ApplyContext "ManagerFriendlyFire:1:10"
	applycontexttoworld
	Response PlayerFriendlyFireFromBillManager
}

Response PlayerFriendlyFireFromFrancisManager
{
	scene "scenes/Manager/Manager_FriendlyFireFrancis01.vcd" then biker PlayerSorry foo:0 0.1 //Francis, that's MY ass your shootin'.
	scene "scenes/Manager/Manager_FriendlyFireFrancis02.vcd" then biker PlayerSorry foo:0 0.1  //Francis, What the HELL is wrong with you?
	scene "scenes/Manager/Manager_FriendlyFireFrancis06.vcd" then biker PlayerSorry foo:0 0.1  //[angry] Francis!
	scene "scenes/Manager/Manager_FriendlyFireFrancis07.vcd" then biker PlayerSorry foo:0 0.1  //Go on do it one more time, fat man.
	scene "scenes/Manager/Manager_FriendlyFireFrancis08.vcd" then biker PlayerSorry foo:0 0.1  //[angry] Francis!
	scene "scenes/Manager/NameFrancis01.vcd" then biker PlayerSorry foo:0 0.1  //Francis! (loud)
	scene "scenes/Manager/C6DLC3FIRSTSAFEROOM05.vcd" then biker PlayerSorry foo:0 0.1  //\Francis is an idiot too.\
}
Rule PlayerFriendlyFireFromFrancisManager
{
	criteria ConceptPlayerFriendlyFire IsNotCoughing IsManager IsNotManagerFriendlyFire IsDamageTypeBullet IsTalk IsTalkManager SubjectIsBiker IsNotIncapacitated 
	ApplyContext "ManagerFriendlyFire:1:10"
	applycontexttoworld
	Response PlayerFriendlyFireFromFrancisManager
}

Response PlayerFriendlyFireFromZoeyManager
{
	scene "scenes/Manager/Manager_FriendlyFireZoey02.vcd" then teengirl PlayerSorry foo:0 0.1 //You gotta stop that shit, Zoey!
	scene "scenes/Manager/Manager_FriendlyFireZoey05.vcd" then teengirl PlayerSorry foo:0 0.1 //[angry] Zoey!
	scene "scenes/Manager/Manager_FriendlyFireZoey07.vcd" then teengirl PlayerSorry foo:0 0.1 //[angry] Zoey!
	scene "scenes/Manager/NameZoey01.vcd" then teengirl PlayerSorry foo:0 0.1 //Zoey! (loud)
}
Rule PlayerFriendlyFireFromZoeyManager
{
	criteria ConceptPlayerFriendlyFire IsNotCoughing IsManager IsNotManagerFriendlyFire IsDamageTypeBullet IsTalk IsTalkManager SubjectIsTeenGirl IsNotIncapacitated 
	ApplyContext "ManagerFriendlyFire:1:10"
	applycontexttoworld
	Response PlayerFriendlyFireFromZoeyManager
}

Response PlayerFriendlyFireNoBulletManager
{
	scene "scenes/Manager/C6DLC3SECONDSAFEROOM37.vcd" then subject PlayerSorry foo:0 0.1 //Are you joking?
	scene "scenes/Manager/FriendlyFire02.vcd" then subject PlayerSorry foo:0 0.1 //AH! Will you knock it off?
	scene "scenes/Manager/FriendlyFire06.vcd" then subject PlayerSorry foo:0 0.1 //Hey, man, that's not cool.
	scene "scenes/Manager/FriendlyFire10.vcd" then subject RespondAffirmative foo:0 0.1 //Look at my face, do I look like them?
	scene "scenes/Manager/FriendlyFire13.vcd" then subject PlayerSorry foo:0 0.1 //Ahhh Mother
	scene "scenes/Manager/GenericResponses03.vcd" then subject PlayerSorry foo:0 0.1 //You're joking, right?
	scene "scenes/Manager/TeamKillAccident01.vcd" then subject PlayerSorry foo:0 0.1 //Woah man, you gotta be careful.
	scene "scenes/Manager/TeamKillAccident02.vcd" then subject PlayerSorry foo:0 0.1 //Woah man, you gotta be careful.
	scene "scenes/Manager/TeamKillAccident03.vcd" then subject PlayerSorry foo:0 0.1 //What the hell man?
	scene "scenes/Manager/TeamKillAccident04.vcd" then subject PlayerSorry foo:0 0.1 //Be careful, what are you doing?
}
Rule PlayerFriendlyFireNoBulletManager
{
	criteria ConceptPlayerFriendlyFire IsNotCoughing IsManager IsNotManagerFriendlyFire IsNotDamageTypeBullet IsTalk IsTalkManager IsNotIncapacitated 
	ApplyContext "ManagerFriendlyFire:1:10"
	Response PlayerFriendlyFireNoBulletManager
}

Response SurvivorTauntResponseManager
{
	
	scene "scenes/Manager/GenericResponses40.vcd"  //Hell yeah.
	scene "scenes/Manager/Hurrah01.vcd"  //Aw riiiight!
	scene "scenes/Manager/Hurrah02.vcd"  //Woo baby, Aw riiiight!
	scene "scenes/Manager/Hurrah03.vcd"  //Hell yeah.
	scene "scenes/Manager/Hurrah14.vcd"  //YEAH!
	scene "scenes/Manager/Hurrah15.vcd"  //YEAH WOO!
	scene "scenes/Manager/ReactionPositive05.vcd"  //Allright!
	scene "scenes/Manager/ReactionPositive06.vcd"  //Heh hehhhh.
	scene "scenes/Manager/ReactionPositive07.vcd"  //Nice!
	scene "scenes/Manager/ReactionPositive09.vcd"  //Sweet Baby!
	scene "scenes/Manager/Taunt01.vcd"  //That's right!
	scene "scenes/Manager/Taunt02.vcd"  //Woo Hoo, that's right!
	scene "scenes/Manager/Taunt03.vcd"  //Yeah, baby, Yeah!
	scene "scenes/Manager/Taunt04.vcd"  //Alllright!
	scene "scenes/Manager/Taunt05.vcd"  //Oh yeah, who's your momma, who's your daddy
	scene "scenes/Manager/Taunt06.vcd"  //Helll yeah, Hell yeah!
	scene "scenes/Manager/Taunt07.vcd"  //[loud, evil laugh]
	scene "scenes/Manager/Taunt08.vcd"  //[loud, evil laugh]
	scene "scenes/Manager/Taunt09.vcd"  //[loud, evil laugh]
	scene "scenes/Manager/Taunt10.vcd"  //[loud, evil laugh]
	scene "scenes/Manager/DLC2SwearCoupDeGrace17.vcd"  //[loud, evil laugh]
}
Rule SurvivorTauntResponseManager
{
	criteria ConceptPlayerTaunt IsSurvivor IsNotSpeaking IsNotCoughing IsManager IsTalk IsTalkManager
	Response SurvivorTauntResponseManager
}


//--------------------------------------------------------------------------------------------------------------
// Not Rosetta - ZResponses
//--------------------------------------------------------------------------------------------------------------
Rule EmphaticArriveRunFarmManager
{
	criteria ConceptEmphaticArriveRunFarm IsNotCoughing IsManager IsTalkManager
	Response PlayerYellRunManager
}


//--------------------------------------------------------------------------------------------------------------
// Player File
//--------------------------------------------------------------------------------------------------------------
Response PlayerChokeResponseManager
{
	scene "scenes/Manager/Choke01.vcd" then any FriendNeedsHelp foo:0 0 //[Choking]
	scene "scenes/Manager/Choke02.vcd" then any FriendNeedsHelp foo:0 0 //[Choking]
	scene "scenes/Manager/Choke03.vcd" then any FriendNeedsHelp foo:0 0 //[Choking]
	scene "scenes/Manager/Choke04.vcd" then any FriendNeedsHelp foo:0 0 //[Choking]
	scene "scenes/Manager/Choke05.vcd" then any FriendNeedsHelp foo:0 0 //[Choking]
	scene "scenes/Manager/Choke06.vcd" then any FriendNeedsHelp foo:0 0 //[Choking]
	scene "scenes/Manager/Choke07.vcd" then any FriendNeedsHelp foo:0 0 //[Choking]
	scene "scenes/Manager/Choke08.vcd" then any FriendNeedsHelp foo:0 0 //[Choking]
	scene "scenes/Manager/Cough01.vcd"  //[Coughing from smoke]
	scene "scenes/Manager/Cough02.vcd"  //[Coughing from smoke]
	scene "scenes/Manager/Cough03.vcd"  //[Coughing from smoke]
	scene "scenes/Manager/Cough04.vcd"  //[Coughing from smoke]
	scene "scenes/Manager/Cough05.vcd"  //[Coughing from smoke]
}
Rule PlayerChokeResponseManager
{
	criteria ConceptPlayerChoke IsSurvivor IsManager IsTalk IsTalkManager
	Response PlayerChokeResponseManager
}

Response PlayerTonguePullStartResponseManager
{
	scene "scenes/Manager/GrabbedBySmoker01a.vcd"  //no, No, NO, NO!!!!!
	scene "scenes/Manager/GrabbedBySmoker01b.vcd"  //no, No, NO, NO!!!!!
	scene "scenes/Manager/GrabbedBySmoker02a.vcd"  //no, No, NO, NOOOOOOO!!!!!!!!!
	scene "scenes/Manager/GrabbedBySmoker02b.vcd"  //no, No, NO, NOOOOOOO!!!!!!!!!
	scene "scenes/Manager/GrabbedBySmoker03a.vcd"  //no, No, NO, NOOOOOOO!!!!!!!!!
	scene "scenes/Manager/GrabbedBySmoker03b.vcd"  //no, No, NO, NOOOOOOO!!!!!!!!!
	scene "scenes/Manager/GrabbedBySmoker04.vcd"  //no, No, NO, NOOOOOOO!!!!!!!!!
}
Rule PlayerTonguePullStartResponseManager
{
	criteria ConceptPlayerTonguePullStart IsSurvivor IsManager IsTalk IsTalkManager
	Response PlayerTonguePullStartResponseManager
}

Response PlayerWitchChasingManager
{
	scene "scenes/Manager/Help02.vcd" then any PlayerToTheRescue foo:0 0 //I need some help over here!
	scene "scenes/Manager/Help03.vcd" then any PlayerToTheRescue foo:0 0 //Need a little help over here!
	scene "scenes/Manager/Help07.vcd" then any PlayerToTheRescue foo:0 0 //I'm in trouble!
	scene "scenes/Manager/Help08.vcd" then any PlayerToTheRescue foo:0 0 //I need some help!
	scene "scenes/Manager/Help09.vcd" then any PlayerToTheRescue foo:0 0 //Somebody help me!
}
Rule PlayerWitchChasingManager
{
	criteria ConceptPlayerExertionMinor IsManager IsNotSpeaking IsWitchPresent SubjectIsNotWitch IsNotSaidManagerWitchChasing IsSaidManagerWitchAttacking
	ApplyContext "SaidManagerWitchChasing:1:5,TalkManager:1:2"
	Response PlayerWitchChasingManager
}

Response PlayerWitchStartAttackManager
{
	scene "scenes/Manager/FallShort02.vcd"  //ohhh nooooo
	scene "scenes/Manager/DLC2SwearCoupDeGrace17.vcd"  //Oh it's BITCH apocalypse now, bitch. // test
	scene "scenes/Manager/PlayerTransitionClose02.vcd"  //Dammit.
	scene "scenes/Manager/ReactionNegative04.vcd"  //ah, Jesus.
	scene "scenes/Manager/Swears02.vcd"  //Dammit.
	scene "scenes/Manager/Swears03.vcd"  //Aw hell.
	scene "scenes/Manager/Swears06.vcd"  //Ah shit.
	scene "scenes/Manager/Swears07.vcd"  //Shit shit shit.
}
Rule PlayerWitchStartAttackManager
{
	criteria ConceptWitchStartAttack IsManager Iswitch_aggro_onManager
	ApplyContext "SaidManagerWitchAttacking:1:15,TalkManager:1:2"
	Response PlayerWitchStartAttackManager
}

Response SurvivorCriticalHurtManager
{
	scene "scenes/Manager/HurtCritical01.vcd"  //[Pain noise - loud major pain]
	scene "scenes/Manager/HurtCritical02.vcd"  //[Pain noise - loud major pain]
	scene "scenes/Manager/HurtCritical03.vcd"  //[Pain noise - loud major pain]
	scene "scenes/Manager/HurtCritical04.vcd"  //[Pain noise - loud major pain]
	scene "scenes/Manager/HurtCritical05.vcd"  //[Pain noise - loud major pain]
}
Rule SurvivorCriticalHurtManager
{
	criteria IsSurvivor InPain IsCriticalPain IsManager IsTalk IsTalkManager SubjectIsNotJockey
	Response SurvivorCriticalHurtManager
}

Response SurvivorIncapacitatedHurtManager
{
	scene "scenes/Manager/IncapacitatedInjury01.vcd"  //[Ahhhh - terrified yell]
	scene "scenes/Manager/IncapacitatedInjury02.vcd"  //[Ahhhh - terrified yell]
	scene "scenes/Manager/IncapacitatedInjury03.vcd"  //[Ahhhh - terrified yell]
}
Rule SurvivorIncapacitatedHurtManager
{
	criteria IsSurvivor InPain IsNotSpeaking IsIncapacitatedPain IsManager IsTalk IsTalkManager
	Response SurvivorIncapacitatedHurtManager
}

Response SurvivorJockeyHurtMajorManager
{
	scene "scenes/Manager/HurtCritical01.vcd" then any CommentJockey foo:0 0 //[Pain noise - loud major pain]
	scene "scenes/Manager/HurtCritical02.vcd" then any CommentJockey foo:0 0 //[Pain noise - loud major pain]
	scene "scenes/Manager/HurtCritical03.vcd" then any CommentJockey foo:0 0 //[Pain noise - loud major pain]
	scene "scenes/Manager/HurtMajor08.vcd" then any CommentJockey foo:0 0 //[Pain noise - ugh]
	scene "scenes/Manager/ScreamWhilePounced01.vcd" then any CommentJockey foo:0 0 //Get it off me! Get it off me!
	scene "scenes/Manager/ScreamWhilePounced02.vcd" then any CommentJockey foo:0 0 //GET IT GET IT Get it off me! Get it off me!
	scene "scenes/Manager/ScreamWhilePounced03.vcd" then any CommentJockey foo:0 0 //GET IT GET IT Get it off me! Get it off me!
}
Rule SurvivorJockeyHurtMajorManager
{
	criteria IsSurvivor InPain IsMajorPain IsManager IsTalk IsTalkManager SubjectIsJockey IsNotSaidBeenJockeyedManager IsWorldTalkManager IsBeingJockeyed
	ApplyContext "SaidBeenJockeyedManager:1:6,_auto_NoSpotting:1:4"
	applycontexttoworld
	Response SurvivorJockeyHurtMajorManager
}

Rule SurvivorJockeyHurtMinorManager
{
	criteria IsSurvivor InPain IsMinorPain IsManager IsTalk IsTalkManager SubjectIsJockey IsNotSaidBeenJockeyedManager IsWorldTalkManager IsBeingJockeyed
	ApplyContext "SaidBeenJockeyedManager:1:6,_auto_NoSpotting:1:4"
	applycontexttoworld
	Response SurvivorJockeyHurtMajorManager
}

Response SurvivorMajorHurtManager
{
	scene "scenes/Manager/HurtMajor01.vcd"  //[Pain noise - huh]
	scene "scenes/Manager/HurtMajor02.vcd"  //[Pain noise - ahh]
	scene "scenes/Manager/HurtMajor03.vcd"  //[Pain noise - oy]
	scene "scenes/Manager/HurtMajor04.vcd"  //[Pain noise - oy]
	scene "scenes/Manager/HurtMajor05.vcd"  //[Pain noise - ugh]
	scene "scenes/Manager/HurtMajor06.vcd"  //[Pain noise - ugh]
	scene "scenes/Manager/HurtMajor07.vcd"  //[Pain noise - ugh]
	scene "scenes/Manager/HurtMajor08.vcd"  //[Pain noise - ugh]
	scene "scenes/Manager/HurtMajor09.vcd"  //[Pain noise - ugh]
	scene "scenes/Manager/HurtMajor10.vcd"  //[Pain noise - ugh]
}
Rule SurvivorMajorHurtManager
{
	criteria IsSurvivor InPain IsMajorPain IsManager IsTalk IsTalkManager SubjectIsNotJockey
	Response SurvivorMajorHurtManager
}

Response SurvivorMinorHurtManager
{
	scene "scenes/Manager/HurtMinor01.vcd"  //[Pain noise - short minor pain]
	scene "scenes/Manager/HurtMinor02.vcd"  //[Pain noise - short minor pain]
	scene "scenes/Manager/HurtMinor03.vcd"  //[Pain noise - short minor pain]
	scene "scenes/Manager/HurtMinor04.vcd"  //[Pain noise - short minor pain]
	scene "scenes/Manager/HurtMinor05.vcd"  //[Pain noise - short minor pain]
	scene "scenes/Manager/HurtMinor06.vcd"  //[Pain noise - short minor pain]
	scene "scenes/Manager/HurtMinor07.vcd"  //[Pain noise - short minor pain]
	scene "scenes/Manager/HurtMinor08.vcd"  //[Pain noise - short minor pain]
	
	scene "scenes/Manager/Shoved01.vcd"  //[Pain noise - short minor pain]
	scene "scenes/Manager/Shoved02.vcd"  //[Pain noise - short minor pain]
	scene "scenes/Manager/Shoved03.vcd"  //[Pain noise - short minor pain]
	scene "scenes/Manager/Shoved04.vcd"  //[Pain noise - short minor pain]
	scene "scenes/Manager/Shoved05.vcd"  //[Pain noise - short minor pain]
}
Rule SurvivorMinorHurtManager
{
	criteria IsSurvivor InPain IsMinorPain IsManager IsTalk IsTalkManager SubjectIsNotJockey
	Response SurvivorMinorHurtManager
}

Response SurvivorReloadingManager
{
	scene "scenes/Manager/Reloading01.vcd"  //Reloading! // test
	scene "scenes/Manager/Reloading02.vcd"  //Reloading!
	scene "scenes/Manager/Reloading03.vcd"  //Reloading!
}
Rule SurvivorReloadingManager
{
	criteria ConceptPlayerReloading IsSurvivor IsNotSpeaking IsManager IsNotIncapacitated IsTalk IsTalkManager RecentGroupInCombat10 HasNotgrenadelauncher
	Response SurvivorReloadingManager
}


//--------------------------------------------------------------------------------------------------------------
// Player Help Incapped
//--------------------------------------------------------------------------------------------------------------
Response PlayerHelpIncappedManager
{
	scene "scenes/Manager/C6DLC3JUMPINGOFFBRIDGE19.vcd"  //Hey guys? Remember when I said don't come after me? I was kidding, can someone come get me?  HELP!!!!
	scene "scenes/Manager/C6DLC3JUMPINGOFFBRIDGE01.vcd"  //Hey guys? Remember when I said don't come after me? I was kidding, can someone come get me?  HELP!!!!
	scene "scenes/Manager/C6DLC3JUMPINGOFFBRIDGE09.vcd"  //Hey guys? Remember when I said don't come after me? I was kidding, can someone come get me?  HELP!!!!
	scene "scenes/Manager/C6DLC3JUMPINGOFFBRIDGE06.vcd"  //Hey guys? Remember when I said don't come after me? I was kidding, can someone come get me?  HELP!!!!
	scene "scenes/Manager/C6DLC3JUMPINGOFFBRIDGE12.vcd"  //Hey guys? Remember when I said don't come after me? I was kidding, can someone come get me?  HELP!!!!
	scene "scenes/Manager/C6DLC3JUMPINGOFFBRIDGE11.vcd"  //Hey guys? Remember when I said don't come after me? I was kidding, can someone come get me?  HELP!!!!
	scene "scenes/Manager/C6DLC3JUMPINGOFFBRIDGE18.vcd"  //Hey guys? Remember when I said don't come after me? I was kidding, can someone come get me?  HELP!!!!
	scene "scenes/Manager/Help01.vcd"  then any FriendNeedsHelp foo:0 0 //Help!
	scene "scenes/Manager/Help02.vcd"  then any FriendNeedsHelp foo:0 0 //I need some help over here!
	scene "scenes/Manager/Help03.vcd"  then any FriendNeedsHelp foo:0 0 //Need a little help over here!
	scene "scenes/Manager/Help04.vcd"  then any FriendNeedsHelp foo:0 0 //Dammit, I need some help!
	scene "scenes/Manager/Help05.vcd"  then any FriendNeedsHelp foo:0 0 //Help me!
	scene "scenes/Manager/Help06.vcd"  then any FriendNeedsHelp foo:0 0 //Help!
	scene "scenes/Manager/Help07.vcd"  then any FriendNeedsHelp foo:0 0 //I'm in trouble!
	scene "scenes/Manager/Help08.vcd"  then any FriendNeedsHelp foo:0 0 //I need some help!
	scene "scenes/Manager/Help09.vcd"  then any FriendNeedsHelp foo:0 0 //Somebody help me!
	scene "scenes/Manager/Help10.vcd"  then any FriendNeedsHelp foo:0 0 //Can you hear me? I need some help!
	scene "scenes/Manager/Help11.vcd"  then any FriendNeedsHelp foo:0 0 //What part of help do you not understand?  Help!
	scene "scenes/Manager/Dying01.vcd"  then any FriendNeedsHelp foo:0 0 //Guys! I need help now!
	scene "scenes/Manager/Dying02.vcd"  then any FriendNeedsHelp foo:0 0 //Yo, I need some help RIGHT NOW!
	scene "scenes/Manager/Dying03.vcd"  then any FriendNeedsHelp foo:0 0 //Yo, I need help right the hell now!
	scene "scenes/Manager/Dying04.vcd"  then any FriendNeedsHelp foo:0 0 //I need help right the hell now!
}
Rule PlayerHelpIncappedManager
{
	criteria ConceptPlayerHelp IsManager IsTalk IsTalkManager IsIncapacitated NotCalledForHelpRecently
	ApplyContext "CalledForHelp:1:20"
	Response PlayerHelpIncappedManager
}


//--------------------------------------------------------------------------------------------------------------
// PlayerIncappedResponse
//--------------------------------------------------------------------------------------------------------------
Response HelpResponseBillManager
{
	scene "scenes/Manager/InsideSafeRoom03.vcd" then any RespondAffirmative foo:0 0 //Come on, I'd want them to come for me.
	scene "scenes/Manager/InsideSafeRoom05.vcd" then any RespondAffirmative foo:0 0 //We cannot leave anyone behind
	scene "scenes/Manager/InsideSafeRoom07.vcd" then any RespondAffirmative foo:0 0 //What you waitin' for, let's go help him!
}
Rule HelpResponseBillManager
{
	criteria ConceptFriendNeedsHelp IsManager IsTalk IsTalkManager IsNotIncapacitated IsInSafeSpot FromIsNamVet IsNotInStartArea NotAloneInSafeSpot
	Response HelpResponseBillManager
}

Response HelpResponseFrancisManager
{
	scene "scenes/Manager/InsideSafeRoom01.vcd" then any RespondAffirmative foo:0 0 //I'm no hero, but we can't just leave 'em out there.
	scene "scenes/Manager/InsideSafeRoom05.vcd" then any RespondAffirmative foo:0 0 //We cannot leave anyone behind
	scene "scenes/Manager/InsideSafeRoom07.vcd" then any RespondAffirmative foo:0 0 //What you waitin' for, let's go help him!
}
Rule HelpResponseFrancisManager
{
	criteria ConceptFriendNeedsHelp IsManager IsTalk IsTalkManager IsNotIncapacitated IsInSafeSpot FromIsBiker IsNotInStartArea NotAloneInSafeSpot
	Response HelpResponseFrancisManager
}

Response HelpResponseZoeyManager
{
	scene "scenes/Manager/InsideSafeRoom02.vcd" then any RespondAffirmative foo:0 0 //I am NOT leaving Zoey behind!
	scene "scenes/Manager/InsideSafeRoom05.vcd" then any RespondAffirmative foo:0 0 //We cannot leave anyone behind
	scene "scenes/Manager/InsideSafeRoom08.vcd" then any RespondAffirmative foo:0 0 //What you waitin' for, let's go help her!
}
Rule HelpResponseZoeyManager
{
	criteria ConceptFriendNeedsHelp IsManager IsTalk IsTalkManager IsNotIncapacitated IsInSafeSpot FromIsTeenGirl IsNotInStartArea NotAloneInSafeSpot
	Response HelpResponseZoeyManager
}


//--------------------------------------------------------------------------------------------------------------
// Remarkable Vocalize
//--------------------------------------------------------------------------------------------------------------
Response hospital02_path03a1
{
	scene "scenes/Manager/WorldHospital0206.vcd"  //Allright, no problem. Now we gotta get out of the subway.
}
Rule hospital02_path03a1
{
	criteria Concepthospital02_path03a1 IsManager IsTalk IsTalkManager IsSubjectNear400 NotInCombat
	Response hospital02_path03a1
}

Response hospital03_path03a1
{
	scene "scenes/Manager/WorldHospital0326.vcd" then any PlayerImWithYou foo:0 0 //Hurry!
	scene "scenes/Manager/WorldHospital0327.vcd" then any PlayerImWithYou foo:0 0 //Hurry!
	scene "scenes/Manager/WorldHospital0421.vcd" then any PlayerImWithYou foo:0 0 //Hurry up.
}
Rule hospital03_path03a1
{
	criteria Concepthospital03_path03a1 IsManager IsTalk IsTalkManager IsSubjectNear400 NotInCombat
	Response hospital03_path03a1
}

Response PlayeGoingToDie3VampireaManager
{
	scene "scenes/Manager/Generic26.vcd"  then Biker VampiresBeatb foo:0 0 //They ain't vampires, man, they're zombies.
}
Rule PlayeGoingToDie3VampireaManager
{
	criteria ConceptVampiresBeata IsManager     
	Response PlayeGoingToDie3VampireaManager
}

Response PlayerAirport02CraneStartedManager
{
	scene "scenes/Manager/ZombieGenericShort14.vcd" then any PlayerLaugh foo:0 0 //Stay positive, guys! I got a good feeling about this.
}
Rule PlayerAirport02CraneStartedManager
{
	criteria Conceptairport02_creshendoCrane IsManager
	ApplyContext "Airport02CraneStarted:1:0"
	applycontexttoworld
	Response PlayerAirport02CraneStartedManager
}

Response Playerairport03_barrieraManager
{
	scene "scenes/Manager/GenericResponses10.vcd"  //Good thinking.
	scene "scenes/Manager/WorldAirportNPC07.vcd"  //Okay, let's do it!
	scene "scenes/Manager/WorldFarmHouseNPC10.vcd"  //Sounds good to me.
}
Rule Playerairport03_barrieraManager
{
	criteria Conceptairport03_barriera IsManager IsNotSaidairport03_barriera IsTalk IsTalkManager IsSubjectNear800 IsNotSaidairport03_barrier
	ApplyContext "Saidairport03_barriera:1:0"
	applycontexttoworld
	Response Playerairport03_barrieraManager
}

Response PlayerAirport03FirePathClearaManager
{
	scene "scenes/Manager/HurryUp10.vcd"  then any Airport03FirePathCleara foo:0 0 //Let's go let's go let's go!
}
Rule PlayerAirport03FirePathClearaManager
{
	criteria ConceptAirport03FirePathCleara IsManager  IsNotCoughing IsTalk IsTalkManager RecentGroupInCombat2
	ApplyContext "SaidAirport03FirePathClear:1:0"
	applycontexttoworld
	Response PlayerAirport03FirePathClearaManager
}

Response PlayerAirport03FireStartedXManager
{
	scene "scenes/Manager/blank.vcd"  //
}
Rule PlayerAirport03FireStartedXManager
{
	criteria ConceptAirport03FireStartedX IsManager  IsNotCoughing  IsTalk IsTalkManager
	ApplyContext "SaidAirport03FireStarted:1:0"
	applycontexttoworld
	Response PlayerAirport03FireStartedXManager
}

Response Playerairport04_05aManager
{
	scene "scenes/Manager/GenericResponses39.vcd"  //Oh no. Ain't no damn way...
	scene "scenes/Manager/No04.vcd"  //Not a chance.
	scene "scenes/Manager/No05.vcd"  //No way, man.
}
Rule Playerairport04_05aManager
{
	criteria Conceptairport04_05a IsManager  IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300
	Response Playerairport04_05aManager
}

Response Playerairport04_08bManager
{
	scene "scenes/Manager/GenericResponses03.vcd"  //You're joking, right?
	scene "scenes/Manager/ViolenceAwe10.vcd"  //Holy shit...
}
Rule Playerairport04_08bManager
{
	criteria Conceptairport04_08b IsManager IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear400
	Response Playerairport04_08bManager
}

Response PlayerFrancisSuggestsCraneManager
{
	scene "scenes/Manager/GenericResponses10.vcd"  //Good thinking.
}
Rule PlayerFrancisSuggestsCraneManager
{
	criteria ConceptFrancisSuggestsCrane IsManager IsNotSaidFrancisSuggestsCrane IsTalk IsTalkManager IsSubjectNear800
	ApplyContext "SaidFrancisSuggestsCrane:1:0"
	applycontexttoworld
	Response PlayerFrancisSuggestsCraneManager
}

Response PlayerLaughFrancisManager
{
	scene "scenes/Manager/Laughter06.vcd"  //<Short laugh>
	scene "scenes/Manager/Laughter07.vcd"  //<Short laugh>
}
Rule PlayerLaughFrancisManager
{
	criteria ConceptLaughFrancis IsManager IsNotSaidLaughFrancis IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300
	ApplyContext "SaidLaughFrancis:1:0"
	applycontexttoworld
	Response PlayerLaughFrancisManager
}

Response PlayerRemarkairport02_creshendo01aManager
{
	scene "scenes/Manager/blank.vcd"  //
}
Rule PlayerRemarkairport02_creshendo01aManager
{
	criteria ConceptRemark IsManager Isairport02_creshendo01a IsNotSaidairport02_creshendo01a IsNotCoughing NotInCombat IsTalk IsTalkManager
	ApplyContext "Saidairport02_creshendo01a:1:30"
	applycontexttoworld
	Response PlayerRemarkairport02_creshendo01aManager
}

Response PlayerRemarkairport03_07Manager
{
	scene "scenes/Manager/SafeSpotAhead06.vcd"  //Safe house!
	scene "scenes/Manager/SafeSpotAhead07.vcd"  //Safe house up ahead!
}
Rule PlayerRemarkairport03_07Manager
{
	criteria ConceptRemark IsManager Isairport03_07 IsNotSaidairport03_07 IsNotCoughing NotInCombat IsTalk IsTalkManager IsNotSaidSafeSpotAhead
	ApplyContext "Saidairport03_07:1:0,SaidSafeSpotAhead:1:90"
	applycontexttoworld
	Response PlayerRemarkairport03_07Manager
}

Response PlayerRemarkairport04_02Manager
{
	scene "scenes/Manager/WorldAirport0402.vcd"  //They really trashed this airport
	scene "scenes/Manager/WorldAirport0403.vcd"  //Man, they really trashed this place
}
Rule PlayerRemarkairport04_02Manager
{
	criteria ConceptRemark IsManager Isairport04_02 IsNotSaidairport04_02 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300
	ApplyContext "Saidairport04_02:1:0"
	applycontexttoworld
	Response PlayerRemarkairport04_02Manager
}

Response PlayerRemarkcrashcourse01_path01Manager
{
	scene "scenes/Manager/DLC2M1Pilot01.vcd"  //Poor guy, he tried to help us.
}
Rule PlayerRemarkcrashcourse01_path01Manager
{
	criteria ConceptRemark IsManager Iscrashcourse01_path01 IsNotSaidcrashcourse01_path01 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "Saidcrashcourse01_path01:1:0"
	applycontexttoworld
	Response PlayerRemarkcrashcourse01_path01Manager
}

Response PlayerRemarkFarm01_path01Manager
{
	scene "scenes/Manager/blank.vcd"  //
}
Rule PlayerRemarkFarm01_path01Manager
{
	criteria ConceptRemark IsManager IsFarm01_path01 IsNotSaidFarm01_path01 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "SaidFarm01_path01:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm01_path01Manager
}

Response PlayerRemarkFarm01_path02Manager
{
	scene "scenes/Manager/FollowMe04.vcd" then any PlayerLeadOn foo:0 0 //This way.
}
Rule PlayerRemarkFarm01_path02Manager
{
	criteria ConceptRemark IsManager IsFarm01_path02 IsNotSaidFarm01_path02 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300
	ApplyContext "SaidFarm01_path02:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm01_path02Manager
}

Response PlayerRemarkFarm01_path03Manager
{
	scene "scenes/Manager/blank.vcd"  //
}
Rule PlayerRemarkFarm01_path03Manager
{
	criteria ConceptRemark IsManager IsFarm01_path03 IsNotSaidFarm01_path03 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300
	ApplyContext "SaidFarm01_path03:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm01_path03Manager
}

Response PlayerRemarkFarm01_path03aManager
{
	scene "scenes/Manager/WorldFarmHouse0101.vcd" then biker PlayerNo foo:0 0 //I bet your country ass DOES like this trailer.
}
Rule PlayerRemarkFarm01_path03aManager
{
	criteria IsManager ConceptFarm01_path03a IsNotCoughing NotInCombat IsTalk IsTalkManager IsBikerNear400
	Response PlayerRemarkFarm01_path03aManager
}

Response PlayerRemarkFarm02_path01Manager
{
	scene "scenes/Manager/FollowMe04.vcd" then any PlayerLeadOn foo:0 0 //This way.
}
Rule PlayerRemarkFarm02_path01Manager
{
	criteria ConceptRemark IsManager IsFarm02_path01 IsNotSaidFarm02_path01 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "SaidFarm02_path01:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm02_path01Manager
}

Response PlayerRemarkFarm02_path02Manager
{
	scene "scenes/Manager/ContextModifierCalm05.vcd" then any PlayerLeadOn foo:0 0 //Down there.
}
Rule PlayerRemarkFarm02_path02Manager
{
	criteria ConceptRemark IsManager IsFarm02_path02 IsNotSaidFarm02_path02 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200 NotSaidFarm02_TracksBelow
	ApplyContext "SaidFarm02_path02:1:0,SaidFarm02_TracksBelow:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm02_path02Manager
}

Response PlayerRemarkFarm02_path02aManager
{
	scene "scenes/Manager/ContextModifierCalm05.vcd"  then Biker Farm02_path02b foo:0 0.05 //Down there.
}
Rule PlayerRemarkFarm02_path02aManager
{
	criteria ConceptRemark IsManager IsFarm02_path02 IsNotSaidFarm02_path02 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200 IsBikerNear125 NotSaidFarm02_TracksBelow
	ApplyContext "SaidFarm02_path02:1:0,SaidFarm02_TracksBelow:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm02_path02aManager
}

Rule PlayerRemarkFarm02_path03Manager
{
	criteria ConceptRemark IsManager IsFarm02_path03 IsNotSaidFarm02_path03 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200 NotSaidFarm02_TracksBelow
	ApplyContext "SaidFarm02_path03:1:0,SaidFarm02_TracksBelow:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm02_path02Manager
}

Rule PlayerRemarkFarm02_path03aManager
{
	criteria ConceptRemark IsManager IsFarm02_path03 IsNotSaidFarm02_path03 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200 NotSaidFarm02_TracksBelow IsBikerNear125
	ApplyContext "SaidFarm02_path03:1:0,SaidFarm02_TracksBelow:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm02_path02aManager
}

Rule PlayerRemarkFarm02_path04Manager
{
	criteria ConceptRemark IsManager IsFarm02_path04 IsNotSaidFarm02_path04 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200 NotSaidFarm02_TracksBelow
	ApplyContext "SaidFarm02_path04:1:0,SaidFarm02_TracksBelow:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm02_path02Manager
}

Rule PlayerRemarkFarm02_path04aManager
{
	criteria ConceptRemark IsManager IsFarm02_path04 IsNotSaidFarm02_path04 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200 NotSaidFarm02_TracksBelow  IsBikerNear125
	ApplyContext "SaidFarm02_path04:1:0,SaidFarm02_TracksBelow:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm02_path02aManager
}

Rule PlayerRemarkFarm02_path05Manager
{
	criteria ConceptRemark IsManager IsFarm02_path05 IsNotSaidFarm02_path05 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200 NotSaidFarm02_TracksBelow
	ApplyContext "SaidFarm02_path05:1:0,SaidFarm02_TracksBelow:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm02_path02Manager
}

Rule PlayerRemarkFarm02_path05aManager
{
	criteria ConceptRemark IsManager IsFarm02_path05 IsNotSaidFarm02_path05 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200 NotSaidFarm02_TracksBelow IsBikerNear125
	ApplyContext "SaidFarm02_path05:1:0,SaidFarm02_TracksBelow:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm02_path02aManager
}

Response PlayerRemarkFarm02_path06Manager
{
	scene "scenes/Manager/WorldSmallTown0112.vcd"  then any RespondAffirmative foo:0 0 //Here's a way down!
}
Rule PlayerRemarkFarm02_path06Manager
{
	criteria ConceptRemark IsManager IsFarm02_path06 IsNotSaidFarm02_path06 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "SaidFarm02_path06:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm02_path06Manager
}

Response PlayerRemarkFarm02_path09Manager
{
	scene "scenes/Manager/GenericDirections03.vcd"  then any RespondAffirmative foo:0 0 //Let's get up that ladder!
}
Rule PlayerRemarkFarm02_path09Manager
{
	criteria ConceptRemark IsManager IsFarm02_path09 IsNotSaidFarm02_path09 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "SaidFarm02_path09:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm02_path09Manager
}

Rule PlayerRemarkFarm02_path10Manager
{
	criteria ConceptRemark IsManager IsFarm02_path10 IsNotSaidFarm02_path10 IsNotCoughing IsTalk IsTalkManager IsSubjectNear400
	ApplyContext "SaidFarm02_path10:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown03_path14Manager
}

Response PlayerRemarkFarm03_path01aManager
{
	scene "scenes/Manager/ZombieGenericShort14.vcd" then any PlayerLaugh foo:0 0 //Stay positive, guys! I got a good feeling about this.
}
Rule PlayerRemarkFarm03_path01aManager
{
	criteria IsManager ConceptFarm03_path01a IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	Response PlayerRemarkFarm03_path01aManager
}

Response PlayerRemarkFarm03_path03Manager
{
	scene "scenes/Manager/GenericDirections06.vcd" then any PlayerLeadOn foo:0 0 //Through this door!
}
Rule PlayerRemarkFarm03_path03Manager
{
	criteria ConceptRemark IsManager IsFarm03_path03 IsNotSaidFarm03_path03 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "SaidFarm03_path03:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm03_path03Manager
}

Response PlayerRemarkFarm03_path06Manager
{
	scene "scenes/Manager/WorldHospital0205.vcd"  then any ResponseSoftDispleasureSwear foo:0 0.05 //Tracks are blocked. We gotta find another way
}
Rule PlayerRemarkFarm03_path06Manager
{
	criteria ConceptRemark IsManager IsFarm03_path06 IsNotSaidFarm03_path06 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300
	ApplyContext "SaidFarm03_path06:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm03_path06Manager
}

Response PlayerRemarkFarm03_path07Manager
{
	scene "scenes/Manager/ReactionDisgusted03.vcd"  //That is some nasty shit.
}
Rule PlayerRemarkFarm03_path07Manager
{
	criteria ConceptRemark IsManager IsFarm03_path07 IsNotSaidFarm03_path07 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear100
	ApplyContext "SaidFarm03_path07:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm03_path07Manager
}

Rule PlayerRemarkFarm03_path09Manager
{
	criteria ConceptRemark IsManager IsFarm03_path09 IsNotSaidFarm03_path09 IsNotCoughing IsTalk IsTalkManager IsSubjectNear400
	ApplyContext "SaidFarm03_path09:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm01_path09Manager
}

Response PlayerRemarkFarm03_path10Manager
{
	scene "scenes/Manager/ContextModifierLoud03.vcd"  then any RespondAffirmative foo:0 0.05 //Up there!
}
Rule PlayerRemarkFarm03_path10Manager
{
	criteria ConceptRemark IsManager IsFarm03_path10 Farm03BridgeDown IsNotSaidFarm03_path10 IsTalk IsTalkManager IsSubjectNear300
	ApplyContext "SaidFarm03_path10:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm03_path10Manager
}

Response PlayerRemarkFarm04_path01aManager
{
	scene "scenes/Manager/blank.vcd"  //
}
Rule PlayerRemarkFarm04_path01aManager
{
	criteria ConceptRemark IsManager IsFarm04_path01 IsNotSaidFarm04_path01 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "SaidFarm04_path01:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm04_path01aManager
}

Response PlayerRemarkFarm04_path04Manager
{
	scene "scenes/Manager/blank.vcd"  //
}
Rule PlayerRemarkFarm04_path04Manager
{
	criteria ConceptRemark IsManager IsFarm04_path04 IsNotSaidFarm04_path04 IsSubjectNear1000 IsTalkManager
	ApplyContext "SaidFarm04_path04:1:0,SaidFarm04_path02:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm04_path04Manager
}

Rule PlayerRemarkFarm04_path05Manager
{
	criteria ConceptRemark IsManager IsFarm04_path05 IsNotSaidFarm04_path05 IsSubjectNear600 IsTalkManager
	ApplyContext "SaidFarm04_path05:1:0,SaidFarm04_path02:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm04_path04Manager
}

Response PlayerRemarkFarm04_path06Manager
{
	scene "scenes/Manager/blank.vcd"  //
}
Rule PlayerRemarkFarm04_path06Manager
{
	criteria ConceptRemark IsManager IsFarm04_path06 IsNotSaidFarm04_path06 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear500
	ApplyContext "SaidFarm04_path06:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm04_path06Manager
}

Response PlayerRemarkFarm04_path07Manager
{
	scene "scenes/Manager/GenericDirections01.vcd" then any PlayerLeadOn foo:0 0 //Up the stairs!
}
Rule PlayerRemarkFarm04_path07Manager
{
	criteria ConceptRemark IsManager IsFarm04_path07 IsNotSaidFarm04_path07 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "SaidFarm04_path07:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm04_path07Manager
}

Response PlayerRemarkFarm04_path08Manager
{
	scene "scenes/Manager/GenericDirections05.vcd" then any PlayerLeadOn foo:0 0 //Through here!
}
Rule PlayerRemarkFarm04_path08Manager
{
	criteria ConceptRemark IsManager IsFarm04_path08 IsNotSaidFarm04_path08 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "SaidFarm04_path08:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm04_path08Manager
}

Response PlayerRemarkFarm04_path09Manager
{
	scene "scenes/Manager/SafeSpotAhead07.vcd"  then any SafeSpotAheadResponse foo:0 0.05 //Safe house up ahead!
}
Rule PlayerRemarkFarm04_path09Manager
{
	criteria ConceptRemark IsManager IsFarm04_path09 IsNotSaidFarm04_path09 IsNotCoughing IsTalk IsTalkManager IsSubjectNear1000
	ApplyContext "SaidFarm04_path09:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm04_path09Manager
}

Response PlayerRemarkFarm04_path10Manager
{
	scene "scenes/Manager/ViolenceAwe08.vcd"  //Jee-zus...
}
Rule PlayerRemarkFarm04_path10Manager
{
	criteria ConceptRemark IsManager IsFarm04_path10 IsNotSaidFarm04_path10 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear100
	ApplyContext "SaidFarm04_path10:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm04_path10Manager
}

Rule PlayerRemarkFarm05_path01Manager
{
	criteria ConceptRemark IsManager IsFarm05_path01 IsNotSaidFarm05_path01 IsNotSaidFarm05_path02 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "SaidFarm05_path01:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm03_path06Manager
}

Rule PlayerRemarkFarm05_path02Manager
{
	criteria ConceptRemark IsManager IsFarm05_path02 IsNotSaidFarm05_path02 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear400
	ApplyContext "SaidFarm05_path02:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm02_path09Manager
}

Response PlayerRemarkFarm05_path08Manager
{
	scene "scenes/Manager/FinaleAhead02.vcd"  //We're almost out of here!
}
Rule PlayerRemarkFarm05_path08Manager
{
	criteria ConceptRemark IsManager IsFarm05_path08 IsNotSaidFarm05_path09 IsNotSaidFarm05_path10 IsNotSaidFarm05_path08 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear500
	ApplyContext "SaidFarm05_path08:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm05_path08Manager
}

Rule PlayerRemarkFarm05_path09Manager
{
	criteria ConceptRemark IsManager IsFarm05_path09 IsNotSaidFarm05_path09 IsNotSaidFarm05_path08 IsNotSaidFarm05_path10 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300
	ApplyContext "SaidFarm05_path09:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm05_path08Manager
}

Rule PlayerRemarkFarm05_path10Manager
{
	criteria ConceptRemark IsManager IsFarm05_path10 IsNotSaidFarm05_path10 IsNotSaidFarm05_path09 IsNotSaidFarm05_path08 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "SaidFarm05_path10:1:0,SaidFarm05_path08:1:0"
	applycontexttoworld
	Response PlayerRemarkFarm05_path08Manager
}

Response PlayerRemarkhospital01_path01Manager
{
	scene "scenes/Manager/WorldHospital0102.vcd" then any PlayerLeadOn foo:0 0 //Subway station's just around the corner!
	scene "scenes/Manager/WorldHospital0103.vcd" then any PlayerLeadOn foo:0 0 //The Station's just up the street.
}
Rule PlayerRemarkhospital01_path01Manager
{
	criteria ConceptRemark IsManager Ishospital01_path01 IsNotSaidhospital01_path01 IsNotCoughing NotInCombat IsSubjectAlmostNear IsTalk IsTalkManager
	ApplyContext "Saidhospital01_path01:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital01_path01Manager
}

Response PlayerRemarkhospital01_path02Manager
{
	scene "scenes/Manager/WorldHospital0107.vcd" then any PlayerLeadOn foo:0 0 //This way!
	scene "scenes/Manager/WorldHospital0109.vcd" then any PlayerLeadOn foo:0 0 //Station's up the street!
}
Rule PlayerRemarkhospital01_path02Manager
{
	criteria ConceptRemark IsManager Ishospital01_path02 IsNotSaidhospital01_path02 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectAlmostNear
	ApplyContext "Saidhospital01_path02:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital01_path02Manager
}

Response PlayerRemarkhospital01_path03Manager
{
	scene "scenes/Manager/WorldHospital0105.vcd"  then Any SafeSpotAheadResponse foo:0 0 //There's the station!
	scene "scenes/Manager/WorldHospital0106.vcd"  then Any SafeSpotAheadResponse foo:0 0 //Get to the station!
	scene "scenes/Manager/WorldHospital0108.vcd"  then Any SafeSpotAheadResponse foo:0 0 //There it is!
}
Rule PlayerRemarkhospital01_path03Manager
{
	criteria ConceptRemark IsManager Ishospital01_path03 IsNotSaidhospital01_path03 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear
	ApplyContext "Saidhospital01_path03:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital01_path03Manager
}

Response PlayerRemarkhospital02_path02Manager
{
	scene "scenes/Manager/WorldHospital0201.vcd" then any PlayerLeadOn foo:0 0 //Red Line North is the way.
	scene "scenes/Manager/WorldHospital0202.vcd" then any RespondAffirmative foo:0 0 //We gotta take the Red Line North to Mercy Hospital.
	scene "scenes/Manager/WorldHospital0203.vcd" then any RespondAffirmative foo:0 0 //The red line will take us to Mercy.
}
Rule PlayerRemarkhospital02_path02Manager
{
	criteria ConceptRemark IsManager Ishospital02_path02 IsNotSaidhospital02_path02 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear500
	ApplyContext "Saidhospital02_path02:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital02_path02Manager
}

Response PlayerRemarkhospital02_path03Manager
{
	scene "scenes/Manager/WorldHospital0204.vcd"  then NamVet hospital02_path03b1 foo:0 0 //Damn, the line's blocked.
	scene "scenes/Manager/WorldHospital0205.vcd"  then Manager hospital02_path03c1 foo:0 0 //Tracks are blocked. We gotta find another way
}
Rule PlayerRemarkhospital02_path03Manager
{
	criteria ConceptRemark IsManager Ishospital02_path03 IsNotSaidhospital02_path03 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear900
	ApplyContext "Saidhospital02_path03:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital02_path03Manager
}

Response PlayerRemarkhospital02_path04Manager
{
	scene "scenes/Manager/WorldHospital0207.vcd"  //Safe house in the pawnshop!
	scene "scenes/Manager/WorldHospital0208.vcd"  //Get to the pawnshop!
}
Rule PlayerRemarkhospital02_path04Manager
{
	criteria ConceptRemark IsManager Ishospital02_path04 IsNotSaidhospital02_path04 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear400
	ApplyContext "Saidhospital02_path04:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital02_path04Manager
}

Response PlayerRemarkhospital02_safehouseManager
{
	scene "scenes/Manager/SafeSpotAhead05.vcd"  //There's the safe house!
	scene "scenes/Manager/SafeSpotAhead06.vcd"  //Safe house!
	scene "scenes/Manager/SafeSpotAhead07.vcd"  //Safe house up ahead!
}
Rule PlayerRemarkhospital02_safehouseManager
{
	criteria ConceptRemark IsManager Ishospital02_safehouse IsNotSaidhospital02_safehouse IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear1000
	ApplyContext "Saidhospital02_safehouse:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital02_safehouseManager
}

Response PlayerRemarkhospital03_path01Manager
{
	scene "scenes/Manager/WorldHospital0301.vcd"  //Tch. I think it's this way.
	scene "scenes/Manager/WorldHospital0302.vcd"  //Should be around here.
	scene "scenes/Manager/WorldHospital0319.vcd"  //We should be close!
}
Rule PlayerRemarkhospital03_path01Manager
{
	criteria ConceptRemark IsManager Ishospital03_path01 IsNotSaidhospital03_path01 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "Saidhospital03_path01:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital03_path01Manager
}

Response PlayerRemarkhospital03_path02Manager
{
	scene "scenes/Manager/WorldHospital0316.vcd"  //Hospital's just past the water works!
	scene "scenes/Manager/WorldHospital0317.vcd"  //There's the Hospital!!
}
Rule PlayerRemarkhospital03_path02Manager
{
	criteria ConceptRemark IsManager Ishospital03_path02 IsNotSaidhospital03_path02 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300
	ApplyContext "Saidhospital03_path02:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital03_path02Manager
}

//AUTOGENERATED BLANK FOR PlayerRemarkhospital03_path02Manager : ChanceToFire50Percent
Rule AUTOBLANK_PlayerRemarkhospital03_path02Manager
{
	criteria ConceptRemark IsManager Ishospital03_path02 IsNotSaidhospital03_path02 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300
	ApplyContext "Saidhospital03_path02:1:0"
	applycontexttoworld
	Response _PlayerInfoRemarkableBlankManager
}

Response PlayerRemarkhospital03_path03Manager
{
	scene "scenes/Manager/WorldHospital0303.vcd" //Excellent! We can use that lift!
	scene "scenes/Manager/WorldHospital0315.vcd" //Get on the lift!
	scene "scenes/Manager/WorldHospital0318.vcd" //Get on the lift!
	scene "scenes/Manager/WorldHospital0328.vcd" //Get on the lift!
	scene "scenes/Manager/WorldHospital0329.vcd" //Everybody, get on the lift!
}
Rule PlayerRemarkhospital03_path03Manager
{
	criteria ConceptRemark IsManager Ishospital03_path03 IsNotSaidhospital03_path03 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear800
	ApplyContext "Saidhospital03_path03:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital03_path03Manager
}

Response PlayerRemarkhospital03_path04Manager
{
	scene "scenes/Manager/FollowMe04.vcd" then any PlayerLeadOn foo:0 0 //This way.
	scene "scenes/Manager/WorldHospital0107.vcd" then any PlayerLeadOn foo:0 0 //This way!
	scene "scenes/Manager/WorldHospital0304.vcd" then any PlayerLeadOn foo:0 0 //Through the warehouse!
}
Rule PlayerRemarkhospital03_path04Manager
{
	criteria ConceptRemark IsManager Ishospital03_path04 IsNotSaidhospital03_path04 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300
	ApplyContext "Saidhospital03_path04:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital03_path04Manager
}

Response PlayerRemarkhospital03_path05Manager
{
	scene "scenes/Manager/WorldHospital0324.vcd"  //Bet it's just a little further
}
Rule PlayerRemarkhospital03_path05Manager
{
	criteria ConceptRemark IsManager Ishospital03_path05 IsNotSaidhospital03_path05 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200 
	ApplyContext "Saidhospital03_path05:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital03_path05Manager
}

//AUTOGENERATED BLANK FOR PlayerRemarkhospital03_path05Manager : ChanceToFire20Percent
Rule AUTOBLANK_PlayerRemarkhospital03_path05Manager
{
	criteria ConceptRemark IsManager Ishospital03_path05 IsNotSaidhospital03_path05 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "Saidhospital03_path05:1:0"
	applycontexttoworld
	Response _PlayerInfoRemarkableBlankManager
}

Response PlayerRemarkhospital03_path06Manager
{
	scene "scenes/Manager/WorldHospital0305.vcd"  //Still can't get used to this.
}
Rule PlayerRemarkhospital03_path06Manager
{
	criteria ConceptRemark IsManager Ishospital03_path06 IsNotSaidhospital03_path06 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200 
	ApplyContext "Saidhospital03_path06:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital03_path06Manager
}

//AUTOGENERATED BLANK FOR PlayerRemarkhospital03_path06Manager : 
Rule AUTOBLANK_PlayerRemarkhospital03_path06Manager
{
	criteria ConceptRemark IsManager Ishospital03_path06 IsNotSaidhospital03_path06 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "Saidhospital03_path06:1:0"
	applycontexttoworld
	Response _PlayerInfoRemarkableBlankManager
}

Response PlayerRemarkhospital03_path07Manager
{
	scene "scenes/Manager/WorldHospital0306.vcd"  //This is going to be messy.
	scene "scenes/Manager/WorldHospital0307.vcd" then any PlayerLeadOn foo:0 0 //Well... into the sewers we go!
	scene "scenes/Manager/WorldHospital0309.vcd"  //This is not going to be sanitary.
}
Rule PlayerRemarkhospital03_path07Manager
{
	criteria ConceptRemark IsManager Ishospital03_path07 IsNotSaidhospital03_path07 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "Saidhospital03_path07:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital03_path07Manager
}

Response PlayerRemarkhospital03_path08Manager
{
	scene "scenes/Manager/WorldHospital0325.vcd"  //Gonna be messy.
}
Rule PlayerRemarkhospital03_path08Manager
{
	criteria ConceptRemark IsManager Ishospital03_path08 IsNotSaidhospital03_path08 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear400 
	ApplyContext "Saidhospital03_path08:1:0"
	Response PlayerRemarkhospital03_path08Manager
}

//AUTOGENERATED BLANK FOR PlayerRemarkhospital03_path08Manager : 
Rule AUTOBLANK_PlayerRemarkhospital03_path08Manager
{
	criteria ConceptRemark IsManager Ishospital03_path08 IsNotSaidhospital03_path08 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear400
	ApplyContext "Saidhospital03_path08:1:0"
	Response _PlayerInfoRemarkableBlankManager
}

Response PlayerRemarkhospital03_path08aManager
{
	scene "scenes/Manager/WorldHospital0308.vcd"  then Biker hospital03_path08a2 foo:0 0 //Phew... Francis...
}
Rule PlayerRemarkhospital03_path08aManager
{
	criteria ConceptRemark IsManager Ishospital03_path08 IsNotSaidhospital03_path08 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear400  IsBikerAlive
	ApplyContext "Saidhospital03_path08:1:0"
	Response PlayerRemarkhospital03_path08aManager
}

//AUTOGENERATED BLANK FOR PlayerRemarkhospital03_path08aManager : 
Rule AUTOBLANK_PlayerRemarkhospital03_path08aManager
{
	criteria ConceptRemark IsManager Ishospital03_path08 IsNotSaidhospital03_path08 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear400 IsBikerAlive
	ApplyContext "Saidhospital03_path08:1:0"
	Response _PlayerInfoRemarkableBlankManager
}

Response PlayerRemarkhospital03_path10Manager
{
	scene "scenes/Manager/WorldHospital0310.vcd"  //Mercy Hospital should be right above us.
}
Rule PlayerRemarkhospital03_path10Manager
{
	criteria ConceptRemark IsManager Ishospital03_path10 IsNotSaidhospital03_path10 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300
	ApplyContext "Saidhospital03_path10:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital03_path10Manager
}

Response PlayerRemarkhospital03_path11Manager
{
	scene "scenes/Manager/WorldHospital0311.vcd" then any PlayerYellRun foo:0 0 //The HOSPITAL!
	scene "scenes/Manager/WorldHospital0312.vcd" then any PlayerYellRun foo:0 0 //GET TO THE HOSPITAL!
	scene "scenes/Manager/WorldHospital0313.vcd"  //The Hospital! We made it!
	scene "scenes/Manager/WorldHospital0314.vcd" then any RespondAffirmative foo:0 0 //Hurry eveyrone!
}
Rule PlayerRemarkhospital03_path11Manager
{
	criteria ConceptRemark IsManager Ishospital03_path11 IsNotSaidhospital03_path11 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear1000
	ApplyContext "Saidhospital03_path11:1:0,SaidSafeSpotAhead:1:90"
	applycontexttoworld
	Response PlayerRemarkhospital03_path11Manager
}

Response PlayerRemarkhospital04_path01Manager
{
	scene "scenes/Manager/WorldHospital0401.vcd"  then NamVet hospital04_path01a foo:0 0 //This doesn't smell like a hospital...
	scene "scenes/Manager/WorldHospital0402.vcd"  //Were they saving people or killin' them?
}
Rule PlayerRemarkhospital04_path01Manager
{
	criteria ConceptRemark IsManager Ishospital04_path01 IsNotSaidhospital04_path01 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "Saidhospital04_path01:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital04_path01Manager
}

Response PlayerRemarkhospital04_path02aManager
{
	scene "scenes/Manager/GenericDirections12.vcd"  //Stairs are a good workout.
	scene "scenes/Manager/WorldHospital0403.vcd"  //It's good for you Bill, cardio!
}
Rule PlayerRemarkhospital04_path02aManager
{
	criteria Concepthospital04_path02a IsManager IsTalk IsTalkManager IsSubjectNear200
	Response PlayerRemarkhospital04_path02aManager
}

Response PlayerRemarkhospital04_path04Manager
{
	scene "scenes/Manager/WorldHospital0404.vcd"  then any hospital04_path04a foo:0 0 //Elevator's here!
	scene "scenes/Manager/WorldHospital0405.vcd"  then any hospital04_path04a foo:0 0 //To the elevator!
	scene "scenes/Manager/WorldHospital0406.vcd"  then any hospital04_path04a foo:0 0 //Into the elevator!
	scene "scenes/Manager/WorldHospital0416.vcd"  then any hospital04_path04a foo:0 0 //Get in the elevator!
}
Rule PlayerRemarkhospital04_path04Manager
{
	criteria ConceptRemark IsManager Ishospital04_path04 IsNotSaidhospital04_path04 IsNotCoughing  IsTalk IsTalkManager IsSubjectNear1000 IsSubjectFar100
	ApplyContext "Saidhospital04_path04:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital04_path04Manager
}

Response PlayerRemarkhospital04_path04aManager
{
	scene "scenes/Manager/WorldHospital0404.vcd"  then any hospital04_path04a foo:0 0 //Elevator's here!
	scene "scenes/Manager/WorldHospital0405.vcd"  then any hospital04_path04a foo:0 0 //To the elevator!
	scene "scenes/Manager/WorldHospital0406.vcd"  then any hospital04_path04a foo:0 0 //Into the elevator!
	scene "scenes/Manager/WorldHospital0416.vcd"  then any hospital04_path04a foo:0 0 //Get in the elevator!
}
Rule PlayerRemarkhospital04_path04aManager
{
	criteria Concepthospital04_path04a IsManager  IsTalk IsTalkManager
	Response PlayerRemarkhospital04_path04aManager
}

Response PlayerRemarkhospital04_path05Manager
{
	scene "scenes/Manager/WorldHospital0409.vcd"  //We need to find access to the roof!
	scene "scenes/Manager/WorldHospital0418.vcd"  //We need to find roof access!
}
Rule PlayerRemarkhospital04_path05Manager
{
	criteria ConceptRemark IsManager Ishospital04_path05 IsNotSaidhospital04_path05 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300
	ApplyContext "Saidhospital04_path05:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital04_path05Manager
}

Response PlayerRemarkhospital04_path06Manager
{
	scene "scenes/Manager/WorldHospital0407.vcd" then any RespondAffirmative foo:0 0 //Stay away from the edge.
}
Rule PlayerRemarkhospital04_path06Manager
{
	criteria ConceptRemark IsManager Ishospital04_path06 IsNotSaidhospital04_path06 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear500
	ApplyContext "Saidhospital04_path06:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital04_path06Manager
}

Response PlayerRemarkhospital04_path07Manager
{
	scene "scenes/Manager/WorldHospital0408.vcd"  //Safe house through here.
	scene "scenes/Manager/WorldHospital0410.vcd"  //Roof this way!
	scene "scenes/Manager/WorldHospital0415.vcd"  //Let's go, let's go!
	scene "scenes/Manager/WorldHospital0419.vcd"  //The roof's this way!
}
Rule PlayerRemarkhospital04_path07Manager
{
	criteria ConceptRemark IsManager Ishospital04_path07 IsNotSaidhospital04_path07 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear1000
	ApplyContext "Saidhospital04_path07:1:0,SaidSafeSpotAhead:1:90"
	applycontexttoworld
	Response PlayerRemarkhospital04_path07Manager
}

Response PlayerRemarkhospital05_path01Manager
{
	scene "scenes/Manager/WorldHospital0502.vcd" then any RespondAffirmative foo:0 0 //Bet the chopper pilot'll be happy to hear from us!
	scene "scenes/Manager/WorldHospital0503.vcd"  //Let's find that radio!
	scene "scenes/Manager/WorldHospital0506.vcd"  //Well, this is it.
	scene "scenes/Manager/ZombieGenericShort13.vcd" then any RespondAffirmative foo:0 0 //Well, it can only get better, right?
}
Rule PlayerRemarkhospital05_path01Manager
{
	criteria ConceptRemark IsManager Ishospital05_path01 IsNotSaidhospital05_path01 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "Saidhospital05_path01:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital05_path01Manager
}

Response PlayerRemarkhospital05_path01bManager
{
	scene "scenes/Manager/GenericResponses23.vcd"  //Works for me.
}
Rule PlayerRemarkhospital05_path01bManager
{
	criteria Concepthospital05_path01b IsManager IsTalk IsTalkManager
	Response PlayerRemarkhospital05_path01bManager
}

Response PlayerRemarkhospital05_path02Manager
{
	scene "scenes/Manager/GenericDirections05.vcd" then any PlayerLeadOn foo:0 0 //Through here!
}
Rule PlayerRemarkhospital05_path02Manager
{
	criteria ConceptRemark IsManager Ishospital05_path02 IsNotSaidhospital05_path02 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear400
	ApplyContext "Saidhospital05_path02:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital05_path02Manager
}

Response PlayerRemarkhospital05_path03Manager
{
	scene "scenes/Manager/WorldHospital01.vcd"  //There's the landing pad.
}
Rule PlayerRemarkhospital05_path03Manager
{
	criteria ConceptRemark IsManager Ishospital05_path03 IsNotSaidhospital05_path03 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "Saidhospital05_path03:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital05_path03Manager
}

Response PlayerRemarkhospital05_path04Manager
{
	scene "scenes/Manager/WorldHospital0504.vcd"  //Big ass gun up here.
	scene "scenes/Manager/WorldHospital0505.vcd"  //Check out this gun up here!
	scene "scenes/Manager/WorldHospital0509.vcd"  //Man, I always wanted to fire one of these things.
	scene "scenes/Manager/WorldHospital0510.vcd"  //Man, check this gun out!
}
Rule PlayerRemarkhospital05_path04Manager
{
	criteria ConceptRemark IsManager Ishospital05_path04 IsNotSaidhospital05_path04 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "Saidhospital05_path04:1:0"
	applycontexttoworld
	Response PlayerRemarkhospital05_path04Manager
}

Response PlayerRemarkPathClearVanManager
{
	scene "scenes/Manager/MoveOn02.vcd" then any RespondAffirmative foo:0 0 //Time to move.
	scene "scenes/Manager/MoveOn06.vcd" then any RespondAffirmative foo:0 0 //Whaddya say we get moving?
}
Rule PlayerRemarkPathClearVanManager
{
	criteria ConceptPathClearVan IsManager IsNotSaidPathClearVan IsNotCoughing  IsTalk IsTalkManager
	ApplyContext "SaidPathClearVan:1:0"
	applycontexttoworld
	Response PlayerRemarkPathClearVanManager
}

Response PlayerRemarkSmalltown01_path01Manager
{
	scene "scenes/Manager/WorldSmallTown0111.vcd"  then any ResponseSoftDispleasureSwear foo:0 0 //Ah, hell. The bridge is out.
}
Rule PlayerRemarkSmalltown01_path01Manager
{
	criteria ConceptRemark IsManager IsSmalltown01_path01 IsNotSaidSmalltown01_path01 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300
	ApplyContext "SaidSmalltown01_path01:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown01_path01Manager
}

Response PlayerRemarkSmalltown01_path02Manager
{
	scene "scenes/Manager/WorldSmallTown0106.vcd"  //Looks like we can get back up the other side.
}
Rule PlayerRemarkSmalltown01_path02Manager
{
	criteria ConceptRemark IsManager IsSmalltown01_path02 IsNotSaidSmalltown01_path02 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200 IsNotSaidSmalltown01_path04 IsSaidSmalltown01_path01
	ApplyContext "SaidSmalltown01_path02:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown01_path02Manager
}

Response PlayerRemarkSmalltown01_path03Manager
{
	scene "scenes/Manager/GenericDirections17.vcd" then any PlayerLeadOn foo:0 0 //Let's get up that ladder!
}
Rule PlayerRemarkSmalltown01_path03Manager
{
	criteria ConceptRemark IsManager IsSmalltown01_path03 IsNotSaidSmalltown01_path03 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300
	ApplyContext "SaidSmalltown01_path03:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown01_path03Manager
}

Response PlayerRemarkSmalltown01_path06Manager
{
	scene "scenes/Manager/ReactionApprehensive03.vcd"  //I don't like this one damn bit.
}
Rule PlayerRemarkSmalltown01_path06Manager
{
	criteria ConceptRemark IsManager IsSmalltown01_path06 IsNotSaidSmalltown01_path06 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "SaidSmalltown01_path06:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown01_path06Manager
}

Response PlayerRemarkSmalltown01_path07Manager
{
	scene "scenes/Manager/WorldSmallTown0107.vcd"  //The tunnel's blocked.
}
Rule PlayerRemarkSmalltown01_path07Manager
{
	criteria ConceptRemark IsManager IsSmalltown01_path07 IsNotSaidSmalltown01_path07 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear1000 IsNotSaidSmalltown01_path08
	ApplyContext "SaidSmalltown01_path07:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown01_path07Manager
}

Response PlayerRemarkSmalltown01_path08Manager
{
	scene "scenes/Manager/GenericDirections05.vcd" then any PlayerLeadOn foo:0 0 //Through here!
	scene "scenes/Manager/GenericDirections06.vcd" then any PlayerLeadOn foo:0 0 //Through this door!
}
Rule PlayerRemarkSmalltown01_path08Manager
{
	criteria ConceptRemark IsManager IsSmalltown01_path08 IsNotSaidSmalltown01_path08 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "SaidSmalltown01_path08:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown01_path08Manager
}

Response PlayerRemarkSmalltown01_path09Manager
{
	scene "scenes/Manager/SafeSpotAhead05.vcd"  then any SafeSpotAheadResponse foo:0 0 //There's the safe house!
	scene "scenes/Manager/SafeSpotAhead07.vcd"  then any SafeSpotAheadResponse foo:0 0 //Safe house up ahead!
}
Rule PlayerRemarkSmalltown01_path09Manager
{
	criteria ConceptRemark IsManager IsSmalltown01_path09 IsNotSaidSmalltown01_path09 IsNotCoughing IsTalk IsTalkManager IsSubjectNear1500
	ApplyContext "SaidSmalltown01_path09:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown01_path09Manager
}

Response PlayerRemarksmalltown02_path01Manager
{
	scene "scenes/Manager/WorldSmallTown0201.vcd"  then biker smalltown02_path01a foo:0 0 //These must be overflow pipes for Riverside.
}
Rule PlayerRemarksmalltown02_path01Manager
{
	criteria ConceptRemark IsManager Issmalltown02_path01 IsNotSaidsmalltown02_path01 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear600 
	ApplyContext "Saidsmalltown02_path01:1:0"
	applycontexttoworld
	Response PlayerRemarksmalltown02_path01Manager
}

//AUTOGENERATED BLANK FOR PlayerRemarksmalltown02_path01Manager : ChanceToFire15Percent
Rule AUTOBLANK_PlayerRemarksmalltown02_path01Manager
{
	criteria ConceptRemark IsManager Issmalltown02_path01 IsNotSaidsmalltown02_path01 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear600
	ApplyContext "Saidsmalltown02_path01:1:0"
	applycontexttoworld
	Response _PlayerInfoRemarkableBlankManager
}

Response PlayerRemarksmalltown02_path01bManager
{
	scene "scenes/Manager/WorldSmallTown0212.vcd"  then biker smalltown02_path01c foo:0 -5.1 //Interesting true story. In 1975, the local township - [gets cut off]
}
Rule PlayerRemarksmalltown02_path01bManager
{
	criteria ConceptSmallTown02_path01b IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear600 IsManager
	Response PlayerRemarksmalltown02_path01bManager
}

Response PlayerRemarksmalltown02_path02Manager
{
	scene "scenes/Manager/GenericDirections05.vcd" then any PlayerImWithYou foo:0 0 //Through here!
}
Rule PlayerRemarksmalltown02_path02Manager
{
	criteria ConceptRemark IsManager Issmalltown02_path02 IsNotSaidsmalltown02_path02 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "Saidsmalltown02_path02:1:0"
	applycontexttoworld
	Response PlayerRemarksmalltown02_path02Manager
}

Rule PlayerRemarksmalltown02_path03Manager
{
	criteria ConceptRemark IsManager Issmalltown02_path03 IsNotSaidsmalltown02_path03 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "Saidsmalltown02_path03:1:0"
	applycontexttoworld
	Response PlayerRemarksmalltown02_path02Manager
}

Rule PlayerRemarksmalltown02_path04Manager
{
	criteria ConceptRemark IsManager Issmalltown02_path04 IsNotSaidsmalltown02_path04 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "Saidsmalltown02_path04:1:0"
	applycontexttoworld
	Response PlayerRemarksmalltown02_path02Manager
}

Response PlayerRemarksmalltown02_path06Manager
{
	scene "scenes/Manager/WorldSmallTown0204.vcd"  //We have to lower that platform!
}
Rule PlayerRemarksmalltown02_path06Manager
{
	criteria ConceptRemark IsManager Issmalltown02_path06 IsNotSaidsmalltown02_path06 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear700
	ApplyContext "Saidsmalltown02_path06:1:0"
	applycontexttoworld
	Response PlayerRemarksmalltown02_path06Manager
}

Response PlayerRemarksmalltown02_path08Manager
{
	scene "scenes/Manager/WorldSmallTown0203.vcd"  //That'll seal the lock.
}
Rule PlayerRemarksmalltown02_path08Manager
{
	criteria ConceptRemark IsManager Issmalltown02_path08 IsNotSaidsmalltown02_path08 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear100
	ApplyContext "Saidsmalltown02_path08:1:0,Saidsmalltown02_path06:1:0"
	applycontexttoworld
	Response PlayerRemarksmalltown02_path08Manager
}

Rule PlayerRemarksmalltown02_path08aManager
{
	criteria Conceptsmalltown02_path08a IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear400 IsManager
	Response PlayerRemarksmalltown02_path08Manager
}

Response PlayerRemarkSmalltown02_path09Manager
{
	scene "scenes/Manager/SafeSpotAhead07.vcd"  then any SafeSpotAheadResponse foo:0 0 //Safe house up ahead!
}
Rule PlayerRemarkSmalltown02_path09Manager
{
	criteria ConceptRemark IsManager IsSmalltown02_path09 IsNotSaidSmalltown02_path09 IsNotCoughing IsTalk IsTalkManager IsSubjectNear1000
	ApplyContext "SaidSmalltown02_path09:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown02_path09Manager
}

Response PlayerRemarkSmalltown03_path03Manager
{
	scene "scenes/Manager/WorldSmallTown0306.vcd" then any PlayerLeadOn foo:0 0 //We need to get over this fence.
}
Rule PlayerRemarkSmalltown03_path03Manager
{
	criteria ConceptRemark IsManager IsSmalltown03_path03 IsNotSaidSmalltown03_path03 IsNotSaidSmalltown03_path04 IsNotSaidSmalltown03_path05 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "SaidSmalltown03_path03:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown03_path03Manager
}

Response PlayerRemarkSmalltown03_path04Manager
{
	scene "scenes/Manager/GenericDirections01.vcd" then any PlayerLeadOn foo:0 0 //Up the stairs!
	scene "scenes/Manager/WorldSmallTown0303.vcd" then any PlayerLeadOn foo:0 0 //We can cross up here.
}
Rule PlayerRemarkSmalltown03_path04Manager
{
	criteria ConceptRemark IsManager IsSmalltown03_path04 IsNotSaidSmalltown03_path04 IsNotSaidSmalltown03_path05 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "SaidSmalltown03_path04:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown03_path04Manager
}

Rule PlayerRemarkSmalltown03_path05Manager
{
	criteria ConceptRemark IsManager IsSmalltown03_path05 IsNotSaidSmalltown03_path04 IsNotSaidSmalltown03_path05 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "SaidSmalltown03_path05:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown03_path04Manager
}

Response PlayerRemarkSmalltown03_path06Manager
{
	scene "scenes/Manager/WorldSmallTown0303.vcd" then any PlayerLeadOn foo:0 0 //We can cross up here.
}
Rule PlayerRemarkSmalltown03_path06Manager
{
	criteria ConceptRemark IsManager IsSmalltown03_path06 IsNotSaidSmalltown03_path06 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear400
	ApplyContext "SaidSmalltown03_path06:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown03_path06Manager
}

Response PlayerRemarkSmalltown03_path08Manager
{
	scene "scenes/Manager/WorldSmallTown0214.vcd"  //[Reading a turnpike sign] Riverside! At least we're going the right way.
	scene "scenes/Manager/WorldSmallTown0305.vcd"  //Almost to Riverside.
}
Rule PlayerRemarkSmalltown03_path08Manager
{
	criteria ConceptRemark IsManager IsSmalltown03_path08 IsNotSaidSmalltown03_path08 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300
	ApplyContext "SaidSmalltown03_path08:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown03_path08Manager
}

Response PlayerRemarkSmalltown03_path11Manager
{
	scene "scenes/Manager/ReactionApprehensive02.vcd"  //Man, It's too quiet, too dman quiet
}
Rule PlayerRemarkSmalltown03_path11Manager
{
	criteria ConceptRemark IsManager IsSmalltown03_path11 IsNotSaidSmalltown03_path11 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear100
	ApplyContext "SaidSmalltown03_path11:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown03_path11Manager
}

Response PlayerRemarkSmalltown03_path12Manager
{
	scene "scenes/Manager/WorldSmallTown0318.vcd"  //Look, there's lights on in that church!
	scene "scenes/Manager/WorldSmallTown0408.vcd"  //Church still got its lights on.
}
Rule PlayerRemarkSmalltown03_path12Manager
{
	criteria ConceptRemark IsManager IsSmalltown03_path12 IsNotSaidSmalltown03_path12 IsNotSaidSmalltown03_path13 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear400
	ApplyContext "SaidSmalltown03_path12:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown03_path12Manager
}

Rule PlayerRemarkSmalltown03_path13Manager
{
	criteria ConceptRemark IsManager IsSmalltown03_path13 IsNotSaidSmalltown03_path13 IsNotSaidSmalltown03_path12 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear400
	ApplyContext "SaidSmalltown03_path13:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown03_path12Manager
}

Response PlayerRemarkSmalltown04_path01Manager
{
	scene "scenes/Manager/blank.vcd"  then any RiversideIsDead foo:0 0 //
}
Rule PlayerRemarkSmalltown04_path01Manager
{
	criteria ConceptRemark IsManager IsSmalltown04_path01 IsNotSaidSmalltown04_path01 IsNotSaidSmalltown04_path02 IsNotCoughing NotInCombat IsTalkManager IsSubjectNear200
	ApplyContext "SaidSmalltown04_path01:1:0,Talk:1:12"
	applycontexttoworld
	Response PlayerRemarkSmalltown04_path01Manager
}

Response PlayerRemarkSmalltown04_path02Manager
{
	scene "scenes/Manager/blank.vcd"  then any RiversideIsDead foo:0 0 //
}
Rule PlayerRemarkSmalltown04_path02Manager
{
	criteria ConceptRemark IsManager IsSmalltown04_path02 IsNotSaidSmalltown04_path02 IsNotSaidSmalltown04_path01 IsNotCoughing NotInCombat IsTalkManager IsSubjectNear200
	ApplyContext "SaidSmalltown04_path02:1:0,Talk:1:12"
	applycontexttoworld
	Response PlayerRemarkSmalltown04_path02Manager
}

Response PlayerRemarkSmalltown04_path03Manager
{
	scene "scenes/Manager/WorldSmallTown0308.vcd"  //Goddamn it, there's gotta be some place that held out.
}
Rule PlayerRemarkSmalltown04_path03Manager
{
	criteria ConceptRemark IsManager IsSmalltown04_path03 IsNotSaidSmalltown04_path03 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200 IsSmalltownBarricadeManager
	ApplyContext "SaidSmalltown04_path03:1:0,SmallTownBarricadeManager:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown04_path03Manager
}

Rule PlayerRemarkSmalltown04_path04Manager
{
	criteria ConceptRemark IsManager IsSmalltown04_path04 IsNotSaidSmalltown04_path04 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200 IsSmalltownBarricadeManager
	ApplyContext "SaidSmalltown04_path04:1:0,SmallTownBarricadeManager:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown04_path03Manager
}

Response PlayerRemarkSmalltown04_path05Manager
{
	scene "scenes/Manager/FollowMe04.vcd" then any PlayerImWithYou foo:0 0 //This way.
}
Rule PlayerRemarkSmalltown04_path05Manager
{
	criteria ConceptRemark IsManager IsSmalltown04_path05 IsNotSaidSmalltown04_path05 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300
	ApplyContext "SaidSmalltown04_path05:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown04_path05Manager
}

Response PlayerRemarkSmalltown04_path07AManager
{
	scene "scenes/Manager/WorldSmallTown0403.vcd" then any PlayerLaugh foo:0 0 //If you ignore the crazy guy and the zombies, nice town
}
Rule PlayerRemarkSmalltown04_path07AManager
{
	criteria ConceptSmalltown04_Path07A IsManager IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300 
	Response PlayerRemarkSmalltown04_path07AManager
}

Response PlayerRemarkSmalltown04_path08Manager
{
	scene "scenes/Manager/Generic16.vcd"  //Now *this* is a big ass machine gun.
}
Rule PlayerRemarkSmalltown04_path08Manager
{
	criteria ConceptRemark IsManager IsSmalltown04_path08 IsNotSaidSmalltown04_path08 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "SaidSmalltown04_path08:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown04_path08Manager
}

Rule PlayerRemarkSmalltown04_path09Manager
{
	criteria ConceptRemark IsManager IsSmalltown04_path09 IsNotSaidSmalltown04_path09 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200 IsSmalltownBarricadeManager
	ApplyContext "SaidSmalltown04_path09:1:0,SmallTownBarricadeManager:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown04_path03Manager
}

Response PlayerRemarkSmalltown04_path10Manager
{
	scene "scenes/Manager/WorldSmallTown0303.vcd" then any PlayerLeadOn foo:0 0 //We can cross up here.
}
Rule PlayerRemarkSmalltown04_path10Manager
{
	criteria ConceptRemark IsManager IsSmalltown04_path10 IsNotSaidSmalltown04_path10 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300
	ApplyContext "SaidSmalltown04_path10:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown04_path10Manager
}

Rule PlayerRemarkSmalltown04_path11Manager
{
	criteria ConceptRemark IsManager IsSmalltown04_path11 IsNotSaidSmalltown04_path11 IsNotCoughing IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "SaidSmalltown04_path11:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown03_path14Manager
}

Response PlayerRemarkSmalltown05_path01Manager
{
	scene "scenes/Manager/blank.vcd"  //
}
Rule PlayerRemarkSmalltown05_path01Manager
{
	criteria ConceptRemark IsManager IsSmalltown05_path01 IsNotSaidSmalltown05_path01 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear1000
	ApplyContext "SaidSmalltown05_path01:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown05_path01Manager
}

Response PlayerRemarkSmalltown05_path02Manager
{
	scene "scenes/Manager/WorldSmallTown0302.vcd" then any RespondAffirmative foo:0 0 //Careful, this is wide open.
}
Rule PlayerRemarkSmalltown05_path02Manager
{
	criteria ConceptRemark IsManager IsSmalltown05_path02 IsNotSaidSmalltown05_path02 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear800
	ApplyContext "SaidSmalltown05_path02:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown05_path02Manager
}

Response PlayerRemarkSmalltown05_path03Manager
{
	scene "scenes/Manager/WorldSmallTown0405.vcd"  then biker Smalltown05_path03a foo:0 0 //We can get to the river through here.
}
Rule PlayerRemarkSmalltown05_path03Manager
{
	criteria ConceptRemark IsManager IsSmalltown05_path03 IsNotSaidSmalltown05_path03 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear300
	ApplyContext "SaidSmalltown05_path03:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown05_path03Manager
}

Response PlayerRemarkSmalltown05_path06Manager
{
	scene "scenes/Manager/GenericDirections05.vcd" then any PlayerImWithYou foo:0 0 //Through here!
}
Rule PlayerRemarkSmalltown05_path06Manager
{
	criteria ConceptRemark IsManager IsSmalltown05_path06 IsNotSaidSmalltown05_path06 IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear200
	ApplyContext "SaidSmalltown05_path06:1:0"
	applycontexttoworld
	Response PlayerRemarkSmalltown05_path06Manager
}

Response PlayerRemarkThroughHereManager
{
	scene "scenes/Manager/GenericDirections05.vcd" then any PlayerImWithYou foo:0 0 //Through here!
}
Rule PlayerRemarkThroughHereManager
{
	criteria ConceptRemark IsManager IsThroughHere IsNotSaidThroughHere IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear400
	ApplyContext "SaidThroughHere:1:0"
	applycontexttoworld
	Response PlayerRemarkThroughHereManager
}

Response PlayerRemarkUpThatLadderManager
{
	scene "scenes/Manager/GenericDirections03.vcd" then any PlayerLeadOn foo:0 0 //Let's get up that ladder!
}
Rule PlayerRemarkUpThatLadderManager
{
	criteria ConceptRemark IsManager IsUpThatLadder IsNotSaidUpThatLadder IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear400
	ApplyContext "SaidUpThatLadder:1:0"
	applycontexttoworld
	Response PlayerRemarkUpThatLadderManager
}

Response PlayerZoeySuggestsCraneManager
{
	scene "scenes/Manager/GenericResponses09.vcd"  //Allright, then, let's do it.
	scene "scenes/Manager/GenericResponses10.vcd"  //Good thinking.
}
Rule PlayerZoeySuggestsCraneManager
{
	criteria ConceptZoeySuggestsCrane IsManager IsNotSaidZoeySuggestsCrane IsTalk IsTalkManager IsSubjectNear800
	ApplyContext "SaidZoeySuggestsCrane:1:0"
	applycontexttoworld
	Response PlayerZoeySuggestsCraneManager
}

Response RiversideIsDeadManager
{
	scene "scenes/Manager/WorldSmallTown0401.vcd"  then any RiversideIsDeadPlan foo:0 0 //Riverside's a bust. Let's just get to the river.
}
Rule RiversideIsDeadManager
{
	criteria ConceptRiversideIsDead IsManager IsNotCoughing IsTalkManager
	ApplyContext "SaidSmalltown04_path02:1:0,TalkManager:1:2"
	applycontexttoworld
	Response RiversideIsDeadManager
}

Response RiversideIsDeadBManager
{
	scene "scenes/Manager/WorldSmallTown0402.vcd"  then any RiversideIsDeadPlan foo:0 0 //If we get to the river we can find a boat
}
Rule RiversideIsDeadBManager
{
	criteria ConceptRiversideIsDeadB IsManager IsNotCoughing IsTalkManager
	ApplyContext "SaidSmalltown04_path02:1:0,TalkManager:1:3"
	applycontexttoworld
	Response RiversideIsDeadBManager
}

Response RiversideIsDeadPlanManager
{
	scene "scenes/Manager/GenericResponses15.vcd"  //Okay...
	scene "scenes/Manager/GenericResponses23.vcd"  //Works for me.
}
Rule RiversideIsDeadPlanManager
{
	criteria ConceptRiversideIsDeadPlan IsManager IsNotCoughing IsTalkManager
	ApplyContext "SaidSmalltown04_path02:1:0"
	applycontexttoworld
	Response RiversideIsDeadPlanManager
}

Response RiversideIsDeadSpecial1Manager
{
	scene "scenes/Manager/WorldSmallTown0401.vcd"  then biker RiversideIsDeadSpecial1A foo:0 0 //Riverside's a bust. Let's just get to the river.
}
Rule RiversideIsDeadSpecial1Manager
{
	criteria ConceptRiversideIsDead IsManager IsNotCoughing IsTalkManager 
	ApplyContext "SaidSmalltown04_path02:1:0"
	applycontexttoworld
	Response RiversideIsDeadSpecial1Manager
}

Response SafeSpotAheadResponse
{
	scene "scenes/Manager/SafeSpotAheadReaction01.vcd"  //Finally!
	scene "scenes/Manager/SafeSpotAheadReaction02.vcd"  //We made it!
	scene "scenes/Manager/SafeSpotAheadReaction03.vcd"  //Knew we'd make it!
	scene "scenes/Manager/SafeSpotAheadReaction05.vcd"  //Man, I KNEW we was gonna make it.
}
Rule SafeSpotAheadResponse
{
	criteria ConceptSafeSpotAheadResponse IsManager IsNotCoughing NotInCombat IsTalk IsTalkManager IsSubjectNear400
	Response SafeSpotAheadResponse
}

Response PlayerRemarkairport01_burningManager
{
	scene "scenes/Manager/WorldAirport0101.vcd"  //Man... this is going to take forever to rebuild
	scene "scenes/Manager/WorldAirport0102.vcd"  //This is NOT what I expected
}
Rule PlayerRemarkairport01_burningManager
{
	criteria ConceptRemark IsManager Isairport01_burning IsNotSaidairport01_burning IsNotCoughing NotInCombat IsSubjectReallyNear  IsTalk IsTalkManager
	ApplyContext "Saidairport01_burning:1:0"
	Response PlayerRemarkairport01_burningManager
}

//AUTOGENERATED BLANK FOR PlayerRemarkairport01_burningManager : ChanceToFire40Percent
Rule AUTOBLANK_PlayerRemarkairport01_burningManager
{
	criteria ConceptRemark IsManager Isairport01_burning IsNotSaidairport01_burning IsNotCoughing NotInCombat IsSubjectReallyNear IsTalk IsTalkManager
	ApplyContext "Saidairport01_burning:1:0"
	Response _PlayerInfoRemarkableBlankManager
}


//--------------------------------------------------------------------------------------------------------------
// Remarkable voice
//--------------------------------------------------------------------------------------------------------------
Response PlayerNearFinaleFarmManager
{
	scene "scenes/Manager/blank.vcd"  //
}
Rule PlayerNearFinaleFarmManager
{
	criteria ConceptPlayerNearFinale IsNotCoughing IsManager IsNotSaidFinaleAhead NotInCombat IsTalk IsTalkManager IsNotIncapacitated ismap_l4d_farm05_cornfield
	ApplyContext "SaidFinaleAhead:1:30"
	applycontexttoworld
	Response PlayerNearFinaleFarmManager
}


//--------------------------------------------------------------------------------------------------------------
// Rosetta - Directional
//--------------------------------------------------------------------------------------------------------------
Response PlayerCoverMeManager
{
	scene "scenes/Manager/CoverMe01.vcd" then any RespondAffirmative foo:0 0 //Cover me!
	scene "scenes/Manager/CoverMe02.vcd" then any RespondAffirmative foo:0 0 //Cover me!
	scene "scenes/Manager/CoverMe03.vcd" then any RespondAffirmative foo:0 0 //Cover me!
	scene "scenes/Manager/CoverMe04.vcd" then any RespondAffirmative foo:0 0 //Watch my back!
	scene "scenes/Manager/CoverMe05.vcd" then any RespondAffirmative foo:0 0 //Watch my back!
}
Rule PlayerCoverMeManager
{
	criteria ConceptPlayerCoverMe IsNotCoughing IsManager IsTalk IsTalkManager
	Response PlayerCoverMeManager
}

Response PlayerHelpManager
{
	scene "scenes/Manager/Help01.vcd" then any FriendNeedsHelp foo:0 0 //Help!
	scene "scenes/Manager/Help02.vcd" then any FriendNeedsHelp foo:0 0 //I need some help over here!
	scene "scenes/Manager/Help03.vcd" then any FriendNeedsHelp foo:0 0 //Need a little help over here!
	scene "scenes/Manager/Help04.vcd" then any FriendNeedsHelp foo:0 0 //Dammit, I need some help!
	scene "scenes/Manager/Help05.vcd" then any FriendNeedsHelp foo:0 0 //Help me!
	scene "scenes/Manager/Help06.vcd" then any FriendNeedsHelp foo:0 0 //Help!
	scene "scenes/Manager/Help07.vcd" then any FriendNeedsHelp foo:0 0 //I'm in trouble!
	scene "scenes/Manager/Help08.vcd" then any FriendNeedsHelp foo:0 0 //I need some help!
	scene "scenes/Manager/Help09.vcd" then any FriendNeedsHelp foo:0 0 //Somebody help me!
	scene "scenes/Manager/Help10.vcd" then any FriendNeedsHelp foo:0 0 //Can you hear me? I need some help!
	scene "scenes/Manager/Help11.vcd" then any FriendNeedsHelp foo:0 0 //What part of help do you not understand?  Help!
	scene "scenes/Manager/Dying01.vcd" then any FriendNeedsHelp foo:0 0 //Guys! I need help now!
	scene "scenes/Manager/Dying02.vcd" then any FriendNeedsHelp foo:0 0 //Yo, I need some help RIGHT NOW!
	scene "scenes/Manager/Dying03.vcd" then any FriendNeedsHelp foo:0 0 //Yo, I need help right the hell now!
	scene "scenes/Manager/Dying04.vcd" then any FriendNeedsHelp foo:0 0 //I need help right the hell now!
}
Rule PlayerHelpManager
{
	criteria ConceptPlayerHelp IsNotSpeaking IsManager IsTalk IsTalkManager
	Response PlayerHelpManager
}

Response PlayerHurryUpManager
{
	
	scene "scenes/Manager/HurryUp01.vcd" then any PlayerImWithYou foo:0 0 //Hurry up!
	scene "scenes/Manager/HurryUp02.vcd" then any PlayerImWithYou foo:0 0 //Hurry up!
	scene "scenes/Manager/HurryUp03.vcd" then any PlayerImWithYou foo:0 0 //Hurry!
	scene "scenes/Manager/HurryUp04.vcd" then any PlayerImWithYou foo:0 0 //Hurry!
	scene "scenes/Manager/HurryUp05.vcd" then any PlayerImWithYou foo:0 0 //Move!
	scene "scenes/Manager/HurryUp06.vcd" then any PlayerImWithYou foo:0 0 //Come on!
	scene "scenes/Manager/HurryUp07.vcd" then any PlayerImWithYou foo:0 0 //Hurry!
	scene "scenes/Manager/HurryUp08.vcd" then any PlayerImWithYou foo:0 0 //Faster!
	scene "scenes/Manager/HurryUp09.vcd" then any PlayerImWithYou foo:0 0 //Move it
	scene "scenes/Manager/HurryUp10.vcd" then any PlayerImWithYou foo:0 0 //Let's go let's go let's go!
	scene "scenes/Manager/HurryUp11.vcd" then any PlayerImWithYou foo:0 0 //Come on, catch up!
	scene "scenes/Manager/HurryUp12.vcd" then any PlayerImWithYou foo:0 0 //Move it, move it up here!
	scene "scenes/Manager/HurryUp13.vcd" //I'm not waiting on you, get up here!
	scene "scenes/Manager/WorldHospital0314.vcd" then any PlayerImWithYou foo:0 0 //Hurry eveyrone!
	scene "scenes/Manager/WorldHospital0326.vcd" then any PlayerImWithYou foo:0 0 //Hurry!
	scene "scenes/Manager/WorldHospital0327.vcd" then any PlayerImWithYou foo:0 0 //Hurry!
	scene "scenes/Manager/WorldHospital0421.vcd" then any PlayerImWithYou foo:0 0 //Hurry up.
}
Rule PlayerHurryUpManager
{
	criteria ConceptPlayerHurryUp IsNotCoughing IsNotSpeaking IsManager IsTalk IsTalkManager
	Response PlayerHurryUpManager
}

Response PlayerKillThatLightManager
{
	scene "scenes/Manager/KillThatLight01.vcd" then any RespondAffirmative foo:0 0 //Kill that light!
	scene "scenes/Manager/KillThatLight02.vcd" then any RespondAffirmative foo:0 0 //Flashlights off!
	scene "scenes/Manager/KillThatLight03.vcd" then any RespondAffirmative foo:0 0 //Turn your light off!
	scene "scenes/Manager/KillThatLight04.vcd" then any RespondAffirmative foo:0 0 //Kill the light, man.
	scene "scenes/Manager/KillThatLight05.vcd" then any RespondAffirmative foo:0 0 //Lights off!
	scene "scenes/Manager/ReactionApprehensive01.vcd"  //I have a bad feeling about this.
	scene "scenes/Manager/ReactionApprehensive03.vcd"  //I don't like this one damn bit.
}
Rule PlayerKillThatLightManager
{
	criteria ConceptPlayerKillThatLight IsNotCoughing IsManager IsTalk IsTalkManager
	Response PlayerKillThatLightManager
}

Response PlayerLeadOnManager
{
	
	scene "scenes/Manager/LeadOn01.vcd"  //You all go right ahead.
	scene "scenes/Manager/LeadOn02.vcd"  //You go ahead, I'll follow you.
	scene "scenes/Manager/LeadOn03.vcd"  //You take the lead.
	scene "scenes/Manager/LeadOn04.vcd"  //Go ahead.
	scene "scenes/Manager/LeadOn05.vcd"  //You first.
}
Rule PlayerLeadOnManager
{
	criteria ConceptPlayerLeadOn IsNotCoughing IsManager IsTalk IsTalkManager
	Response PlayerLeadOnManager
}

Response PlayerMoveOnManager
{
	scene "scenes/Manager/C6DLC3INTRO26.vcd" //Come on, we have to keep moving.
	scene "scenes/Manager/C6DLC3INTRO27.vcd" //Come on, we have to keep moving.
	scene "scenes/Manager/C6DLC3INTRO28.vcd" //Come on, we have to keep moving.
	scene "scenes/Manager/MoveOn01.vcd" //Allright, let's go.
	scene "scenes/Manager/MoveOn02.vcd" //Time to move.
	scene "scenes/Manager/MoveOn03.vcd" //Let's go.
	scene "scenes/Manager/MoveOn04.vcd" //Let's Move, Let's Move!
	scene "scenes/Manager/MoveOn05.vcd" //I really think we should keep moving.
	scene "scenes/Manager/MoveOn06.vcd" //Whaddya say we get moving?
	scene "scenes/Manager/MoveOn07.vcd" //Let's go.
	scene "scenes/Manager/MoveOn08.vcd" //Tme to move
	scene "scenes/Manager/ReviveFriendB10.vcd" //Let's move!
}
Rule PlayerMoveOnManager
{
	criteria ConceptPlayerMoveOn IsNotCoughing IsManager IsTalk IsTalkManager
	Response PlayerMoveOnManager
}

Response PlayerStayTogetherManager
{
	scene "scenes/Manager/StayTogether01.vcd" then any RespondAffirmative foo:0 0 //Stay close.
	scene "scenes/Manager/StayTogether02.vcd" then any RespondAffirmative foo:0 0 //Come on, we got to stay together.
	scene "scenes/Manager/StayTogether03.vcd" then any RespondAffirmative foo:0 0 //Keep together!
	scene "scenes/Manager/StayTogether04.vcd" then any RespondAffirmative foo:0 0 //Stay together!
	scene "scenes/Manager/StayTogether05.vcd" then any RespondAffirmative foo:0 0 //We've got to stick together.
	scene "scenes/Manager/StayTogether06.vcd" then any RespondAffirmative foo:0 0 //Nobody run off.
}
Rule PlayerStayTogetherManager
{
	criteria ConceptPlayerStayTogether IsNotCoughing IsManager IsTalk IsTalkManager
	Response PlayerStayTogetherManager
}

Response PlayerWatchOutBehindManager
{
	scene "scenes/Manager/WatchOutBehind01.vcd"  //Behind us!
	scene "scenes/Manager/WatchOutBehind02.vcd"  //They're behind us!
	scene "scenes/Manager/WatchOutBehind03.vcd"  //Turn around man!
}
Rule PlayerWatchOutBehindManager
{
	criteria ConceptPlayerWatchOutBehind IsNotCoughing IsManager IsTalk IsTalkManager
	Response PlayerWatchOutBehindManager
}


//--------------------------------------------------------------------------------------------------------------
// Rosetta - Manners
//--------------------------------------------------------------------------------------------------------------
Response PlayerAskReadyManager
{
	scene "scenes/Manager/AskReady01.vcd"  //Ready?
	scene "scenes/Manager/AskReady02.vcd"  //Ready?
	scene "scenes/Manager/AskReady03.vcd"  //Ready for this?
	scene "scenes/Manager/AskReady04.vcd"  //Ready for this?
	scene "scenes/Manager/AskReady05.vcd"  //Waddya say, we ready?
	scene "scenes/Manager/AskReady06.vcd"  then Zoey BounceReaction foo:0 0 //Your ready to bounce?
	scene "scenes/Manager/AskReady07.vcd"  //You Ready?
	scene "scenes/Manager/AskReady09.vcd"  //I'm ready, you ready?
}
Rule PlayerAskReadyManager
{
	criteria ConceptPlayerAskReady IsNotCoughing IsNotSpeaking IsManager IsTalk IsTalkManager
	Response PlayerAskReadyManager
}

Response PlayerImWithYouManager
{
	
	scene "scenes/Manager/ImWithYou01.vcd"  //Don't worry, I got your back.
	scene "scenes/Manager/ImWithYou02.vcd"  //Right behind you.
	scene "scenes/Manager/ImWithYou03.vcd"  //I'm with ya.
}
Rule PlayerImWithYouManager
{
	criteria ConceptPlayerImWithYou IsNotCoughing  IsManager IsTalk IsTalkManager
	Response PlayerImWithYouManager
}

Response PlayerLaughManager
{
	
	scene "scenes/Manager/Laughter01.vcd"  //<Short laugh>
	scene "scenes/Manager/Laughter02.vcd"  //[Nervous laugh]
	scene "scenes/Manager/Laughter03.vcd"  //[Snort]
	scene "scenes/Manager/Laughter04.vcd"  //<Hearty Laugh>
	scene "scenes/Manager/Laughter05.vcd"  //<Hearty Laugh>
	scene "scenes/Manager/Laughter06.vcd"  //<Short laugh>
	scene "scenes/Manager/Laughter07.vcd"  //<Short laugh>
	scene "scenes/Manager/Laughter08.vcd"  //<Short laugh>
	scene "scenes/Manager/Laughter09.vcd"  //<Short laugh>
	scene "scenes/Manager/Laughter10.vcd"  //<Short laugh>
	scene "scenes/Manager/Laughter11.vcd"  //<Short laugh>
	scene "scenes/Manager/Laughter12.vcd"  //<Short laugh>
	scene "scenes/Manager/Laughter13.vcd"  //<Hearty Laugh>
	scene "scenes/Manager/Laughter14.vcd"  //<Hearty Laugh>
	scene "scenes/Manager/Laughter15.vcd"  //[Snort]
	scene "scenes/Manager/Laughter16.vcd"  //<Short laugh>
	scene "scenes/Manager/Laughter17.vcd"  //<Short laugh>
	scene "scenes/Manager/Laughter18.vcd"  //<Short laugh>
	scene "scenes/Manager/Laughter19.vcd"  //<Short laugh>
	scene "scenes/Manager/Laughter20.vcd"  //<Hearty Laugh>
	scene "scenes/Manager/Laughter21.vcd"  //<Hearty Laugh>
	scene "scenes/Manager/PositiveNoise02.vcd"  //[Improv non-verbal pleasure & interest sounds]
	scene "scenes/Manager/Taunt07.vcd" //[loud, evil laugh]
	scene "scenes/Manager/Taunt08.vcd" //[loud, evil laugh]
	scene "scenes/Manager/Taunt09.vcd" //[loud, evil laugh]
	scene "scenes/Manager/Taunt10.vcd" //[loud, evil laugh]
}
Rule PlayerLaughManager
{
	criteria ConceptPlayerLaugh IsNotCoughing IsManager IsTalk IsTalkManager IsNotVersus
	Response PlayerLaughManager
}

Response LostCallManager
{
	
	scene "scenes/Manager/C6DLC3JUMPINGOFFBRIDGE14.vcd"  //I love you guys!
	scene "scenes/Manager/C6DLC3JUMPINGOFFBRIDGE15.vcd"  //I love you guys!
	scene "scenes/Manager/DLC1_C6M3_FinaleChat05.vcd"  //Hi, I'm Louis!
	scene "scenes/Manager/DLC1_C6M3_FinaleChat06.vcd"  //Hi, I'm Louis!
	scene "scenes/Manager/DLC1_C6M3_FinaleChat23.vcd"  //Hey guys! My name's Louis.
	scene "scenes/Manager/LostCall01.vcd"  //Hello?
	scene "scenes/Manager/LostCall03.vcd"  //Where is everyone?
	scene "scenes/Manager/LostCall04.vcd"  //Is anyone there?
	scene "scenes/Manager/LostCall05.vcd"  //Where'd everyone get to?
	scene "scenes/Manager/LostCall06.vcd"  //Can anyone hear me?
	scene "scenes/Manager/ScenarioJoin02.vcd"  //Hello!
	scene "scenes/Manager/WorldFarmHousenpc01.vcd"  //Hello?
	scene "scenes/Manager/WorldFarmHousenpc16.vcd"  //Hello?
}
Rule LostCallManager
{
	criteria ConceptPlayerLostCall IsNotCoughing  IsManager IsTalk IsTalkManager
	Response LostCallManager
}

Response PlayerNiceJobResponseManager
{
	
	scene "scenes/Manager/NiceJob01.vcd"  //Nice.
	scene "scenes/Manager/NiceJob02.vcd"  //Nice work.
	scene "scenes/Manager/NiceJob03.vcd"  //Nice job.
	scene "scenes/Manager/NiceJob04.vcd"  //Dammmn, man, that was nice.
	scene "scenes/Manager/NiceJob05.vcd"  //That was great.
	scene "scenes/Manager/NiceJob06.vcd"  //That was cool.
	scene "scenes/Manager/NiceJob07.vcd"  //Ah, that was off the chain
	scene "scenes/Manager/NiceShot03.vcd"  //Wooo, nice baby!
	scene "scenes/Manager/NiceShot05.vcd"  //Nice one!
}
Rule PlayerNiceJobResponseManager
{
	criteria ConceptPlayerNiceJob IsNotCoughing  IsManager IsTalk IsTalkManager
	Response PlayerNiceJobResponseManager
}

Response PlayerNoManager
{
	scene "scenes/Manager/No01.vcd"  //No way.
	scene "scenes/Manager/No02.vcd"  //Uh uh.
	scene "scenes/Manager/No03.vcd"  //Nope.
	scene "scenes/Manager/No04.vcd"  //Not a chance.
	scene "scenes/Manager/No05.vcd"  //No way, man.
	scene "scenes/Manager/No08.vcd"  //No.
	scene "scenes/Manager/No09.vcd"  //I said No
	scene "scenes/Manager/DLC2Intro03.vcd" //No.
	scene "scenes/Manager/GenericResponses39.vcd" //Oh no. Ain't no damn way...
}
Rule PlayerNoManager
{
	criteria ConceptPlayerNo IsNotCoughing  IsManager IsTalk IsTalkManager 
	Response PlayerNoManager
}

Response PlayerProfanityManager
{
	scene "scenes/Manager/DLC2SwearCoupDeGrace17.vcd"  //Oh it's BITCH apocalypse now, bitch. // test
	scene "scenes/Manager/PlayerTransitionClose01.vcd"  //Woah Jesus!
	scene "scenes/Manager/PlayerTransitionClose02.vcd"  //Dammit.
	scene "scenes/Manager/ReactionNegative04.vcd"  //ah, Jesus.
	scene "scenes/Manager/Swears02.vcd"  //Dammit.
	scene "scenes/Manager/Swears03.vcd"  //Aw hell.
	scene "scenes/Manager/Swears05.vcd"  //Shit.
	scene "scenes/Manager/Swears06.vcd"  //Ah shit.
	scene "scenes/Manager/Swears07.vcd"  //Shit shit shit.
	scene "scenes/Manager/Swears10.vcd"  //Dammit.
	scene "scenes/Manager/Swears11.vcd"  //Aw hell.
	scene "scenes/Manager/Swears12.vcd"  //Shit.
	scene "scenes/Manager/Swears13.vcd"  //Ah shit.
	scene "scenes/Manager/Swears16.vcd"  //That's some country-ass bullshit.
	scene "scenes/Manager/ViolenceAwe02.vcd"  //Jee-zus...
	scene "scenes/Manager/ViolenceAwe05.vcd"  //Holy shit...
	scene "scenes/Manager/ViolenceAwe08.vcd"  //Jee-zus...
	scene "scenes/Manager/ViolenceAwe10.vcd"  //Holy shit...
}
Rule PlayerProfanityManager
{
	criteria ConceptPlayerAnswerLostCall IsNotCoughing  IsManager IsTalk IsTalkManager 
	Response PlayerProfanityManager
}

Response PlayerSorryManager
{
	scene "scenes/Manager/Sorry01.vcd"  //Sorry!
	scene "scenes/Manager/Sorry02.vcd"  //Sorry!
	scene "scenes/Manager/Sorry03.vcd" //Sorry about that!
	scene "scenes/Manager/Sorry04.vcd" //Aww, man, sorry.
	scene "scenes/Manager/Sorry06.vcd"  //My bad.
	scene "scenes/Manager/Sorry07.vcd" //100% my fault
    scene "scenes/Manager/generic14.vcd" then any PlayerLaugh foo:0  -0.4 // BELCHE - excuse me
}
Rule PlayerSorryManager
{
	criteria ConceptPlayerSorry IsNotCoughing  IsManager IsTalk IsTalkManager 
	Response PlayerSorryManager
}

Response PlayerThanksManager
{
	scene "scenes/Manager/Thanks01.vcd"  //Thanks.
	scene "scenes/Manager/Thanks02.vcd"  //Thanks.
	scene "scenes/Manager/Thanks03.vcd"  //Thanks, I owe you one.
	scene "scenes/Manager/Thanks04.vcd"  //Thanks.
	scene "scenes/Manager/Thanks07.vcd"  //Thank you.
	scene "scenes/Manager/Thanks08.vcd"  //Thanks, I owe ya a big one.
	scene "scenes/Manager/Thanks09.vcd"  //Thanks a lot.
	scene "scenes/Manager/Thanks10.vcd"  //Whoo, thanks.
	scene "scenes/Manager/Thanks11.vcd"  //Hey, thanks.
}
Rule PlayerThanksManager
{
	criteria ConceptPlayerThanks IsNotCoughing  IsManager IsTalk IsTalkManager 
	Response PlayerThanksManager
}

Response PlayerYesManager
{
	scene "scenes/Manager/DLC1_C6M3_FinaleChat38.vcd"  //Okay.
	scene "scenes/Manager/DLC1_C6M3_FinaleChat39.vcd"  //Okay.
	scene "scenes/Manager/Yes01.vcd"  //Allright.
	scene "scenes/Manager/Yes02.vcd"  //Yeah.
	scene "scenes/Manager/Yes05.vcd"  //Okay.
	scene "scenes/Manager/Yes07.vcd"  //Yeah, I'm cool with that
	scene "scenes/Manager/Yes08.vcd"  //Yes
	scene "scenes/Manager/Yes09.vcd"  //Cool
	scene "scenes/Manager/GenericResponses15.vcd"  //Okay...
	scene "scenes/Manager/GenericResponses16.vcd"  //Hell yes.
//	scene "scenes/Manager/YouAreWelcome05.vcd"  //Hey, no problem.
//	scene "scenes/Manager/YouAreWelcome09.vcd"  //Hey, no problem.
//	scene "scenes/Manager/YouAreWelcome13.vcd"  //Hey, man, no problem.
//	scene "scenes/Manager/YouAreWelcome14.vcd"  //Not a problem.
	scene "scenes/Manager/YouAreWelcome16.vcd"  //Sure thing, man.
}
Rule PlayerYesManager
{
	criteria ConceptPlayerYes IsNotCoughing  IsManager IsTalk IsTalkManager
	Response PlayerYesManager
}

Response PlayerYouAreWelcomeManager
{
	scene "scenes/Manager/C6DLC3INTANKTRAINCAR03.vcd" //You're welcome.
	scene "scenes/Manager/C6DLC3INTANKTRAINCAR04.vcd" //You're welcome.
	scene "scenes/Manager/YouAreWelcome03.vcd"  //It's fine.
	scene "scenes/Manager/YouAreWelcome04.vcd"  //Any time.
	scene "scenes/Manager/YouAreWelcome05.vcd"  //Hey, no problem.
	scene "scenes/Manager/YouAreWelcome07.vcd"  //Sure.
	scene "scenes/Manager/YouAreWelcome08.vcd"  //Its all good.
	scene "scenes/Manager/YouAreWelcome09.vcd"  //Hey, no problem.
	scene "scenes/Manager/YouAreWelcome10.vcd"  //My pleasure.
	scene "scenes/Manager/YouAreWelcome13.vcd"  //Hey, man, no problem.
	scene "scenes/Manager/YouAreWelcome14.vcd"  //Not a problem.
	scene "scenes/Manager/YouAreWelcome15.vcd"  //You are totally welcome.
	scene "scenes/Manager/YouAreWelcome16.vcd"  //Sure thing, man.
	scene "scenes/Manager/YouAreWelcome17.vcd"  //Sure
}
Rule PlayerYouAreWelcomeManager
{
	criteria ConceptPlayerYouAreWelcome IsNotCoughing IsNotSpeaking IsManager IsTalk IsTalkManager
	Response PlayerYouAreWelcomeManager
}


//--------------------------------------------------------------------------------------------------------------
// Rosetta - Responses
//--------------------------------------------------------------------------------------------------------------
Response PlayerNegativeManager
{
	
	scene "scenes/Manager/NegativeNoise01.vcd"  //[Improv non-verbal displeasure & frustration sounds]
	scene "scenes/Manager/NegativeNoise02.vcd"  //[Improv non-verbal displeasure & frustration sounds]
	scene "scenes/Manager/NegativeNoise03.vcd"  //[Improv non-verbal displeasure & frustration sounds]
	scene "scenes/Manager/PlayerTransitionClose01.vcd"  //Woah Jesus!
	scene "scenes/Manager/PositiveNoise04.vcd"  //[Improv non-verbal pleasure & interest sounds]
	scene "scenes/Manager/ReactionNegative01.vcd"  //Uh oh.
	scene "scenes/Manager/ReactionNegative04.vcd"  //Ah, Jesus.
	
	scene "scenes/Manager/NervousHumming01.vcd"  //Ah, Jesus.
	scene "scenes/Manager/NervousHumming02.vcd"  //Ah, Jesus.
}
Rule PlayerNegativeManager
{
	criteria ConceptPlayerNegative IsNotCoughing  IsManager IsTalk IsTalkManager
	Response PlayerNegativeManager
}


//--------------------------------------------------------------------------------------------------------------
// Rosetta - Warning
//--------------------------------------------------------------------------------------------------------------
Response PlayerAreaClearManager
{
	scene "scenes/Manager/AreaClear01.vcd"  //Clear!
	scene "scenes/Manager/AreaClear02.vcd"  //Nothing in here!
	scene "scenes/Manager/AreaClear03.vcd"  //Nothin' here!
	scene "scenes/Manager/AreaClear04.vcd"  //All Clean!
}
Rule PlayerAreaClearManager
{
	criteria ConceptPlayerAreaClear IsNotCoughing IsNotSpeaking IsManager IsTalk IsTalkManager
	Response PlayerAreaClearManager
}

Response PlayerHeardTankManager
{
	scene "scenes/Manager/DLC1_L4D1Tank02.vcd"  //I am going to rip those tanks up!
	scene "scenes/Manager/WarnTank01.vcd"  //TANK!
	scene "scenes/Manager/WarnTank02.vcd"  //TANK!
	scene "scenes/Manager/WarnTank03.vcd"  //TANK!
}
Rule PlayerHeardTankManager
{
	criteria ConceptPlayerHeardTank IsNotCoughing IsNotSpeaking IsManager IsTalk IsTalkManager
	Response PlayerHeardTankManager
}

Response PlayerHurrahManager
{
	
	scene "scenes/Manager/Hurrah05.vcd"  then Any HurrahAlso foo:0 0 //We're going to be okay.
	scene "scenes/Manager/Hurrah06.vcd"  then Any HurrahAlso foo:0 0 //We're going to be okay.
	scene "scenes/Manager/Hurrah07.vcd"  then Any HurrahAlso foo:0 0 //Man, I think we're gonna make it.
	scene "scenes/Manager/Hurrah08.vcd"  then Any HurrahAlso foo:0 0 //They can't stop us now
	scene "scenes/Manager/Hurrah09.vcd"  then Any HurrahAlso foo:0 0 //Nothing can stop us.
	scene "scenes/Manager/Hurrah10.vcd"  then Any HurrahAlso foo:0 0 //Nothing can stop us, do you hear me? Nothing can stop us!
	scene "scenes/Manager/Hurrah11.vcd"  then Any HurrahAlso foo:0 0 //We are unstoppable.
	scene "scenes/Manager/Hurrah12.vcd"  then Any HurrahAlso foo:0 0 //That's right, we should call ourselves the unstoppables
	scene "scenes/Manager/Hurrah13.vcd"  then Any HurrahAlso foo:0 0 //We are unstoppable.
	scene "scenes/Manager/Hurrah16.vcd"  then Any HurrahAlso foo:0 0 //I am bad, yes I am bad, YES I AM! WOO!
	scene "scenes/Manager/PositiveNoise02.vcd"  //[Improv non-verbal pleasure & interest sounds]
	scene "scenes/Manager/PositiveNoise03.vcd"  //[Improv non-verbal pleasure & interest sounds]
	scene "scenes/Manager/PositiveNoise04.vcd"  //[Improv non-verbal pleasure & interest sounds]
	scene "scenes/Manager/ReactionPositive10.vcd"  //That's what I'm talkin' about
	scene "scenes/Manager/ReactionPositive05.vcd"  //That's what I'm talkin' about
	scene "scenes/Manager/ReactionPositive06.vcd"  //That's what I'm talkin' about
	scene "scenes/Manager/ReactionPositive07.vcd"  //That's what I'm talkin' about
	scene "scenes/Manager/SafeSpotAheadReaction01.vcd"  //That's what I'm talkin' about
	scene "scenes/Manager/SafeSpotAheadReaction02.vcd"  //That's what I'm talkin' about
	scene "scenes/Manager/SafeSpotAheadReaction03.vcd"  //That's what I'm talkin' about
	scene "scenes/Manager/SafeSpotAheadReaction05.vcd"  //That's what I'm talkin' about
	scene "scenes/Manager/riflerange_02.vcd"  //That's what I'm talkin' about
	scene "scenes/Manager/ZombieGenericShort14.vcd"  then Biker C7M3_saferoom002 foo:0 -3.349 //Stay positive, guys! I got a good feeling about this.
}
Rule PlayerHurrahManager
{
	criteria ConceptPlayerHurrah IsNotCoughing IsNotSpeaking IsManager IsTalk IsTalkManager
	Response PlayerHurrahManager
}

Response PlayerWarnCarefulManager
{
	scene "scenes/Manager/WarnCareful01.vcd" then any RespondAffirmative foo:0 0 //Be very damn careful....
	scene "scenes/Manager/WarnCareful02.vcd" then any RespondAffirmative foo:0 0 //Caarefullll...
	scene "scenes/Manager/WarnCareful03.vcd" then any RespondAffirmative foo:0 0 //Careful...
	scene "scenes/Manager/WarnCareful04.vcd" then any RespondAffirmative foo:0 0 //Be careful...
	scene "scenes/Manager/WarnCareful05.vcd" then any RespondAffirmative foo:0 0 //Watch yourself now...
	scene "scenes/Manager/WarnCareful06.vcd" then any RespondAffirmative foo:0 0 //Take it easy...
	scene "scenes/Manager/WarnCareful07.vcd" then any RespondAffirmative foo:0 0 //We gotta be careful...
	scene "scenes/Manager/WarnCareful08.vcd" then any RespondAffirmative foo:0 0 //Careful, careful
	scene "scenes/Manager/WarnCareful09.vcd" then any RespondAffirmative foo:0 0 //Careful...
	scene "scenes/Manager/WarnCareful10.vcd" then any RespondAffirmative foo:0 0 //We've got to be careful...
	scene "scenes/Manager/WarnCareful11.vcd" then any RespondAffirmative foo:0 0 //Careful...
}
Rule PlayerWarnCarefulManager
{
	criteria ConceptPlayerWarnCareful IsNotCoughing IsManager IsTalk IsTalkManager
	Response PlayerWarnCarefulManager
}


//--------------------------------------------------------------------------------------------------------------
// Smalltown Intro
//--------------------------------------------------------------------------------------------------------------
Response IntroSmalltownManager
{
	scene "scenes/Manager/WorldSmallTown0101.vcd"  then teengirl IntroSmallTown2 foo:0 0.05 //I heeard the military was evacuating people to Riverside.
	scene "scenes/Manager/WorldSmallTownIntro01.vcd"  then teengirl IntroSmallTown2 foo:0 0.05 //I heard reports that Riverside held out!
}
Rule IntroSmalltownManager
{
	criteria ConceptIntroSmalltown IsManager
	ApplyContext "talk:1:10"
	applycontexttoworld
	Response IntroSmalltownManager
}

Response IntroSmalltown3Manager
{
	scene "scenes/Manager/C6DLC3SECONDSAFEROOM24.vcd"  //Sounds good to me.
	scene "scenes/Manager/WorldFarmHouseNPC10.vcd"  //Sounds good to me.
	scene "scenes/Manager/WorldSmallTownIntro02.vcd"  //We get to Riverside and we'll probably be allright.
}
Rule IntroSmalltown3Manager
{
	criteria ConceptIntroSmalltown3 IsManager
	ApplyContext "talk:1:5"
	applycontexttoworld
	Response IntroSmalltown3Manager
}


//--------------------------------------------------------------------------------------------------------------
// Spawn  - Join
//--------------------------------------------------------------------------------------------------------------
Response SurvivorSpawnManager
{
	scene "scenes/Manager/ScenarioJoin01.vcd"  //I'm here!
	scene "scenes/Manager/ScenarioJoin02.vcd"  //Hello!
	scene "scenes/Manager/ScenarioJoin03.vcd"  //Hey, I'm here!
}
Rule SurvivorSpawnManager
{
	criteria ConceptPlayerScenarioJoin IsNotCoughing IsManager IsTalk IsTalkManager
	Response SurvivorSpawnManager
}

Response SurvivorSpawnLastMainstreetManager
{
	scene "scenes/Manager/blank.vcd"  //
}
Rule SurvivorSpawnLastMainstreetManager
{
	criteria ConceptPlayerScenarioJoinLast IsManager IsSmalltown04
	ApplyContext "RemarkableReadyToGo:1:500,RemarkableBlocker:1:5"
	applycontexttoworld
	Response SurvivorSpawnLastMainstreetManager
}


//--------------------------------------------------------------------------------------------------------------
// Vocalizer
//--------------------------------------------------------------------------------------------------------------
Response PlayerBillPouncedManager
{
	scene "scenes/Manager/HunterBillPounced01.vcd" predelay ".5,1" //Bill!
	scene "scenes/Manager/HunterBillPounced02.vcd" predelay ".5,1" //Hunter on Bill!
	scene "scenes/Manager/HunterBillPounced03.vcd" predelay ".5,1" //Hunter on Bill!
}
Rule PlayerBillPouncedManager
{
	criteria ConceptSurvivorWasPounced IsNotCoughing SubjectIsNamVet IsNotSaidBillPounced IsManager IsTalk IsTalkManager
	ApplyContext "BillPounced:1:60"
	applycontexttoworld
	Response PlayerBillPouncedManager
}

Response PlayerEatPillsManager
{
	scene "scenes/Manager/PainReliefSigh01.vcd"  //Ahhh.
	scene "scenes/Manager/PainReliefSigh02.vcd"  //Ah.
	scene "scenes/Manager/PainReliefSigh03.vcd"  //Ohhhhh.
	scene "scenes/Manager/PainReliefSigh04.vcd"  //Ohh.
	scene "scenes/Manager/PainReliefSigh05.vcd"  //Wooooohh.
	scene "scenes/Manager/ExertionCritical01.vcd"  //[Frightened breathing]
	scene "scenes/Manager/ExertionCritical02.vcd"  //[Frightened breathing]
	scene "scenes/Manager/ExertionCritical03.vcd"  //[Frightened breathing]
	scene "scenes/Manager/ExertionMajor01.vcd"  //[Heavy breathing]
	scene "scenes/Manager/ExertionMajor02.vcd"  //[Heavy breathing]
	scene "scenes/Manager/ExertionMinor01.vcd"  //[Out of breath]
	scene "scenes/Manager/ExertionMinor02.vcd"  //[Out of breath]
	scene "scenes/Manager/ExertionMinor03.vcd"  //[Out of breath]
	scene "scenes/Manager/ExertionMinor04.vcd"  //[Out of breath]
}
Rule PlayerEatPillsManager
{
	criteria ConceptEatPills IsNotCoughing IsManager IsTalk IsTalkManager
	Response PlayerEatPillsManager
}

Response PlayerUseAdrenalineManager
{
	scene "scenes/Manager/Shoved03.vcd" predelay "1.2" //Oof!
	scene "scenes/Manager/PainReliefSigh01.vcd" predelay "1.2" //Ahhh.
	scene "scenes/Manager/PainReliefSigh03.vcd" predelay "1.2" //Ohhhhh.
	scene "scenes/Manager/PainReliefSigh05.vcd" predelay "1.2" //Wooooohh.
	scene "scenes/Manager/ExertionCritical01.vcd" predelay "1.2" //[Frightened breathing]
	scene "scenes/Manager/ExertionCritical02.vcd" predelay "1.2" //[Frightened breathing]
	scene "scenes/Manager/ExertionCritical03.vcd" predelay "1.2" //[Frightened breathing]
	scene "scenes/Manager/ExertionMajor01.vcd" predelay "1.2" //[Heavy breathing]
	scene "scenes/Manager/ExertionMajor02.vcd" predelay "1.2" //[Heavy breathing]
	scene "scenes/Manager/ExertionMinor01.vcd" predelay "1.2" //[Out of breath]
	scene "scenes/Manager/ExertionMinor02.vcd" predelay "1.2" //[Out of breath]
	scene "scenes/Manager/ExertionMinor03.vcd" predelay "1.2" //[Out of breath]
	scene "scenes/Manager/ExertionMinor04.vcd" predelay "1.2" //[Out of breath]
}
Rule PlayerUseAdrenalineManager
{
	criteria ConceptUseAdrenaline IsManager IsTalk IsTalkManager IsWorldTalkManager
	Response PlayerUseAdrenalineManager
}

Response PlayerRelaxedSighManager
{
	scene "scenes/Manager/PainReliefSigh01.vcd"  //Ahhh.
	scene "scenes/Manager/PainReliefSigh03.vcd"  //Ohhhhh.
	scene "scenes/Manager/PainReliefSigh05.vcd"  //Wooooohh.
	
	scene "scenes/Manager/ExertionCritical01.vcd"  //[Frightened breathing]
	scene "scenes/Manager/ExertionCritical02.vcd"  //[Frightened breathing]
	scene "scenes/Manager/ExertionCritical03.vcd"  //[Frightened breathing]
	scene "scenes/Manager/ExertionMajor01.vcd"  //[Heavy breathing]
	scene "scenes/Manager/ExertionMajor02.vcd"  //[Heavy breathing]
	scene "scenes/Manager/ExertionMinor01.vcd"  //[Out of breath]
	scene "scenes/Manager/ExertionMinor02.vcd"  //[Out of breath]
	scene "scenes/Manager/ExertionMinor03.vcd"  //[Out of breath]
	scene "scenes/Manager/ExertionMinor04.vcd"  //[Out of breath]
}
Rule PlayerRelaxedSighManager
{
	criteria ConceptRelaxedSigh IsManager IsTalk IsTalkManager SubjectIsNotManager IsWorldTalkManager
	Response PlayerRelaxedSighManager
}

Response PlayerFrancisPouncedManager
{
	scene "scenes/Manager/HunterFrancisPounced01.vcd" predelay ".5,1" //Francis!
	scene "scenes/Manager/HunterFrancisPounced02.vcd" predelay ".5,1" //Hunter on Francis!
	scene "scenes/Manager/HunterFrancisPounced03.vcd" predelay ".5,1" //Hunter on Francis!
}
Rule PlayerFrancisPouncedManager
{
	criteria ConceptSurvivorWasPounced IsNotCoughing SubjectIsBiker IsNotSaidFrancisPounced IsManager IsTalk IsTalkManager
	ApplyContext "FrancisPounced:1:60"
	applycontexttoworld
	Response PlayerFrancisPouncedManager
}

Response PlayerGetInsideCheckPointManager
{
	scene "scenes/Manager/StayTogetherInside01.vcd" then any RespondAffirmative foo:0 0 //C'mon, everyone inside, inside!
	scene "scenes/Manager/StayTogetherInside02.vcd" then any RespondAffirmative foo:0 0 //Let's get inside!
	scene "scenes/Manager/StayTogetherInside04.vcd" then any RespondAffirmative foo:0 0 //We gotta get inside!
}
Rule PlayerGetInsideCheckPointManager
{
	criteria ConceptPlayerGetInsideCheckPoint  IsNotCoughing IsManager IsInSafeSpot IsTalk IsTalkManager SomeoneOutsideSafeSpot
	Response PlayerGetInsideCheckPointManager
}

Response PlayerGrabbedByJockeyManager
{
	scene "scenes/Manager/HurtCritical01.vcd"  //[Pain noise - loud major pain]
	scene "scenes/Manager/HurtCritical02.vcd"  //[Pain noise - loud major pain]
	scene "scenes/Manager/HurtCritical03.vcd"  //[Pain noise - loud major pain]
	scene "scenes/Manager/HurtMajor08.vcd"  //[Pain noise - ugh]
	scene "scenes/Manager/ScreamWhilePounced01.vcd"  //Get it off me! Get it off me!
	scene "scenes/Manager/ScreamWhilePounced01.vcd"  //Get it off me! Get it off me!
	scene "scenes/Manager/ScreamWhilePounced02.vcd"  //GET IT GET IT Get it off me! Get it off me!
	scene "scenes/Manager/ScreamWhilePounced02.vcd"  //GET IT GET IT Get it off me! Get it off me!
	scene "scenes/Manager/ScreamWhilePounced03.vcd"  //GET IT GET IT Get it off me! Get it off me!
	scene "scenes/Manager/ScreamWhilePounced03.vcd"  //GET IT GET IT Get it off me! Get it off me!
}
Rule PlayerGrabbedByJockeyManager
{
	criteria ConceptSurvivorJockeyed IsNotCoughing IsManager IsTalk IsTalkManager IsNotSaidBeenJockeyedManager IsWorldTalkManager
	ApplyContext "SaidBeenJockeyedManager:1:6,_auto_NoSpotting:1:4"
	applycontexttoworld
	Response PlayerGrabbedByJockeyManager
}

Response PlayerGrenadeManager
{
	scene "scenes/Manager/Grenade01.vcd" predelay ".5,1" then Any GrenadeCareful foo:0 0 //GRENADE!
	scene "scenes/Manager/Grenade02.vcd" predelay ".5,1" then Any GrenadeCareful foo:0 0 //GRENADE!
	scene "scenes/Manager/Grenade03.vcd" predelay ".5,1" then Any GrenadeCareful foo:0 0 //DUCK AND COVER!
	scene "scenes/Manager/Grenade04.vcd" predelay ".5,1" then Any GrenadeCareful foo:0 0 //FIRE IN THE HOLE!
	scene "scenes/Manager/Grenade05.vcd" predelay ".5,1" then Any GrenadeCareful foo:0 0 //FIRE IN THE HOLE!
	scene "scenes/Manager/Grenade06.vcd" predelay ".5,1" then Any GrenadeCareful foo:0 0 //LOOK OUT, GRENADE!
	scene "scenes/Manager/Grenade07.vcd" predelay ".5,1" then Any GrenadeCareful foo:0 0 //GRENADE!
}
Rule PlayerGrenadeManager
{
	criteria ConceptThrewGrenade IsNotCoughing IsManager IsTalk IsTalkManager
	Response PlayerGrenadeManager
}

Response PlayerGrenadeCarefulManager
{
	scene "scenes/Manager/ReactionApprehensive01.vcd"  //I have a bad feeling about this.
	scene "scenes/Manager/WarnCareful01.vcd"  //Be very damn careful....
	scene "scenes/Manager/WarnCareful02.vcd"  //Caarefullll...
	scene "scenes/Manager/WarnCareful03.vcd"  //Careful...
	scene "scenes/Manager/WarnCareful05.vcd"  //Watch yourself now...
	scene "scenes/Manager/WarnCareful09.vcd"  //Careful...
}
Rule PlayerGrenadeCarefulManager
{
	criteria ConceptGrenadeCareful IsNotCoughing IsManager IsWitchPresent NotInCombat IssuerClose IsTalk IsTalkManager
	Response PlayerGrenadeCarefulManager
}

Response PlayerIncapacitatedInitialManager
{
	scene "scenes/Manager/IncapacitatedInitial01.vcd" then any PlayerToTheRescue foo:0 0 //Ahhhh, I'm down!
	scene "scenes/Manager/IncapacitatedInitial02.vcd" then any PlayerToTheRescue foo:0 0 //Ahhhh, I'm down!
	scene "scenes/Manager/IncapacitatedInitial03.vcd" then any PlayerToTheRescue foo:0 0 //Jesus! I'm down!
	scene "scenes/Manager/IncapacitatedInitial04.vcd" then any PlayerToTheRescue foo:0 0 //Shit! I'm down!
	scene "scenes/Manager/IncapacitatedInitial05.vcd" then any PlayerToTheRescue foo:0 0 //I'm down!
}
Rule PlayerIncapacitatedInitialManager
{
	criteria ConceptPlayerIncapacitated IsNotCoughing  IsManager IsTalk IsTalkManager
	ApplyContext "TalkManager:1:2"
	Response PlayerIncapacitatedInitialManager
}

Response PlayerKillConfirmationManager
{
	scene "scenes/Manager/KillConfirmation01.vcd"  then Any PlayerNiceShot foo:0 0 //Got it!
	scene "scenes/Manager/KillConfirmation02.vcd"  then Any PlayerNiceShot foo:0 0 //Killed it!
	scene "scenes/Manager/KillConfirmation03.vcd"  then Any PlayerNiceShot foo:0 0 //Dead!
	scene "scenes/Manager/KillConfirmation04.vcd"  then Any PlayerNiceShot foo:0 0 //Got it!
	scene "scenes/Manager/KillConfirmation05.vcd"  then Any PlayerNiceShot foo:0 0 //Killed it!
	scene "scenes/Manager/KillConfirmation06.vcd"  then Any PlayerNiceShot foo:0 0 //Dead!
	scene "scenes/Manager/RifleRange_02.vcd"  then Any PlayerNiceShot foo:0 0 //Dead!
}
Rule PlayerKillConfirmationManager
{
	criteria ConceptKilledZombie IsNotCoughing IsNotSpeaking IsManager IsTalk IsTalkManager SubjectIsNotTank IsSubjectFar300
	Response PlayerKillConfirmationManager
}

Response PlayerKillTankConfirmationManager
{
	scene "scenes/Manager/C6DLC3BRIDGEAVAILABLE01.vcd" then any playerTaunt foo:0 0 //We did it!
	scene "scenes/Manager/PlayerTransitionClose01.vcd" then any playerTaunt foo:0 0 //Woah Jesus!
	scene "scenes/Manager/PlayerTransitionClose03.vcd" then any playerTaunt foo:0 0 //At least we're safe now!
	scene "scenes/Manager/SafeSpotAheadReaction02.vcd" then any playerTaunt foo:0 0 //We made it!
	scene "scenes/Manager/SafeSpotAheadReaction03.vcd" then any playerTaunt foo:0 0 //Knew we'd make it!
	scene "scenes/Manager/SafeSpotAheadReaction05.vcd" then any playerTaunt foo:0 0 //Man, I KNEW we was gonna make it.
}
Rule PlayerKillTankConfirmationManager
{
	criteria ConceptKilledZombie IsNotCoughing IsManager IsNotSaidTankDead SubjectIsTank IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "SaidTankDead:1:60,TalkManager:1:5"
	applycontexttoworld
	Response PlayerKillTankConfirmationManager
}

Response PlayerLockTheDoorCheckPointManager
{
	scene "scenes/Manager/CloseTheDoor01.vcd" then any RespondAffirmative foo:0 0 //Lock that door.
	scene "scenes/Manager/CloseTheDoor02.vcd" then any RespondAffirmative foo:0 0 //Lock the door.
	scene "scenes/Manager/CloseTheDoor03.vcd" then any RespondAffirmative foo:0 0 //Lock the damn door.
	scene "scenes/Manager/CloseTheDoor04.vcd" then any RespondAffirmative foo:0 0 //Go ahead and lock that door.
	scene "scenes/Manager/CloseTheDoor05.vcd" then any RespondAffirmative foo:0 0 //Lock the damn door.
	scene "scenes/Manager/CloseTheDoor06.vcd" then any RespondAffirmative foo:0 0 //Did you lock the door?
	scene "scenes/Manager/CloseTheDoor07.vcd" then any RespondAffirmative foo:0 0 //Lock the door, man!
}
Rule PlayerLockTheDoorCheckPointManager
{
	criteria ConceptPlayerLockTheDoorCheckPoint IsNotCoughing IsManager IsInSafeSpot IsTalk IsTalkManager
	Response PlayerLockTheDoorCheckPointManager
}

Response PlayerStayTogetherInsideManager
{
	scene "scenes/Manager/StayTogetherInside01.vcd" then any RespondAffirmative foo:0 0 //C'mon, everyone inside, inside!
	scene "scenes/Manager/StayTogetherInside02.vcd" then any RespondAffirmative foo:0 0 //Let's get inside!
	scene "scenes/Manager/StayTogetherInside04.vcd" then any RespondAffirmative foo:0 0 //We gotta get inside!
}
Rule PlayerStayTogetherInsideManager
{
	criteria ConceptPlayerStayTogether IsNotCoughing IsManager IsInSafeSpot IsTalk IsTalkManager SomeoneOutsideSafeSpot
	Response PlayerStayTogetherInsideManager
}

Response PlayerSuggestHealthLouisManager
{
	scene "scenes/Manager/PlayerSuggestHealth01.vcd"  //Maybe you oughtta heal up.
}
Rule PlayerSuggestHealthLouisManager
{
	criteria ConceptPlayerSuggestHealth IsManager IssuerReallyClose IsNotSuggestedHealth IsNotBeingHealed IsTalk IsTalkManager IsNotSpeaking NotInCombat IsWorldTalkManager
	ApplyContext "SuggestedHealth:1:120"
	applycontexttoworld
	Response PlayerSuggestHealthLouisManager
}

Response PlayerSuggestHealthBillManager
{
	scene "scenes/Manager/PlayerSuggestHealthBill01.vcd" then namvet RespondAffirmative foo:0 0 //Bill, you might wanna use your med kit.
	scene "scenes/Manager/PlayerSuggestHealthBill02.vcd" then namvet RespondAffirmative foo:0 0 //Bill, you oughtta heal.
	scene "scenes/Manager/PlayerSuggestHealthBill03.vcd" then namvet RespondAffirmative foo:0 0 //Hey Bill, might be a good time to patch yerself up.
}
Rule PlayerSuggestHealthBillManager
{
	criteria ConceptPlayerSuggestHealthNamVet IsManager IssuerReallyClose IsNotSuggestedHealth IsNotBeingHealed IsTalk IsTalkManager IsNotSpeaking NotInCombat
	ApplyContext "SuggestedHealth:1:120"
	applycontexttoworld
	Response PlayerSuggestHealthBillManager
}

Response PlayerSuggestHealthFrancisManager
{
	scene "scenes/Manager/PlayerSuggestHealthFrancis01.vcd" then biker RespondAffirmative foo:0 0 //Francis, you should use your med kit.
	scene "scenes/Manager/PlayerSuggestHealthFrancis02.vcd" then biker RespondAffirmative foo:0 0 //Hey tough guy, heal up.
	scene "scenes/Manager/PlayerSuggestHealthFrancis03.vcd" then biker RespondAffirmative foo:0 0 //Yo Francis, come on buddy, heal up.
	scene "scenes/Manager/PlayerSuggestHealthFrancis04.vcd" then biker RespondAffirmative foo:0 0 //Francis, patch yerself up.
}
Rule PlayerSuggestHealthFrancisManager
{
	criteria ConceptPlayerSuggestHealthBiker IsManager IssuerReallyClose IsNotSuggestedHealth IsNotBeingHealed IsTalk IsTalkManager IsNotSpeaking NotInCombat
	ApplyContext "SuggestedHealth:1:120"
	applycontexttoworld
	Response PlayerSuggestHealthFrancisManager
}

Response PlayerSuggestHealthZoeyManager
{
	scene "scenes/Manager/PlayerSuggestHealthZoey01.vcd" then teengirl RespondAffirmative foo:0 0 //Zoey, you really oughtta heal.
	scene "scenes/Manager/PlayerSuggestHealthZoey02.vcd" then teengirl RespondAffirmative foo:0 0 //Go on and heal up, girl.
	scene "scenes/Manager/PlayerSuggestHealthZoey03.vcd" then teengirl RespondAffirmative foo:0 0 //Might be a good time to heal, Zoey.
	scene "scenes/Manager/PlayerSuggestHealthZoey04.vcd" then teengirl RespondAffirmative foo:0 0 //Come on, girl - time to heal up.
	scene "scenes/Manager/PlayerSuggestHealthZoey05.vcd" then teengirl RespondAffirmative foo:0 0 //Go on and heal up, Zoey.
}
Rule PlayerSuggestHealthZoeyManager
{
	criteria ConceptPlayerSuggestHealthTeenGirl IsManager IssuerReallyClose IsNotSuggestedHealth IsNotBeingHealed IsTalk IsTalkManager IsNotSpeaking NotInCombat
	ApplyContext "SuggestedHealth:1:120"
	applycontexttoworld
	Response PlayerSuggestHealthZoeyManager
}

Response PlayerSuggestMeHealthBikerManager
{
	scene "scenes/Manager/blank.vcd"  then Any PlayerSuggestHealthBiker foo:0 0 //
}
Rule PlayerSuggestMeHealthBikerManager
{
	criteria ConceptTalkIdle IsNotHealthy NotInCombat YesHasFirstAidKit IsBiker IsNotBeingHealed IsTalk IsTalkManager
	Response PlayerSuggestMeHealthBikerManager
}

Response PlayerSuggestMeHealthManagerManager
{
	scene "scenes/Manager/blank.vcd"  then Any PlayerSuggestHealth foo:0 0 //
}
Rule PlayerSuggestMeHealthManagerManager
{
	criteria ConceptTalkIdle IsNotHealthy NotInCombat YesHasFirstAidKit IsManager IsNotBeingHealed IsTalk IsTalkManager
	Response PlayerSuggestMeHealthManagerManager
}

Response PlayerSuggestMeHealthNamVetManager
{
	scene "scenes/Manager/blank.vcd"  then Any PlayerSuggestHealthNamVet foo:0 0 //
}
Rule PlayerSuggestMeHealthNamVetManager
{
	criteria ConceptTalkIdle IsNotHealthy NotInCombat YesHasFirstAidKit IsNamVet IsNotBeingHealed IsTalk IsTalkManager
	Response PlayerSuggestMeHealthNamVetManager
}

Response PlayerSuggestMeHealthTeenGirlManager
{
	scene "scenes/Manager/blank.vcd"  then Any PlayerSuggestHealthTeenGirl foo:0 0 //
}
Rule PlayerSuggestMeHealthTeenGirlManager
{
	criteria ConceptTalkIdle IsNotHealthy NotInCombat YesHasFirstAidKit IsTeenGirl IsNotBeingHealed IsTalk IsTalkManager
	Response PlayerSuggestMeHealthTeenGirlManager
}

Response PlayerTransitionManager
{
	scene "scenes/Manager/Hurrah02.vcd"  //Woo baby, Aw riiiight!
	scene "scenes/Manager/Hurrah09.vcd"  //Nothing can stop us.
	scene "scenes/Manager/NiceJob03.vcd"  //Nice job.
	scene "scenes/Manager/PlayerTransitionClose04.vcd"  //BOOM-diah
	scene "scenes/Manager/PositiveNoise02.vcd"  //[Improv non-verbal pleasure & interest sounds]
	scene "scenes/Manager/PositiveNoise03.vcd"  //[Improv non-verbal pleasure & interest sounds]
	scene "scenes/Manager/ReactionPositive05.vcd"  //Allright!
	scene "scenes/Manager/ReactionPositive06.vcd"  //Heh hehhhh.
	scene "scenes/Manager/ReactionPositive07.vcd"  //Nice!
	scene "scenes/Manager/ReactionPositive09.vcd"  //Sweet Baby!
	scene "scenes/Manager/ReactionPositive10.vcd"  //That's what I'm talkin' about
	scene "scenes/Manager/SafeSpotAheadReaction01.vcd"  //Finally!
	scene "scenes/Manager/SafeSpotAheadReaction02.vcd"  //We made it!
	scene "scenes/Manager/Taunt03.vcd"  //Yeah, baby, Yeah!
	scene "scenes/Manager/Taunt05.vcd"  //Oh yeah, who's your momma, who's your daddy
	scene "scenes/Manager/Taunt07.vcd"  //[loud, evil laugh]
	scene "scenes/Manager/Taunt08.vcd"  //[loud, evil laugh]
	scene "scenes/Manager/Taunt09.vcd"  //[loud, evil laugh]
	scene "scenes/Manager/Taunt10.vcd"  //[loud, evil laugh]
}
Rule PlayerTransitionManager
{
	criteria ConceptPlayerTransition IsNotCoughing IsManager IsNotSaidPlayerTransition IsTalk IsTalkManager
	ApplyContext "SaidPlayerTransition:1:90"
	applycontexttoworld
	Response PlayerTransitionManager
}

Response PlayerTransitionCloseManager
{
	scene "scenes/Manager/PlayerTransitionClose01.vcd"  //Woah Jesus!
	scene "scenes/Manager/PlayerTransitionClose02.vcd"  //Damn!
	scene "scenes/Manager/PlayerTransitionClose03.vcd"  //At least we're safe now!
}
Rule PlayerTransitionCloseManager
{
	criteria ConceptPlayerTransition IsNotCoughing IsManager IsNotSaidPlayerTransition IsTalk IsTalkManager IsCloseTransition
	ApplyContext "SaidPlayerTransition:1:90"
	applycontexttoworld
	Response PlayerTransitionCloseManager
}

Response PlayerUsingDefibrillatorManager
{
	scene "scenes/Manager/DLC2M2FinaleButtonPressLift01.vcd"  //I'm sure this will just take a second!
	scene "scenes/Manager/ReviveFriendB02.vcd"  //Come on up!
	scene "scenes/Manager/ReviveFriendB09.vcd"  //Come on up.
	scene "scenes/Manager/ReviveFriendLoud04.vcd"  //Come on, get up!
	scene "scenes/Manager/ReviveFriendLoud09.vcd"  //Come on now. Get up!
}
Rule PlayerUsingDefibrillatorManager
{
	criteria ConceptPlayerUsingDefibrillator IsNotCoughing IsManager IsTalk IsTalkManager IsWorldTalkManager
	Response PlayerUsingDefibrillatorManager
}

Response PlayerWarnHeardBoomerManager
{
	scene "scenes/Manager/HeardBoomer01.vcd"  //Watch your fire, I hear a Boomer.
	scene "scenes/Manager/HeardBoomer02.vcd"  //I hear a Boomer.
	scene "scenes/Manager/HeardBoomer03.vcd"  //Careful, there's a Boomer's around.
	scene "scenes/Manager/HeardBoomer04.vcd"  //I hear a Boomer.
	scene "scenes/Manager/HeardBoomer05.vcd"  //Careful, I hear a Boomer.
	scene "scenes/Manager/HeardBoomer06.vcd"  //Watch it, I hear a Boomer.
	scene "scenes/Manager/HeardBoomer07.vcd"  //Heads up, man, I hear a Boomer.
	scene "scenes/Manager/HeardBoomer08.vcd"  //Ah, man, that sounds like a Boomer.
	scene "scenes/Manager/HeardBoomer09.vcd"  //Look out, we got a Boomer around here.
	scene "scenes/Manager/HeardBoomer10.vcd"  //I definitely hear a Boomer.
	scene "scenes/Manager/HeardBoomer11.vcd"  //Watch your fire, I hear a Boomer.
	scene "scenes/Manager/HeardBoomer12.vcd"  //Careful, there's a Boomer's around.
	scene "scenes/Manager/HeardBoomer13.vcd"  //I hear a Boomer.
	scene "scenes/Manager/HeardBoomer14.vcd"  //Careful, I hear a Boomer.
	scene "scenes/Manager/HeardBoomer15.vcd"  //Watch it, I hear a Boomer.
	scene "scenes/Manager/HeardBoomer16.vcd"  //Heads up, man, I hear a Boomer.
	scene "scenes/Manager/HeardBoomer17.vcd"  //Ah, man, that sounds like a Boomer.
	scene "scenes/Manager/HeardBoomer18.vcd"  //Look out, we got a Boomer around here.
	scene "scenes/Manager/HeardBoomer19.vcd"  //I definitely hear a Boomer.
}
Rule PlayerWarnHeardBoomerManager
{
	criteria ConceptPlayerWarnHearZombie IsBoomerClass IsNotCoughing IsManager IsNotWarnHeardBoomer NotInCombat IsNotSaidSpecialWarn IsTalk IsTalkManager
	ApplyContext "WarnHeardBoomer :1:300,SaidSpecialWarn:1:30"
	applycontexttoworld
	Response PlayerWarnHeardBoomerManager
}

Response PlayerWarnHeardHunterManager
{
	scene "scenes/Manager/HeardHunter01.vcd"  //Watch your back, I hear a Hunter.
	scene "scenes/Manager/HeardHunter02.vcd"  //Careful, I hear a Hunter.
	scene "scenes/Manager/HeardHunter03.vcd"  //I hear a Hunter
	scene "scenes/Manager/HeardHunter04.vcd"  //There's a Hunter out there.
	scene "scenes/Manager/HeardHunter05.vcd"  //Careful now,  there's a Hunter around here.
	scene "scenes/Manager/HeardHunter06.vcd"  //Watch your back, I hear a Hunter.
	scene "scenes/Manager/HeardHunter07.vcd"  //Careful, I hear a Hunter.
	scene "scenes/Manager/HeardHunter08.vcd"  //I hear a Hunter
	scene "scenes/Manager/HeardHunter09.vcd"  //There's a Hunter out there.
	scene "scenes/Manager/HeardHunter10.vcd"  //Careful now, there's a hunter around here.
}
Rule PlayerWarnHeardHunterManager
{
	criteria ConceptPlayerWarnHearZombie IsHunterClass IsNotCoughing IsManager IsNotWarnHeardHunter NotInCombat IsNotSaidSpecialWarn IsTalk IsTalkManager
	ApplyContext "WarnHeardHunter :1:300,SaidSpecialWarn:1:30"
	applycontexttoworld
	Response PlayerWarnHeardHunterManager
}

Response PlayerWarnHeardSmokerManager
{
	scene "scenes/Manager/HeardSmoker01.vcd"  //There's a Smoker around here.
	scene "scenes/Manager/HeardSmoker02.vcd"  //Smoker - somewhere around here.
	scene "scenes/Manager/HeardSmoker03.vcd"  //Careful, I smell a Smoker.
	scene "scenes/Manager/HeardSmoker04.vcd"  //I hear a Smoker.
	scene "scenes/Manager/HeardSmoker05.vcd"  //There's a Smoker around here.
	scene "scenes/Manager/HeardSmoker06.vcd"  //Smoker - somewhere around here.
	scene "scenes/Manager/HeardSmoker07.vcd"  //Careful, I smell a Smoker.
	scene "scenes/Manager/HeardSmoker08.vcd"  //I hear a Smoker.
}
Rule PlayerWarnHeardSmokerManager
{
	criteria ConceptPlayerWarnHearZombie IsSmokerClass IsNotCoughing IsManager IsNotWarnHeardSmoker NotInCombat IsNotSaidSpecialWarn IsTalk IsTalkManager
	ApplyContext "WarnHeardSmoker :1:300,SaidSpecialWarn:1:30"
	applycontexttoworld
	Response PlayerWarnHeardSmokerManager
}

Response PlayerWarnHeardWitchManager
{
	scene "scenes/Manager/HeardWitch01.vcd"  then Any PlayerKillThatLight foo:0 0 //Shhh, I hear a Witch.
	scene "scenes/Manager/HeardWitch02.vcd"  then Any PlayerKillThatLight foo:0 0 //I hear a Witch.
	scene "scenes/Manager/HeardWitch03.vcd"  then Any PlayerKillThatLight foo:0 0 //I hear a damn Witch.
	scene "scenes/Manager/HeardWitch04.vcd"  then Any PlayerKillThatLight foo:0 0 //There's a Witch around here.
	scene "scenes/Manager/HeardWitch05.vcd"  then Any PlayerKillThatLight foo:0 0 //Hold on, hold on, shhh, that's a witch!
	scene "scenes/Manager/HeardWitch06.vcd"  then Any PlayerKillThatLight foo:0 0 //Ahh damn, a witch is around here.
	scene "scenes/Manager/HeardWitch07.vcd"  then Any PlayerKillThatLight foo:0 0 //Stop, Stop, Stop - I hear a witch
}
Rule PlayerWarnHeardWitchManager
{
	criteria ConceptPlayerWarnHearZombie IsWitchClass IsNotCoughing IsManager IsNotWarnHeardWitch NotInCombat IsNotSaidSpecialWarn IsTalk IsTalkManager
	ApplyContext "WarnHeardWitch:1:300,SaidSpecialWarn:1:30"
	applycontexttoworld
	Response PlayerWarnHeardWitchManager
}

Response PlayerWarnMegaMobManager
{
	scene "scenes/Manager/Incoming01.vcd" predelay "2.5,3.5" //Here they come!
	scene "scenes/Manager/Incoming02.vcd" predelay "2.5,3.5" //They're comin'!
	scene "scenes/Manager/Incoming03.vcd" predelay "2.5,3.5" //Incoming!
	scene "scenes/Manager/Incoming04.vcd" predelay "2.5,3.5" //Oh shit, here they come!
	scene "scenes/Manager/ReactionNegative01.vcd" predelay "2.5,3.5" //Uh oh.
	scene "scenes/Manager/ReactionNegative04.vcd" predelay "2.5,3.5" //ah, Jesus.
	scene "scenes/Manager/HordeAttack02.vcd" predelay "2.5,3.5" //Oh my god, here they come!
	scene "scenes/Manager/HordeAttack03.vcd" predelay "2.5,3.5" then any RespondAffirmative foo:0 0 //They're coming! You guys ready?
}
Rule PlayerWarnMegaMobManager
{
	criteria ConceptPlayerWarnMegaMob IsNotCoughing IsManager IsNotWarnMegaMob IsTalk IsTalkManager IsNotSpeaking
	ApplyContext "WarnMegaMob:1:300,SaidSpecialWarn:1:30"
	applycontexttoworld
	Response PlayerWarnMegaMobManager
}

Response PlayerWarnMegaMobCraneManager
{
	scene "scenes/Manager/ReactionNegative01.vcd" predelay "2.5,3.5" //Uh oh.
}
Rule PlayerWarnMegaMobCraneManager
{
	criteria ConceptPlayerWarnMegaMob IsNotCoughing IsManager IsNotWarnMegaMob IsTalk IsTalkManager IsAirport02CraneStarted  IsNotSpeaking
	ApplyContext "WarnMegaMob:1:300,SaidSpecialWarn:1:30"
	applycontexttoworld
	Response PlayerWarnMegaMobCraneManager
}

Response PlayerWarnWitchAngryManager
{
	scene "scenes/Manager/WitchGettingAngry01.vcd" then any PlayerBackupQuiet foo:0 0 //Yo, that Witch ain't gonna set still much longer.
	scene "scenes/Manager/WitchGettingAngry02.vcd" then any PlayerBackupQuiet foo:0 0 //Will you stop that shit?  The witch ain't gonna sit still much longer
	scene "scenes/Manager/WitchGettingAngry03.vcd" then any PlayerBackupQuiet foo:0 0 //Stop freakin' out the damn Witch.
	scene "scenes/Manager/WitchGettingAngry04.vcd" then any PlayerBackupQuiet foo:0 0 //Oh man, do not piss the witch off!
	scene "scenes/Manager/WitchGettingAngry05.vcd" then any PlayerBackupQuiet foo:0 0 //The Witch is getting up!
}
Rule PlayerWarnWitchAngryManager
{
	criteria ConceptWitchGettingAngry IsNotCoughing IsManager IsNotWarnAngryWitch IsTalk IsTalkManager
	ApplyContext "WarnAngryWitch:1:5,SaidSpecialWarn:1:30"
	applycontexttoworld
	Response PlayerWarnWitchAngryManager
}

Response PlayerZoeyPouncedManager
{
	scene "scenes/Manager/HunterZoeyPounced01.vcd" predelay ".5,1" //Hunter on Zoey!
	scene "scenes/Manager/HunterZoeyPounced02.vcd" predelay ".5,1" //Zoey!
	scene "scenes/Manager/HunterZoeyPounced03.vcd" predelay ".5,1" //Hunter on Zoey!
}
Rule PlayerZoeyPouncedManager
{
	criteria ConceptSurvivorWasPounced IsNotCoughing SubjectIsTeenGirl IsNotSaidZoeyPounced IsManager IsTalk IsTalkManager
	ApplyContext "ZoeyPounced:1:60"
	applycontexttoworld
	Response PlayerZoeyPouncedManager
}

Response SurvivorCaughtVomitManager
{
	scene "scenes/Manager/ReactionBoomerVomit01.vcd"  //sptting gross noises
	scene "scenes/Manager/ReactionBoomerVomit02.vcd"  //sptting gross noises
	scene "scenes/Manager/ReactionBoomerVomit03.vcd"  //sptting gross noises
	scene "scenes/Manager/ReactionBoomerVomit04.vcd"  //sptting gross noises
}
Rule SurvivorCaughtVomitManager
{
	criteria ConceptPlayerVomitInFace IsNotCoughing IsManager IsTalk IsTalkManager
	Response SurvivorCaughtVomitManager
}

Response SurvivorGooedBySpitterManager
{
	scene "scenes/Manager/C6DLC3INTANKTRAINCAR06.vcd"  //This is some gross ass shit.
	scene "scenes/Manager/C6DLC3INTANKTRAINCAR07.vcd"  //Ewww! This is some gross ass shit.
	scene "scenes/Manager/ReactionDisgusted01.vcd"  //Ewwww...
	scene "scenes/Manager/ReactionDisgusted02.vcd"  //Blecch..
	scene "scenes/Manager/ReactionDisgusted03.vcd"  //That is some nasty shit.
	scene "scenes/Manager/ReactionDisgusted04.vcd"  //Yuck.
}
Rule SurvivorGooedBySpitterManager
{
	criteria ConceptGooedBySpitter IsNotCoughing IsManager IsTalk IsTalkManager IsNotSaidGooedBySpitter IsWorldTalkManager
	ApplyContext "SaidGooedBySpitter:1:20,TalkManager:1:3"
	Response SurvivorGooedBySpitterManager
}

Response SurvivorCoughingManager
{
	scene "scenes/Manager/Cough01.vcd"  //[Coughing from smoke]
	scene "scenes/Manager/Cough02.vcd"  //[Coughing from smoke]
	scene "scenes/Manager/Cough03.vcd"  //[Coughing from smoke]
	scene "scenes/Manager/Cough04.vcd"  //[Coughing from smoke]
	scene "scenes/Manager/Cough05.vcd"  //[Coughing from smoke]
}
Rule SurvivorCoughingManager
{
	criteria ConceptSurvivorCoughing IsCoughing IsManager IsTalk IsTalkManager
	Response SurvivorCoughingManager
}

Response SurvivorCoughingDeathManager
{
	scene "scenes/Manager/Cough01.vcd"  //[Coughing from smoke]
	scene "scenes/Manager/Cough02.vcd"  //[Coughing from smoke]
	scene "scenes/Manager/Cough03.vcd"  //[Coughing from smoke]
	scene "scenes/Manager/Cough04.vcd"  //[Coughing from smoke]
	scene "scenes/Manager/Cough05.vcd"  //[Coughing from smoke]
}
Rule SurvivorCoughingDeathManager
{
	criteria ConceptSurvivorCoughing IsNotCoughing IsManager IsTalk IsTalkManager
	Response SurvivorCoughingDeathManager
}

Response SurvivorDeathManager
{
	
	scene "scenes/Manager/DeathScream01.vcd"  //[Death rattle and final breath]
	scene "scenes/Manager/DeathScream02.vcd"  //[Loud, painful death scream]
	scene "scenes/Manager/DeathScream03.vcd"  //[Loud, painful death scream]
	scene "scenes/Manager/DeathScream04.vcd"  //[Loud, painful death scream]
	scene "scenes/Manager/DeathScream05.vcd"  //[Loud, painful death scream]
	scene "scenes/Manager/DeathScream06.vcd"  //[Short quick death scream]
	scene "scenes/Manager/DeathScream07.vcd"  //[Short quick death scream]
	scene "scenes/Manager/DeathScream08.vcd"  //[Death rattle and final breath]
	scene "scenes/Manager/DeathScream09.vcd"  //[Death rattle and final breath]
	scene "scenes/Manager/DeathScream10.vcd"  //[Death rattle and final breath]
	scene "scenes/Manager/Fall01.vcd" //[Death scream]
	scene "scenes/Manager/Fall02.vcd" //[Death scream]
	scene "scenes/Manager/Fall03.vcd" //[Death scream]
	scene "scenes/Manager/IncapacitatedInjury01.vcd"  //[Ahhhh - terrified yell]
	scene "scenes/Manager/IncapacitatedInjury02.vcd"  //[Ahhhh - terrified yell]
	scene "scenes/Manager/IncapacitatedInjury03.vcd"  //[Ahhhh - terrified yell]
}
Rule SurvivorDeathManager
{
	criteria ConceptPlayerDeath IsNotCoughing IsManager IsTalk IsTalkManager
	Response SurvivorDeathManager
}

Response SurvivorFinaleAheadHospitalManager
{
	scene "scenes/Manager/FinaleAheadHospital01.vcd"  //I hear the pilot!
	scene "scenes/Manager/WorldHospital0501.vcd"  //Let's find that radio.
}
Rule SurvivorFinaleAheadHospitalManager
{
	criteria ConceptPlayerNearFinale IsNotCoughing IsNamVet IsNotSaidFinaleAhead NotInCombat ismap_l4d_hospital05_rooftop IsTalk IsTalkManager IsNotIncapacitated
	ApplyContext "SaidFinaleAhead:1:30"
	applycontexttoworld
	Response SurvivorFinaleAheadHospitalManager
}

Response SurvivorGrabbedByTongueManager
{
	scene "scenes/Manager/GrabbedBySmoker01a.vcd"  //no, No, NO, NO!!!!!
	scene "scenes/Manager/GrabbedBySmoker01b.vcd"  //no, No, NO, NO!!!!!
	scene "scenes/Manager/GrabbedBySmoker02a.vcd"  //no, No, NO, NOOOOOOO!!!!!!!!!
	scene "scenes/Manager/GrabbedBySmoker02b.vcd"  //no, No, NO, NOOOOOOO!!!!!!!!!
	scene "scenes/Manager/GrabbedBySmoker03a.vcd"  //no, No, NO, NOOOOOOO!!!!!!!!!
	scene "scenes/Manager/GrabbedBySmoker03b.vcd"  //no, No, NO, NOOOOOOO!!!!!!!!!
	scene "scenes/Manager/GrabbedBySmoker04.vcd"  //no, No, NO, NOOOOOOO!!!!!!!!!
}
Rule SurvivorGrabbedByTongueManager
{
	criteria ConceptPlayerGrabbedByTongue IsNotCoughing IsManager IsTalk IsTalkManager
	Response SurvivorGrabbedByTongueManager
}

Response SurvivorPouncedByHunterManager
{
	scene "scenes/Manager/ScreamWhilePounced01.vcd" then any PlayerToTheRescue foo:0 0 //Get it off me! Get it off me!
	scene "scenes/Manager/ScreamWhilePounced02.vcd" then any PlayerToTheRescue foo:0 0 //GET IT GET IT Get it off me! Get it off me!
	scene "scenes/Manager/ScreamWhilePounced03.vcd" then any PlayerToTheRescue foo:0 0 //GET IT GET IT Get it off me! Get it off me!
}
Rule SurvivorPouncedByHunterManager
{
	criteria ConceptScreamWhilePounced IsNotCoughing IsNotSpeaking IsManager IsTalk IsTalkManager IsWorldTalkManager
	Response SurvivorPouncedByHunterManager
}

Response SurvivorNearFinaleManager
{
	scene "scenes/Manager/FinaleAhead01.vcd"  //We're almost out of here!
	scene "scenes/Manager/FinaleAhead02.vcd"  //We're almost out of here!
}
Rule SurvivorNearFinaleManager
{
	criteria ConceptPlayerNearFinale IsNotCoughing IsManager IsNotSaidFinaleAhead NotInCombat IsTalk IsTalkManager IsNotIncapacitated AutoIsNotScavenge AutoIsNotSurvival
	ApplyContext "SaidFinaleAhead:1:30"
	applycontexttoworld
	Response SurvivorNearFinaleManager
}

Response SurvivorTankPoundManager
{
	scene "scenes/Manager/TankPound01.vcd" then any PlayerToTheRescue foo:0 0 //Get this thing off me!
	scene "scenes/Manager/TankPound02.vcd" then any PlayerToTheRescue foo:0 0 //Ah shit, ah shit. Stop this thing!
	scene "scenes/Manager/TankPound03.vcd" then any PlayerToTheRescue foo:0 0 //AAHHHH It's crushing me!
	scene "scenes/Manager/TankPound04.vcd" then any PlayerToTheRescue foo:0 0 //I can't breath, help me, I can't breath
	scene "scenes/Manager/TankPound05.vcd" then any PlayerToTheRescue foo:0 0 //Shoot it, I can't breath, shoot it
}
Rule SurvivorTankPoundManager
{
	criteria ConceptPlayerGroundPoundedByTank IsNotSpeaking IsManager IsTalk IsTalkManager
	ApplyContext "SaidTankWarn2:1:60"
	Response SurvivorTankPoundManager
}

Response SurvivorChargerPoundManager
{
	scene "scenes/Manager/TankPound01.vcd" then any PlayerToTheRescue foo:0 0 //Get this thing off me!
	scene "scenes/Manager/TankPound02.vcd" then any PlayerToTheRescue foo:0 0 //Ah shit, ah shit. Stop this thing!
	scene "scenes/Manager/TankPound03.vcd" then any PlayerToTheRescue foo:0 0 //AAHHHH It's crushing me!
	scene "scenes/Manager/TankPound04.vcd" then any PlayerToTheRescue foo:0 0 //I can't breath, help me, I can't breath
	scene "scenes/Manager/TankPound05.vcd" then any PlayerToTheRescue foo:0 0 //Shoot it, I can't breath, shoot it
}
Rule SurvivorChargerPoundManager
{
	criteria ConceptChargerPound IsNotCoughing IsManager IsTalk IsTalkManager IsNotSaidChargerPound IsWorldTalkManager
	ApplyContext "SaidChargerPound:1:5,TalkManager:1:5"
	Response SurvivorChargerPoundManager
}

Response SurvivorVocalizeBackUpManager
{
	scene "scenes/Manager/BackUp01.vcd"  //Back up!
	scene "scenes/Manager/BackUp02.vcd"  //Backbackback!
	scene "scenes/Manager/BackUp03.vcd"  //Back up!
}
Rule SurvivorVocalizeBackUpManager
{
	criteria ConceptPlayerBackUp IsManager IsNotInSafeSpot IsNotInCheckpoint IsTalk IsTalkManager
	Response SurvivorVocalizeBackUpManager
}

Response SurvivorVocalizeEmphaticGoManager
{
	
	scene "scenes/Manager/DLC1_C6M3_L4D1FinaleBridgeRun02.vcd"  //Get going! Get going!
	scene "scenes/Manager/EmphaticGo02.vcd"  //Go go go!
	scene "scenes/Manager/EmphaticGo03.vcd"  //Go go GO!
	scene "scenes/Manager/EmphaticGo04.vcd"  //GO!
	scene "scenes/Manager/EmphaticGo05.vcd"  //MOVE!
	scene "scenes/Manager/EmphaticGo06.vcd"  //C'mon go!
	scene "scenes/Manager/EmphaticGo07.vcd"  //MOVE!
	scene "scenes/Manager/EmphaticGo08.vcd"  //MOVE IT!
	scene "scenes/Manager/EmphaticGo09.vcd"  //Move it mooove it!
	scene "scenes/Manager/WorldHospital0415.vcd"  //Let's go, let's go!
}
Rule SurvivorVocalizeEmphaticGoManager
{
	criteria ConceptPlayerEmphaticGo IsManager  IsNotInSafeSpot IsNotInCheckpoint IsTalk IsTalkManager
	Response SurvivorVocalizeEmphaticGoManager
}

Response SurvivorVocalizeFollowMeManager
{
	scene "scenes/Manager/FollowMe02.vcd" //Follow me.
	scene "scenes/Manager/FollowMe03.vcd" //Follow me!
}
Rule SurvivorVocalizeFollowMeManager
{
	criteria ConceptPlayerFollowMe IsNotCoughing IsManager IsTalk IsTalkManager
	Response SurvivorVocalizeFollowMeManager
}

Response SurvivorVocalizeGoingToDieManager
{
	scene "scenes/Manager/GoingToDie01.vcd"  //I don't feel so good
	scene "scenes/Manager/GoingToDie02.vcd"  //I don't, I don't know if I'm going to make it
	scene "scenes/Manager/GoingToDie03.vcd"  //I feel awful.
	scene "scenes/Manager/GoingToDie04.vcd"  //I'm not gonna last much longer.
	scene "scenes/Manager/GoingToDie06.vcd"  //Shit, I am really messed up.
	scene "scenes/Manager/GoingToDie08.vcd"  //I have to heal up.
	scene "scenes/Manager/GoingToDie09.vcd"  //Every part of me hurts.
	scene "scenes/Manager/GoingToDie10.vcd"  //This sucks.
	scene "scenes/Manager/GoingToDie11.vcd"  //At this rate, I'm not gonna make it.
	scene "scenes/Manager/GoingToDie12.vcd"  //I feel terrible.
	scene "scenes/Manager/GoingToDie13.vcd"  //This is bad. This is really bad.
	scene "scenes/Manager/GoingToDie14.vcd"  //I think I'm hurt bad.
	scene "scenes/Manager/GoingToDie16.vcd"  //I feel terrible.
	scene "scenes/Manager/GoingToDie17.vcd"  //I feel awful
	scene "scenes/Manager/GoingToDie19.vcd"  //I think something's broken.
	scene "scenes/Manager/GoingToDie20.vcd"  //I should have stayed in damn the store...
	scene "scenes/Manager/GoingToDie22.vcd"  //[pain sound] Dammit.
	scene "scenes/Manager/GoingToDie24.vcd"  //Oh man, I am in sorry ass shape.
	scene "scenes/Manager/GoingToDie25.vcd"  //I feel kinda woozy.
	scene "scenes/Manager/GoingToDie27.vcd"  //Every part of me hurts
	scene "scenes/Manager/GoingToDieLight03.vcd"  //Man, this hurts.
	scene "scenes/Manager/GoingToDieLight14.vcd"  //[pain noise] Oh man, every damn thing hurts.
	scene "scenes/Manager/GoingToDieLight15.vcd"  //[blows air out through pursed lips] This is some real bullshit right here.
	scene "scenes/Manager/GoingToDieLight17.vcd"  //Ah. [pain noise] hell, hell.
	scene "scenes/Manager/ExertionMajor01.vcd"  //[Heavy breathing]
	scene "scenes/Manager/ExertionMajor02.vcd"  //[Heavy breathing]
	scene "scenes/Manager/ExertionMinor01.vcd"  //[Out of breath]
	scene "scenes/Manager/ExertionMinor02.vcd"  //[Out of breath]
	scene "scenes/Manager/ExertionMinor03.vcd"  //[Out of breath]
	scene "scenes/Manager/ExertionMinor04.vcd"  //[Out of breath]
}
Rule SurvivorVocalizeGoingToDieManager
{
	criteria ConceptPlayerGoingToDie IsNotSpeaking IsNotCoughing IsManager IsTalk IsTalkManager IsNotComplainBlock
	ApplyContext "IsComplain:1:25"
	Response SurvivorVocalizeGoingToDieManager
}

Response SurvivorVocalizeGoingToDie3Manager
{
	scene "scenes/Manager/GoingToDie05.vcd"  //I really need to get some First Aid.
	scene "scenes/Manager/GoingToDie07.vcd"  //I don't think I'm gonnna make it.
	scene "scenes/Manager/GoingToDie15.vcd"  //I think I'm dyin'.
	scene "scenes/Manager/GoingToDie18.vcd"  //[gasps and sharp intake of breath]
	scene "scenes/Manager/GoingToDie21.vcd"  //I'm not kidding, we need to find me some First Aid.
	scene "scenes/Manager/GoingToDie23.vcd"  //Ah, I might not make it
	scene "scenes/Manager/GoingToDie26.vcd"  //I'm not gonna make it man
	scene "scenes/Manager/GoingToDieLight12.vcd"  //[quiet pep talk to self]C'mon Louis: you are NOT dyin' here.
	scene "scenes/Manager/GoingToDieLight16.vcd"  //I don't wanna die. I know nobody wants to die, but I'm like, fifty times that.
	scene "scenes/Manager/ExertionCritical01.vcd"  //[Frightened breathing]
	scene "scenes/Manager/ExertionCritical02.vcd"  //[Frightened breathing]
	scene "scenes/Manager/ExertionCritical03.vcd"  //[Frightened breathing]
}
Rule SurvivorVocalizeGoingToDie3Manager
{
	criteria ConceptPlayerGoingToDie IsNotSpeaking IsNotCoughing IsManager IsOnThirdStrike IsTalk IsTalkManager IsNotComplainBlock
	ApplyContext "IsComplain:1:25"
	Response SurvivorVocalizeGoingToDie3Manager
}

Response SurvivorVocalizeGoingToDieAloneManager
{
	scene "scenes/Manager/NervousHumming01.vcd"  //[Nervous Humming]
	scene "scenes/Manager/NervousHumming02.vcd"  //[Nervous Humming]
	scene "scenes/Manager/NervousWhislte01.vcd"  //[Nervous Whistle]// IsOnThirdStrike
}
Rule SurvivorVocalizeGoingToDieAloneManager
{
	criteria ConceptPlayerGoingToDie IsNotSpeaking IsNotCoughing IsManager IsAlone NotInCombat IsNotSaidNervous IsTalk IsTalkManager
	ApplyContext "SaidNervous:1:0"
	Response SurvivorVocalizeGoingToDieAloneManager
}

Response SurvivorVocalizeLookOutManager
{
	scene "scenes/Manager/LookOut01.vcd"  //Look out!
	scene "scenes/Manager/LookOut02.vcd"  //Look out!
	scene "scenes/Manager/LookOut03.vcd"  //Watch out!
	scene "scenes/Manager/LookOut04.vcd"  //Watch out!
	scene "scenes/Manager/LookOut05.vcd"  //Heads up!
	scene "scenes/Manager/LookOut06.vcd"  //Heads up!
}
Rule SurvivorVocalizeLookOutManager
{
	criteria ConceptPlayerLookOut IsNotCoughing IsManager IsTalk IsTalkManager
	Response SurvivorVocalizeLookOutManager
}

Response SurvivorVocalizeThisWayManager
{
	scene "scenes/Manager/FollowMe01.vcd" //Come on this way.
	scene "scenes/Manager/FollowMe04.vcd" //This way.
	scene "scenes/Manager/FollowMe05.vcd" //Come on man, this way.
	scene "scenes/Manager/GenericDirections05.vcd" //Through here!
	scene "scenes/Manager/WorldHospital0301.vcd"  //Tch. I think it's this way.
	scene "scenes/Manager/WorldHospital0107.vcd" //This way!
}
Rule SurvivorVocalizeThisWayManager
{
	criteria ConceptPlayerThisWay IsNotCoughing IsManager IsTalk IsTalkManager
	Response SurvivorVocalizeThisWayManager
}

Response SurvivorVocalizeWaitHereManager
{
	scene "scenes/Manager/WaitHere01.vcd" then any RespondAffirmative foo:0 0 //Let's wait here.
	scene "scenes/Manager/WaitHere02.vcd" then any RespondAffirmative foo:0 0 //Hold up! Let's wait here
	scene "scenes/Manager/WaitHere03.vcd" then any RespondAffirmative foo:0 0 //Chill, let's wait here.
	scene "scenes/Manager/WaitHere04.vcd" then any RespondAffirmative foo:0 0 //Everybody hold up!
	scene "scenes/Manager/WaitHere05.vcd" then any RespondAffirmative foo:0 0 //Hold up! Hold Up!
}
Rule SurvivorVocalizeWaitHereManager
{
	criteria ConceptPlayerWaitHere IsNotCoughing IsManager IsTalk IsTalkManager IssuerCloseEnough IsNotIncapacitated
	Response SurvivorVocalizeWaitHereManager
}

Response SurvivorWarnSpitterIncomingManager
{
	scene "scenes/Manager/LookOut01.vcd"  //Look out!
	scene "scenes/Manager/LookOut03.vcd"  //Watch out!
	scene "scenes/Manager/LookOut05.vcd"  //Heads up!
}
Rule SurvivorWarnSpitterIncomingManager
{
	criteria ConceptWarnSpitterIncoming IsNotCoughing IsManager IsTalk IsTalkManager IsNotSaidWarnSpitterIncoming IsWorldTalkManager
	ApplyContext "SaidWarnSpitterIncoming:1:10"
	Response SurvivorWarnSpitterIncomingManager
}


//--------------------------------------------------------------------------------------------------------------
// Vocalizer - Danger
//--------------------------------------------------------------------------------------------------------------
Response PlayerLedgeHangEndManager
{
	scene "scenes/Manager/LedgeHangEnd01.vcd" then any PlayerToTheRescue foo:0 0 //I'M SLIPPING! PULL ME UP!
	scene "scenes/Manager/LedgeHangEnd02.vcd" then any PlayerToTheRescue foo:0 0 //I'm about to fall off this thing. HELP! HELLLLLP!!!!
	scene "scenes/Manager/LedgeHangEnd03.vcd" then any PlayerToTheRescue foo:0 0 //I CAN'T HOLD ON - I CAN'T HOLD ON I'M FALLING!
	scene "scenes/Manager/LedgeHangEnd04.vcd" then any PlayerToTheRescue foo:0 0 //SOMEBOY, SOMEBODY OH SHIT I'M FALLING! I'M FALLING!
}
Rule PlayerLedgeHangEndManager
{
	criteria ConceptPlayerLedgeHangEnd IsNotCoughing IsManager IsTalk IsTalkManager
	Response PlayerLedgeHangEndManager
}

Response PlayerLedgeHangMiddleManager
{
	scene "scenes/Manager/LedgeHangMiddle01.vcd" then any PlayerToTheRescue foo:0 0 //I really do need someone to pull me up!
	scene "scenes/Manager/LedgeHangMiddle02.vcd" then any PlayerToTheRescue foo:0 0 //Somebody really needs to get over here a pull me up!
	scene "scenes/Manager/LedgeHangMiddle03.vcd" then any PlayerToTheRescue foo:0 0 //Hey, I'm still hanging off a ledge here!
	scene "scenes/Manager/LedgeHangMiddle04.vcd" then any PlayerToTheRescue foo:0 0 //It's a long way down here. You gotta pull me up!
	scene "scenes/Manager/LedgeHangMiddle05.vcd" then any PlayerToTheRescue foo:0 0 //Come on man, I'm not playin', get over here and pull me up!
	scene "scenes/Manager/LedgeHangMiddle06.vcd" then any PlayerToTheRescue foo:0 0 //I'm getting tired of hanging around, pull me up!
}
Rule PlayerLedgeHangMiddleManager
{
	criteria ConceptPlayerLedgeHangMiddle IsNotCoughing IsManager IsTalk IsTalkManager
	Response PlayerLedgeHangMiddleManager
}

Response PlayerLedgeHangStartManager
{
	scene "scenes/Manager/LedgeHangStart01.vcd" then any PlayerToTheRescue foo:0 0 //Someone pull me up!
	scene "scenes/Manager/LedgeHangStart02.vcd" then any PlayerToTheRescue foo:0 0 //Could somebody give me a hand up over here?
	scene "scenes/Manager/LedgeHangStart03.vcd" then any PlayerToTheRescue foo:0 0 //Could somebody give me a hand up over here?
	scene "scenes/Manager/LedgeHangStart04.vcd" then any PlayerToTheRescue foo:0 0 //I could really use a hand up over here!
	scene "scenes/Manager/LedgeHangStart05.vcd" then any PlayerToTheRescue foo:0 0 //Hey! I need somebody to pull me up!
	scene "scenes/Manager/LedgeHangStart06.vcd" then any PlayerToTheRescue foo:0 0 //Throw me a hand man, pull me up!
	scene "scenes/Manager/LedgeHangStart07.vcd" then any PlayerToTheRescue foo:0 0 //Don't laugh man, just pull me up
}
Rule PlayerLedgeHangStartManager
{
	criteria ConceptPlayerLedgeHangStart IsNotCoughing IsManager IsTalk IsTalkManager
	Response PlayerLedgeHangStartManager
}


//--------------------------------------------------------------------------------------------------------------
// Vocalizer - Death
//--------------------------------------------------------------------------------------------------------------
Response DoubleDeathManager
{
	scene "scenes/Manager/DoubleDeathResponse01.vcd" predelay ".5,1.25" //This shit was not in my plans.
	scene "scenes/Manager/DoubleDeathResponse02.vcd" predelay ".5,1.25" //We gotta pull ourselves together.
	scene "scenes/Manager/GriefBiker03.vcd" predelay ".5,1.25" //Oh shit. Shit. Shit shit shit.
	scene "scenes/Manager/GriefBiker06.vcd" predelay ".5,1.25" //Oh shit. Shit. Shit shit shit.
}
Rule DoubleDeathManager
{
	criteria ConceptSurvivorDied IsNotCoughing IsManager  IsSaidSomeoneDied IsTalk IsTalkManager IsNotSaidSomeoneDiedDouble
	ApplyContext "SaidSomeoneDied:1:10,SaidSomeoneDiedDouble:1:10,SaidSomeoneDiedKill:1:20"
	applycontexttoworld
	Response DoubleDeathManager
}

Response SurvivorDiedBillManager
{
	scene "scenes/Manager/C6DLC3BILLDIES03.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //BILLLLLLLL!
	scene "scenes/Manager/GriefVet01.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Bill, no!
	scene "scenes/Manager/GriefVet03.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Ah Bill. Ah, shit.
	scene "scenes/Manager/GriefVet04.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Bill, Bill, no!
	scene "scenes/Manager/GriefVet06.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Bill, no!
	scene "scenes/Manager/GriefVet08.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Ah Bill. Ah, shit.
	scene "scenes/Manager/NameBill01.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Bill! (loud)
	scene "scenes/Manager/NameBill02.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Bill! (loud)
}
Rule SurvivorDiedBillManager
{
	criteria ConceptSurvivorDied IsNotCoughing IsManager IsDeadNamVet IsNotSaidSomeoneDied IsTalk IsTalkManager
	ApplyContext "SaidSomeoneDied:1:10,SaidSomeoneDiedKill:1:20"
	applycontexttoworld
	Response SurvivorDiedBillManager
}

Response SurvivorDiedFrancisManager
{
	scene "scenes/Manager/C6DLC3FRANCISDIES02.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Fraaaancis!
	scene "scenes/Manager/C6DLC3FRANCISDIES05.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //FRANCIS!
	scene "scenes/Manager/GriefBiker01.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Francis!  NO!
	scene "scenes/Manager/GriefBiker04.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Francis!  NO!
	scene "scenes/Manager/GriefBiker05.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Jesus, Francis!
	scene "scenes/Manager/GriefBiker07.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Jesus Christ, Francis, no, Francis!
	scene "scenes/Manager/NameFrancis01.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Francis! (loud)
	scene "scenes/Manager/NameFrancis02.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Francis! (loud)
}
Rule SurvivorDiedFrancisManager
{
	criteria ConceptSurvivorDied IsNotCoughing IsManager IsDeadBiker IsNotSaidSomeoneDied IsTalk IsTalkManager
	ApplyContext "SaidSomeoneDied:1:10,SaidSomeoneDiedKill:1:20"
	applycontexttoworld
	Response SurvivorDiedFrancisManager
}

Response SurvivorDiedZoeyManager
{
	scene "scenes/Manager/C6DLC3ZOEYDIES01.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Oh my god! Zoey!
	scene "scenes/Manager/C6DLC3ZOEYDIES02.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Oh my god! Zoey!
	scene "scenes/Manager/C6DLC3ZOEYDIES04.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Ah Damnit, Zoey's dead!
	scene "scenes/Manager/C6DLC3ZOEYDIES05.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Not Zoey!
	scene "scenes/Manager/GriefTeengirl01.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Ah! Zoey!
	scene "scenes/Manager/GriefTeengirl02.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //ZOEY! Goddamn it.
	scene "scenes/Manager/GriefTeengirl03.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Noo, oh ho ho, ZOEY!
	scene "scenes/Manager/GriefTeengirl06.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Zoey!
	scene "scenes/Manager/NameZoey01.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Zoey! (loud)
	scene "scenes/Manager/NameZoey02.vcd" predelay ".5,1.25" then Any Death2Left foo:0 0 //Zoey! (loud)
}
Rule SurvivorDiedZoeyManager
{
	criteria ConceptSurvivorDied IsNotCoughing IsManager IsDeadTeenGirl IsNotSaidSomeoneDied IsTalk IsTalkManager
	ApplyContext "SaidSomeoneDied:1:10,SaidSomeoneDiedKill:1:20"
	applycontexttoworld
	Response SurvivorDiedZoeyManager
}


//--------------------------------------------------------------------------------------------------------------
// Vocalizer - Pickups
//--------------------------------------------------------------------------------------------------------------
Response SurvivorPickupAutoShotgunManager
{
	scene "scenes/Manager/TakeAutoShotgun01.vcd"  //I'll take this shotgun.
	scene "scenes/Manager/TakeAutoShotgun02.vcd"  //I'll take the shotgun.
	scene "scenes/Manager/TakeAutoShotgun03.vcd"  //I'm grabbing this shotgun.
	scene "scenes/Manager/TakeAutoShotgun04.vcd"  //Got the shotgun.
	scene "scenes/Manager/TakeAutoShotgun05.vcd"  //Oh, I'm grabbing this shotgun.
}
Rule SurvivorPickupAutoShotgunManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpAutoShotgun IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem  IsTalk IsTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupAutoShotgunManager
}

Rule SurvivorPickupShotgun_spasManager
{
	criteria ConceptPlayerPickup IsNotCoughing IsManager IsPickedUpShotgun_spas IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem  IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupAutoShotgunManager
}

Rule SurvivorPickupShotgun_spasAlwaysManager
{
	criteria ConceptPlayerPickup IsNotCoughing IsManager IsPickedUpShotgun_spas IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem  IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupAutoShotgunManager
}

Response SurvivorPickupFirstAidKitManager
{
	scene "scenes/Manager/TakeFirstAid01.vcd"  //First Aid. [to self]
	scene "scenes/Manager/TakeFirstAid02.vcd"  //Grabbing First Aid!
	scene "scenes/Manager/TakeFirstAid03.vcd"  //Oh, this first aid is mine!
}
Rule SurvivorPickupFirstAidKitManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpFirstAidKit IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem IsNotInStartArea IsTalk IsTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupFirstAidKitManager
}

Response SurvivorPickupHuntingRifleManager
{
	scene "scenes/Manager/TakeSniper01.vcd"  //I'm gonna take this rifle.
	scene "scenes/Manager/TakeSniper02.vcd"  //This is a nice rifle.
}
Rule SurvivorPickupHuntingRifleManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpHuntingRifle IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem  IsTalk IsTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupHuntingRifleManager
}

Rule SurvivorPickupSniper_militaryManager
{
	criteria ConceptPlayerPickup IsNotCoughing IsManager IsPickedUpSniper_military IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem  IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupHuntingRifleManager
}

Rule SurvivorPickupSniper_militaryAlwaysManager
{
	criteria ConceptPlayerPickup IsNotCoughing IsManager IsPickedUpSniper_military IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupHuntingRifleManager
}

Response SurvivorPickupMolotovManager
{
	scene "scenes/Manager/TakeMolotov01.vcd"  //Molotovs. [to self]
	scene "scenes/Manager/TakeMolotov02.vcd"  //Grabbing a Molotov.
	scene "scenes/Manager/TakeMolotov03.vcd"  //Molotovs, hell yeah!
}
Rule SurvivorPickupMolotovManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpMolotov IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem IsNotInStartArea IsTalk IsTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupMolotovManager
}

Response SurvivorPickupPainPillsManager
{
	scene "scenes/Manager/TakePills01.vcd"  //Better grab everything I can [to self]
	scene "scenes/Manager/TakePills02.vcd"  //Grabbing Pills.
}
Rule SurvivorPickupPainPillsManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpPainPills IsNotSpeaking IsNotInSafeSpot IsNotInStartArea IsTalk IsTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupPainPillsManager
}

Response SurvivorPickupPipeBombManager
{
	scene "scenes/Manager/TakePipeBomb01.vcd"  //Woah, this'll blow something up
	scene "scenes/Manager/TakePipeBomb02.vcd"  //Grabbing a pipe bomb.
	scene "scenes/Manager/TakePipeBomb03.vcd" //Woo hoo hoo hoo, I'm grabbing a pipe bomb.
	scene "scenes/Manager/TakePipeBomb05.vcd" //This shit look real jerry-rigged.
}
Rule SurvivorPickupPipeBombManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpPipeBomb IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem IsNotInStartArea IsTalk IsTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupPipeBombManager
}

Response SurvivorPickupPumpShotgunManager
{
	scene "scenes/Manager/TakeShotgun01.vcd"  //Guess I'll try this shotgun.
}
Rule SurvivorPickupPumpShotgunManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpPumpShotgun IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem  IsTalk IsTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupPumpShotgunManager
}

Rule SurvivorPickupShotgun_chromeManager
{
	criteria ConceptPlayerPickup IsNotCoughing IsManager IsPickedUpShotgun_chrome IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem  IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupPumpShotgunManager
}

Rule SurvivorPickupShotgun_chromeAlwaysManager
{
	criteria ConceptPlayerPickup IsNotCoughing IsManager IsPickedUpShotgun_chrome IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupPumpShotgunManager
}

Response SurvivorPickupRifleManager
{
	scene "scenes/Manager/TakeAssaultRifle01.vcd"  //I'm takin' this rifle.
	scene "scenes/Manager/TakeAssaultRifle02.vcd"  //This rifle is now mine.
	scene "scenes/Manager/TakeAssaultRifle03.vcd"  //I'm takin' this rifle.
	scene "scenes/Manager/TakeAssaultRifle04.vcd"  //This big rifle is now mine.
	scene "scenes/Manager/TakeAssaultRifle05.vcd"  //Oh, this rifle is mine!
	scene "scenes/Manager/TakeSubMachineGun03.vcd"  //Cool, just like counter-strike
	scene "scenes/Manager/WorldHospital0509.vcd"   //Man, I always wanted to fire one of these things.
}
Rule SurvivorPickupRifleManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpRifle IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem  IsTalk IsTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupRifleManager
}

Rule SurvivorPickupRifle_AK47Manager
{
	criteria ConceptPlayerPickup IsNotCoughing IsManager IsPickedUpRifle_AK47 IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem  IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupRifleManager
}

Rule SurvivorPickupRifle_AK47AlwaysManager
{
	criteria ConceptPlayerPickup IsNotCoughing IsManager IsPickedUpRifle_AK47 IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupRifleManager
}

Rule SurvivorPickupRifle_desertManager
{
	criteria ConceptPlayerPickup IsNotCoughing IsManager IsPickedUpRifle_desert IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem  IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupRifleManager
}

Rule SurvivorPickupRifle_desertAlwaysManager
{
	criteria ConceptPlayerPickup IsNotCoughing IsManager IsPickedUpRifle_desert IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupRifleManager
}

Response SurvivorPickupSecondPistolManager
{
	scene "scenes/Manager/TakePistol01.vcd"  //An extra pistol might come in handy. [to self]
	scene "scenes/Manager/TakePistol02.vcd"  //I'm taking an extra pistol.
}
Rule SurvivorPickupSecondPistolManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpSecondPistol IsNotSpeaking IsNotInSafeSpot  ManagerNotPickedUpItem  IsTalk IsTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupSecondPistolManager
}

Response SurvivorPickupSMGManager
{
	scene "scenes/Manager/TakeSubMachineGun01.vcd"  //Grabbing a machinegun!
	scene "scenes/Manager/TakeSubMachineGun02.vcd"  //A machinegun. [to self]
	scene "scenes/Manager/TakeSubMachineGun03.vcd"  //Cool, just like counter-strike
}
Rule SurvivorPickupSMGManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpSMG IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem  IsTalk IsTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupSMGManager
}

Rule SurvivorPickupSmg_silencedManager
{
	criteria ConceptPlayerPickup IsNotCoughing IsManager IsPickedUpSmg_silenced IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem  IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupSMGManager
}

Rule SurvivorPickupSmg_silencedAlwaysManager
{
	criteria ConceptPlayerPickup IsNotCoughing IsManager IsPickedUpSmg_silenced IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupSMGManager
}

Response TakeShotgunGroovyLouis
{
	scene "scenes/Manager/Laughter16.vcd"  then Biker TakeShotgunGroovy2BikerLaugh foo:0 0 //<Short laugh>
	scene "scenes/Manager/Laughter18.vcd"  then Biker TakeShotgunGroovy2BikerLaugh foo:0 0 //<Short laugh>
}
Rule TakeShotgunGroovyLouis
{
	criteria ConceptTakeShotgunGroovyLouis IsManager IsTalk IsTalkManager NotInCombat
	Response TakeShotgunGroovyLouis
}

Rule SurvivorPickupAutoShotgunAlwaysManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpAutoShotgun IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem IsTalk IsTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupAutoShotgunManager
}

Rule SurvivorPickupFirstAidKitAlwaysManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpFirstAidKit IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem IsTalk IsTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupFirstAidKitManager
}

Rule SurvivorPickupHuntingRifleAlwaysManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpHuntingRifle IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem IsTalk IsTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupHuntingRifleManager
}

Rule SurvivorPickupMolotovAlwaysManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpMolotov IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem IsTalk IsTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupMolotovManager
}

Rule SurvivorPickupPainPillsAlwaysManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpPainPills IsNotSpeaking IsTalk IsTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupPainPillsManager
}

Rule SurvivorPickupPipeBombAlwaysManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpPipeBomb IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem IsTalk IsTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupPipeBombManager
}

Rule SurvivorPickupPumpShotgunAlwaysManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpPumpShotgun IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem IsTalk IsTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupPumpShotgunManager
}

Rule SurvivorPickupRifleAlwaysManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpRifle IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem IsTalk IsTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupRifleManager
}

Rule SurvivorPickupSecondPistolManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpSecondPistol IsNotSpeaking IsNotInSafeSpot  ManagerNotPickedUpItem IsTalk IsTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupSecondPistolManager
}

Rule SurvivorPickupSMGAlwaysManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpSMG IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem IsTalk IsTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupSMGManager
}


//--------------------------------------------------------------------------------------------------------------
// Vocalizer - Rescue
//--------------------------------------------------------------------------------------------------------------
Response PlayerGettingRevivedManager
{
	scene "scenes/Manager/GettingRevived01.vcd"  then subject ReviveBgo foo:0 -1.022 //I'm okay.
	scene "scenes/Manager/GettingRevived02.vcd"  then subject ReviveBfine foo:0 -1.280 //I'm allright.
	scene "scenes/Manager/GettingRevived03.vcd"  then subject ReviveBgo foo:0 -2.048 //[groan]
	scene "scenes/Manager/GettingRevived04.vcd"  then subject ReviveBgo foo:0 -1.287 //I don't even know.
	scene "scenes/Manager/GettingRevived05.vcd"  then subject ReviveBfine foo:0 -2.278 //Aw hell, I'm bleedin'.
	scene "scenes/Manager/GettingRevived06.vcd"  then subject ReviveBfine foo:0 -1.154 //[groan2]
	scene "scenes/Manager/GettingRevived07.vcd"  then subject ReviveBgo foo:0 -1.046 //I'll make it.
	scene "scenes/Manager/GettingRevived08.vcd"  then subject ReviveBfine foo:0 -1.581 //I'll live.
	scene "scenes/Manager/GettingRevived09.vcd"  then subject ReviveBgo foo:0 -1.846 //I can shake it off.
	scene "scenes/Manager/GettingRevived10.vcd"  then subject ReviveBfine foo:0 -1.086 //Just help me up.
	scene "scenes/Manager/GettingRevived11.vcd"  then subject ReviveBgo foo:0 -1.376 //I ain't done yet.
}
Rule PlayerGettingRevivedManager
{
	criteria ConceptGettingRevived IsNotCoughing IsNotReviveInterrupt IsManager IsTalk IsTalkManager
	ApplyContext "IsComplain:1:20,ReviveTalk:1:5,TalkManager:1:4"
	Response PlayerGettingRevivedManager
}

Response ConceptBlock960
{
	scene "scenes/Manager/GenericResponses18.vcd"  //[Bill doesn't recognize him] Come on, Bill, it's Louis!
}
Rule ConceptBlock960
{
	criteria ConceptNamVetWhoAreYou IsNotCoughing IsManager IsTalk
	Response ConceptBlock960
}

Response PlayerHealOtherManager
{
	scene "scenes/Manager/HealOther01.vcd" then subject RespondAffirmative foo:0 0.1 //Let me heal you up.
	scene "scenes/Manager/HealOther02.vcd" then subject RespondAffirmative foo:0 0.1 //Hold on, I'm gonna heal you.
	scene "scenes/Manager/HealOther03.vcd" then subject RespondAffirmative foo:0 0.1 //Hold up, this'll help.
	scene "scenes/Manager/HealOther04.vcd" then subject RespondAffirmative foo:0 0.1 //Hang on, let me fix you up.
	scene "scenes/Manager/HealOther05.vcd" then subject RespondAffirmative foo:0 0.1 //This should last you until we're safe.
}
Rule PlayerHealOtherManager
{
	criteria ConceptPlayerHealingOther IsNotCoughing  IsManager IsTalk IsTalkManager
	Response PlayerHealOtherManager
}

Response PlayerLedgeSaveManager
{
	scene "scenes/Manager/LedgeSave01.vcd"  //Okay, okay, I think I can get you up. Just hang on one more second.
	scene "scenes/Manager/LedgeSave02.vcd"  //I'm here. I gotcha, man. Grab my hand and we're gonna get you back on solid ground!
	scene "scenes/Manager/LedgeSave03.vcd"  //Don't worry, I gotcha, man. Hang on, hang on. Almost up...
}
Rule PlayerLedgeSaveManager
{
	criteria ConceptPlayerLedgeSave IsNotCoughing IsManager IsTalk IsTalkManager
	Response PlayerLedgeSaveManager
}

Response PlayerReviveFriendManager
{
	scene "scenes/Manager/ReviveFriend01.vcd"  //I gotcha, I gotcha. Don't worry, I'm not gonna let you die. Come on, up ya go. -5.519
	scene "scenes/Manager/ReviveFriend02.vcd"  //Come on, man, look at me. Focus. You are going to be okay. -4.523
	scene "scenes/Manager/ReviveFriend03.vcd"  //I gotcha, I gotcha. Don't worry, I'm not gonna let you die. Come on, up ya go. -5.598
	scene "scenes/Manager/ReviveFriend04.vcd"  //Come on, man, look at me. Focus. You are going to be okay. Let's get moving. -5.296
	scene "scenes/Manager/ReviveFriend05.vcd"  //Okay, okay, I'm here, don't worry. Onnne second. I'll get you back on your feet. -5.296
	scene "scenes/Manager/ReviveFriend06.vcd"  //Okay, okay, I'm here, don't worry. Onnne second. I'll get you back on your feet. -6.354
	scene "scenes/Manager/ReviveFriend07.vcd"  //C'mon, okay, break time's over. Let's get you on your feet and back to work. -4.326
	scene "scenes/Manager/ReviveFriend08.vcd"  //I think... Yeah, I think you're okay. Let's get you up so we can keep moving. -5.833
	scene "scenes/Manager/ReviveFriend09.vcd"  //I'm no doctor, but you are *definitely* not dead yet. So come on, let's get you up and moving. -6.292
	scene "scenes/Manager/ReviveFriend10.vcd"  //Okay, okay, I'm here, don't worry. Onnne second. I'll get you back on your feet. -6.467
	scene "scenes/Manager/ReviveFriend18.vcd" //I never saw nobody take that much abuse and live! Oughtta start callin' you Jason. -4.720
	scene "scenes/Manager/ReviveFriend19.vcd" //I never saw nobody take that much abuse and live! Oughtta start callin' you Hercules. -4.717
}
Rule PlayerReviveFriendManager
{
	criteria ConceptPlayerReviveFriend IsNotCoughing  IsManager IsTalk IsTalkManager
	ApplyContext "ReviveTalk:1:5,Talk:1:1"
	Response PlayerReviveFriendManager
}

Response ConceptBlock951
{
	scene "scenes/Manager/ReviveFriendA01.vcd"   then  subject GettingRevived foo:0 -0.863 // You okay?
	scene "scenes/Manager/ReviveFriendA02.vcd"   then  subject GettingRevived foo:0 -0.848 // How d'ya feel?
	scene "scenes/Manager/ReviveFriendA03.vcd"   then  subject GettingRevived foo:0 -0.957 // Can you make it?
	scene "scenes/Manager/ReviveFriendA04.vcd"   then  subject GettingRevived foo:0 -0.896 // You gonna make it?
	scene "scenes/Manager/ReviveFriendA05.vcd"   then  subject GettingRevived foo:0 -1.184 // How bad are you?
	scene "scenes/Manager/ReviveFriendA07.vcd"   then  subject GettingRevived foo:0 -0.832 // How ya doin'?
}
Rule ConceptBlock951
{
	criteria ConceptPlayerReviveFriend IsNotCoughing IsManager IsTalk IsTalkManager
	ApplyContext "ReviveTalk:1:5,TalkManager:1:4"
	Response ConceptBlock951
	}

Response PlayerReviveFriendCriticalManager
{
	scene "scenes/Manager/ReviveCriticalFriend01.vcd"  //Oh man, you don't look so good. If we don't get you some first aid , you're not gonna survive another hit like that. -8.748
	scene "scenes/Manager/ReviveCriticalFriend02.vcd"  //Ah, ah jesus, you're bleedin' all over the place. If we don't get you some first aid, you're not gonna survive another hit like that. -8.184
	scene "scenes/Manager/ReviveCriticalFriend03.vcd"  //I can get you on your feet, but just barely. If we don't get you some first aid, you're not gonna survive another hit like that. -7.078
	scene "scenes/Manager/ReviveCriticalFriend04.vcd"  //Okay, come on, stay with me. I can get you moving again, but if we don't find you some first aid, you're not gonna survive another hit like that. -9.167
	scene "scenes/Manager/ReviveCriticalFriend05.vcd"  //I can help you up, but, Jesus, you shouldn't even be alive. If we don't find you some first aid, you're not gonna survive another hit like that. -8.909
}
Rule PlayerReviveFriendCriticalManager
{
	criteria ConceptPlayerReviveFriendCritical IsNotCoughing  IsManager IsTalk IsTalkManager
	ApplyContext "ReviveTalk:1:5,Talk:1:1"
	Response PlayerReviveFriendCriticalManager
}

Response PlayerReviveFriendLoudManager
{
	scene "scenes/Manager/ReviveFriendLoud01.vcd"  //Come on, come on! You're okay!
	scene "scenes/Manager/ReviveFriendLoud02.vcd"  //Let's get up, let's get up!
	scene "scenes/Manager/ReviveFriendLoud03.vcd"  //Get up, we gotta go!
	scene "scenes/Manager/ReviveFriendLoud04.vcd"  //Come on, get up!
	scene "scenes/Manager/ReviveFriendLoud05.vcd"  //Come on, man, get up!
	scene "scenes/Manager/ReviveFriendLoud08.vcd"  //Come on, you gotta get up.
	scene "scenes/Manager/ReviveFriendLoud09.vcd"  //Come on now. Get up!
	scene "scenes/Manager/ReviveFriendLoud11.vcd"  //Get up now, come on!
}
Rule PlayerReviveFriendLoudManager
{
	criteria ConceptPlayerReviveFriend IsNotCoughing  IsManager IsZombiePresentTank IsTalk IsTalkManager
	ApplyContext "ReviveTalk:1:5,Talk:1:1"
	Response PlayerReviveFriendLoudManager
}

Response PlayerReviveFriendLoudFrancisManager
{
	scene "scenes/Manager/ReviveFriendLoud06.vcd"  //No time for this, bro, let's move!
	scene "scenes/Manager/ReviveFriendLoud10.vcd"  //We gotta get your ass up, man.
}
Rule PlayerReviveFriendLoudFrancisManager
{
	criteria ConceptPlayerReviveFriend IsNotCoughing  IsManager IsZombiePresentTank IsTalk IsTalkManager SubjectIsBiker
	ApplyContext "ReviveTalk:1:5"
	Response PlayerReviveFriendLoudFrancisManager
}

Response PlayerReviveFriendLoudZoeyManager
{
	scene "scenes/Manager/ReviveFriendLoud07.vcd"  //Come on, girl, get up!
}
Rule PlayerReviveFriendLoudZoeyManager
{
	criteria ConceptPlayerReviveFriend IsNotCoughing  IsManager IsZombiePresentTank IsTalk IsTalkManager SubjectIsTeenGirl
	ApplyContext "ReviveTalk:1:5"
	Response PlayerReviveFriendLoudZoeyManager
}

Response ConceptBlock967
{
	scene "scenes/Manager/ReviveFriendB01.vcd"  //Up and at 'em.
	scene "scenes/Manager/ReviveFriendB02.vcd"  //Come on up!
	scene "scenes/Manager/ReviveFriendB03.vcd"  //Up ya go.
	scene "scenes/Manager/ReviveFriendB06.vcd"  //Up we go.
	scene "scenes/Manager/ReviveFriendB09.vcd"  //Come on up.
	scene "scenes/Manager/ReviveFriendB10.vcd"  //Let's move!
}
Rule ConceptBlock967
{
	criteria ConceptReviveBgo IsNotReviveInterrupt IsManager
	ApplyContext "ReviveTalk:1:5,TalkManager:1:3"
	Response ConceptBlock967
}

Response ConceptBlock968
{
	scene "scenes/Manager/ReviveFriendB12.vcd"  //Come on, Francis.
}
Rule ConceptBlock968
{
	criteria ConceptReviveBgo IsNotReviveInterrupt FromIsBiker IsManager
	Response ConceptBlock968
}

Response ConceptBlock969
{
	scene "scenes/Manager/ReviveFriendB13.vcd"  //Come on, Bill.
}
Rule ConceptBlock969
{
	criteria ConceptReviveBgo IsNotReviveInterrupt FromIsNamVet IsManager
	Response ConceptBlock969
}

Response ConceptBlock970
{
	scene "scenes/Manager/ReviveFriend11.vcd"  //I didn't think you were gettin' back up. -2.070
	scene "scenes/Manager/ReviveFriend12.vcd"  //Don't worry, I gotcha. You're gonna be just fine. -2.816
	scene "scenes/Manager/ReviveFriendB04.vcd"  //You'll be okay.
	scene "scenes/Manager/ReviveFriendB05.vcd"  //I got ya.
	scene "scenes/Manager/ReviveFriendB07.vcd"  //You're fine.
	scene "scenes/Manager/ReviveFriendB08.vcd"  //It doesn't look bad.
	scene "scenes/Manager/ReviveFriendB11.vcd"  //You'll be fine.
}
Rule ConceptBlock970
{
	criteria ConceptReviveBfine IsNotReviveInterrupt IsManager
	ApplyContext "ReviveTalk:1:5,TalkManager:1:3"
	Response ConceptBlock970
}

Response ConceptBlock971
{
	scene "scenes/Manager/ReviveFriendB14.vcd"  //You'll be fine, girl.
}
Rule ConceptBlock971
{
	criteria ConceptReviveBfine IsNotReviveInterrupt FromIsTeenGirl IsManager
	Response ConceptBlock971
}

Rule PlayerLedgeSaveCriticalManager
{
	criteria ConceptPlayerLedgeSaveCritical IsNotCoughing  IsManager IsTalk IsTalkManager
	ApplyContext "ReviveTalk:1:5,Talk:1:1"
	Response PlayerReviveFriendCriticalManager
}


//--------------------------------------------------------------------------------------------------------------
// Vocalizer - ZRescue
//--------------------------------------------------------------------------------------------------------------
Rule PlayerReviveFriendLoud2Manager
{
	criteria ConceptPlayerReviveFriend IsNotCoughing  IsManager IntensityHigh IsTalk IsTalkManager
	ApplyContext "ReviveTalk:1:5,Talk:1:1"
	Response PlayerReviveFriendLoudManager
}

Rule PlayerReviveFriendLoudCritManager
{
	criteria ConceptPlayerReviveFriendCritical IsNotCoughing  IsManager IntensityHigh IsTalk IsTalkManager
	ApplyContext "ReviveTalk:1:5,Talk:1:1"
	Response PlayerReviveFriendLoudManager
}

Rule PlayerReviveFriendLoudFrancis2Manager
{
	criteria ConceptPlayerReviveFriend IsNotCoughing  IsManager IntensityHigh IsTalk IsTalkManager SubjectIsBiker
	ApplyContext "ReviveTalk:1:5,Talk:1:4"
	Response PlayerReviveFriendLoudFrancisManager
}

Rule PlayerReviveFriendLoudZoey2Manager
{
	criteria ConceptPlayerReviveFriend IsNotCoughing  IsManager IntensityHigh IsTalk IsTalkManager SubjectIsTeenGirl
	ApplyContext "ReviveTalk:1:5,Talk:1:4"
	Response PlayerReviveFriendLoudZoeyManager
}


//--------------------------------------------------------------------------------------------------------------
// Vocalizer Convo
//--------------------------------------------------------------------------------------------------------------
Response PlayerHospitalIntroManager
{
	scene "scenes/Manager/WorldHospital0101.vcd"  then Any IntroHospital03 foo:0 0 //The Subway can take us straight to Mercy Hospital!
}
Rule PlayerHospitalIntroManager
{
	criteria ConceptintroHospital IsManager
	ApplyContext "talk:1:10"
	applycontexttoworld
	Response PlayerHospitalIntroManager
}

Response PlayerHospitalIntro02Manager
{
	scene "scenes/Manager/C6DLC3SECONDSAFEROOM24.vcd"  //Sounds good to me.
	scene "scenes/Manager/GenericResponses24.vcd"  //Sounds good.
}
Rule PlayerHospitalIntro02Manager
{
	criteria ConceptIntroHospital02 IsManager
	ApplyContext "talk:1:5"
	applycontexttoworld
	Response PlayerHospitalIntro02Manager
}


//--------------------------------------------------------------------------------------------------------------
// Vocalizer Heal
//--------------------------------------------------------------------------------------------------------------
Response PlayerCoverMeHealManager
{
	scene "scenes/Manager/CoverMe01.vcd" predelay ".2,.5"  then any RespondAffirmative foo:0 0.01 //Cover me!
	scene "scenes/Manager/CoverMe02.vcd" predelay ".2,.5"  then any RespondAffirmative foo:0 0.01 //Cover me!
	scene "scenes/Manager/CoverMe03.vcd" predelay ".2,.5"  then any RespondAffirmative foo:0 0.01 //Cover me!
	scene "scenes/Manager/CoverMe04.vcd" predelay ".2,.5"  then any RespondAffirmative foo:0 0.01 //Watch my back!
	scene "scenes/Manager/CoverMe05.vcd" predelay ".2,.5"  then any RespondAffirmative foo:0 0.01 //Watch my back!
	scene "scenes/Manager/CoverMe06.vcd" predelay ".2,.5" then any RespondAffirmative foo:0 0.01 //Cover me, I'm healing!
	scene "scenes/Manager/CoverMe07.vcd" predelay ".2,.5" then any RespondAffirmative foo:0 0.01 //Everybody stop a sec, I gotta heal.
	scene "scenes/Manager/CoverMe08.vcd" predelay ".2,.5" then any RespondAffirmative foo:0 0.01 //Wait up while I heal.
	scene "scenes/Manager/CoverMe09.vcd" predelay ".2,.5" then any RespondAffirmative foo:0 0.01 //Hold up, I gotta heal.
	scene "scenes/Manager/CoverMe10.vcd" predelay ".2,.5" then any RespondAffirmative foo:0 0.01 //Cover me whille I heal.
}
Rule PlayerCoverMeHealManager
{
	criteria ConceptPlayerHealing IsNotCoughing IsManager IsNotAskedForCoverManager IsTalk IsTalkManager IsNotAlone IsNotInStartArea IsNotInSafeSpot
	ApplyContext "ManagerAskForCover:1:30"
	Response PlayerCoverMeHealManager
}


//--------------------------------------------------------------------------------------------------------------
// Weapon Spotted
//--------------------------------------------------------------------------------------------------------------
Rule SurvivorSpottedRifleAutoManager2
{
	criteria ConceptPlayerSpotRifle IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsSaidSpotWeapons IsNotSaidSpot
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedGrenadeAutoManager2
}

Rule SurvivorSpottedShotgunAutoManager2
{
	criteria ConceptPlayerSpotShotgun IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto  IsNotInSafeSpot IsNotAlone IsSaidSpotWeapons IsNotSaidSpot
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedGrenadeAutoManager2
}

Rule SurvivorSpottedSMGAutoManager2
{
	criteria ConceptPlayerSpotSMG IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsSaidSpotWeapons IsNotSaidSpot
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedGrenadeAutoManager2
}

Rule SurvivorSpottedSniperRifleAutoManager2
{
	criteria ConceptPlayerSpotSniperRifle IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto  IsNotInSafeSpot IsNotAlone IsSaidSpotWeapons IsNotSaidSpot
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedGrenadeAutoManager2
}

Response SurvivorSpottedWeaponManager
{
	scene "scenes/Manager/SpotWeapons01.vcd"  then any _SpotStuffResponse foo:0 0.01 //Weapons here!
	scene "scenes/Manager/SpotWeapons02.vcd"  then any _SpotStuffResponse foo:0 0.01 //Weapons over here!
	scene "scenes/Manager/SpotWeapons03.vcd"  then any _SpotStuffResponse foo:0 0.01 //Weapons!
}
Rule SurvivorSpottedWeaponManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Rule SurvivorSpottedWeaponAShotgunAutoManager2
{
	criteria ConceptPlayerSpotAutoShotgun IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsSaidSpotWeapons IsNotSaidSpot
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedGrenadeAutoManager2
}

Rule SurvivorSpottedWeaponPistolAutoManager2
{
	criteria ConceptPlayerSpotPistol IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto  IsNotInSafeSpot IsNotAlone IsSaidSpotWeapons IsNotSaidSpot
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedGrenadeAutoManager2
}


//--------------------------------------------------------------------------------------------------------------
// manager_dlc3.txt
//--------------------------------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------------------------------
// Item Spotted
//--------------------------------------------------------------------------------------------------------------
Response SurvivorSpottedAdrenalineManager
{
	scene "scenes/Manager/SpotPills01.vcd" then any _SpotStuffResponse foo:0 0.01 //Pills here!
}
Rule SurvivorSpottedAdrenalineManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsAdrenaline IsWorldTalkManager
	ApplyContext "SaidSpotAdrenaline:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedAdrenalineManager
}

Rule SurvivorSpottedAdrenalineAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotAdrenaline IsNotSaidSpot IsAdrenaline IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotAdrenaline:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedAdrenalineManager
}

Rule SurvivorSpottedDefibrillatorManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsDefibrillator IsWorldTalkManager
	ApplyContext "SaidSpotDefibrillator:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWorldCloseManager
}

Rule SurvivorSpottedDefibrillatorAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidDefibrillator IsNotSaidSpot IsDefibrillator IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotDefibrillator:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWorldCloseManager
}

Rule SurvivorSpottedGrenadeLauncherManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto Isgrenade_launcher IsWorldTalkManager
	ApplyContext "SaidSpotgrenade_launcher:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Rule SurvivorSpottedGrenadeLauncherAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotgrenade_launcher IsNotSaidSpot Isgrenade_launcher IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotgrenade_launcher:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Rule SurvivorSpottedUpPack_ExplosiveManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsUpgradePack_Explosive  IsWorldTalkManager
	ApplyContext "SaidSpotUpgradePack_Explosive:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedAmmoManager
}

Rule SurvivorSpottedUpPack_ExplosiveAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotAlone IsNotSaidSpotUpgradePack_Explosive IsNotSaidSpot IsUpgradePack_Explosive IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotUpgradePack_Explosive:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedAmmoManager
}

Rule SurvivorSpottedUpPack_IncendiaryManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsUpgradePack_Incendiary  IsWorldTalkManager
	ApplyContext "SaidSpotUpgradePack_Incendiary:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedAmmoManager
}

Rule SurvivorSpottedUpPack_IncendiAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotAlone IsNotSaidSpotUpgradePack_Incendiary IsNotSaidSpot IsUpgradePack_Incendiary IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotUpgradePack_Incendiary:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedAmmoManager
}

Response SurvivorSpottedVomitJarManager
{
	scene "scenes/Manager/SpotGrenades01.vcd"  then any _SpotStuffResponse foo:0 0.01 //Grenades here!
}
Rule SurvivorSpottedVomitJarManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsVomitJar IsWorldTalkManager
	ApplyContext "SaidSpoVomitJar:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedVomitJarManager
}

Rule SurvivorSpottedVomitJarAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotVomitJar IsNotSaidSpot IsVomitJar IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotVomitJar:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedVomitJarManager
}


//--------------------------------------------------------------------------------------------------------------
// Not Rosetta - Responses
//--------------------------------------------------------------------------------------------------------------
Response PlayerToTheRescueRosManager
{
	
	scene "scenes/Manager/ToTheRescue01.vcd"  //Hold on, I'm on my way!
	scene "scenes/Manager/ToTheRescue02.vcd"  //Look, I'm coming!
	scene "scenes/Manager/ToTheRescue03.vcd"  //Don't worry, I'm on my way!
}
Rule PlayerToTheRescueRosManager
{
	criteria ConceptPlayerToTheRescue IsNotCoughing IsNotSpeaking IsManager IsTalk IsTalkManager IsWorldTalkManager
	Response PlayerToTheRescueRosManager
}


//--------------------------------------------------------------------------------------------------------------
// Rosetta - Manners
//--------------------------------------------------------------------------------------------------------------
Response PlayerYellRunManager
{
	
	scene "scenes/Manager/EmphaticRun01.vcd"  //Let's get the hell outta here!
	scene "scenes/Manager/EmphaticRun02.vcd"  //RUN!
}
Rule PlayerYellRunManager
{
	criteria ConceptPlayerYellRun IsNotCoughing IsNotSpeaking IsManager IsNotInSafeSpot IsNotInCheckpoint IsTalk IsTalkManager IsWorldTalkManager
	Response PlayerYellRunManager
}


//--------------------------------------------------------------------------------------------------------------
// Scavenge
//--------------------------------------------------------------------------------------------------------------
Response GrabbingGasSCManager
{
	scene "scenes/Manager/KillConfirmation04.vcd"  //Got it!
	scene "scenes/Manager/Yes05.vcd"  //Okay.
}
Rule GrabbingGasSCManager
{
	criteria ConceptPlayerEquippedScavengeItem IsManager IsTalk IsTalkManager IsWorldTalkManager ManagerNotSaidGrabbingCan
	ApplyContext "SaidGrabbingCan:1:5"
	applycontexttoworld
	Response GrabbingGasSCManager
}

Response PlayerShotGasCanManager
{
	scene "scenes/Manager/Swears05.vcd" predelay "1,1.5" //Shit.
	scene "scenes/Manager/Swears06.vcd" predelay "1,1.5" //Ah shit.
	scene "scenes/Manager/Swears07.vcd" predelay "1,1.5" //Shit shit shit.
	scene "scenes/Manager/Swears12.vcd" predelay "1,1.5" //Shit.
	scene "scenes/Manager/Swears13.vcd" predelay "1,1.5" //Ah shit.
	scene "scenes/Manager/Swears16.vcd" predelay "1,1.5" //That's some country-ass bullshit.
}
Rule PlayerShotGasCanManager
{
	criteria ConceptPlayerShotGasCan IsManager IsNotSaidPlayerShotGasCan IsScavenge
	ApplyContext "SaidPlayerShotGasCan1:10"
	applycontexttoworld
	Response PlayerShotGasCanManager
}

Response ScavengeStartManager
{
	scene "scenes/Manager/MoveOn01.vcd"  //Allright, let's go.
	scene "scenes/Manager/MoveOn03.vcd"  //Let's go.
	scene "scenes/Manager/MoveOn04.vcd"  //Let's Move, Let's Move!
}
Rule ScavengeStartManager
{
	criteria ConceptSurvivorLeavingCheckpoint IsManager IsTalk IsTalkManager IsWorldTalkManager IsScavenge IsNotSaidStartScavenge
	ApplyContext "SaidStartScavenge:1:4"
	applycontexttoworld
	Response ScavengeStartManager
}


//--------------------------------------------------------------------------------------------------------------
// Vocalizer - Pickups
//--------------------------------------------------------------------------------------------------------------
Rule SurvivorDeployUpExplosivesManager
{
	criteria ConceptPlayerDeployingUpgradeAmmo  IsNotCoughing IsManager  IsNotSpeaking  IsTalk IsTalkManager IsWorldTalkManager IsNotSaidDeployUpgradePack_Explosive HasUpgradePack_Explosive
	ApplyContext "SaidDeployUpgradePack_Explosive:1:30"
	Response SurvivorSpottedAmmoManager
}

Rule SurvivorDeployUpIncendiaryManager
{
	criteria ConceptPlayerDeployingUpgradeAmmo  IsNotCoughing IsManager  IsNotSpeaking  IsTalk IsTalkManager IsWorldTalkManager IsNotSaidDeployUpgradePack_Incendiary HasUpgradePack_Incendiary
	ApplyContext "SaidDeployUpgradePack_Incendiary:1:30"
	Response SurvivorSpottedAmmoManager
}

Response SurvivorPickupAdrenalineManager
{
	scene "scenes/Manager/TakePills01.vcd"  //Better grab everything I can [to self]
}
Rule SurvivorPickupAdrenalineManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpAdrenaline IsNotSpeaking IsInSafeSpot IsNotInStartArea IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupAdrenalineManager
}

Rule SurvivorPickupAdrenalineAlwaysManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpAdrenaline IsNotSpeaking IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupAdrenalineManager
}

Response SurvivorPickupbaseball_batManager
{
	scene "scenes/Manager/NiceJob01.vcd"  //Nice.
	scene "scenes/Manager/GenericResponses23.vcd"  //Works for me.
	scene "scenes/Manager/ReactionPositive03.vcd"  //Oh, Cool
	scene "scenes/Manager/Yes01.vcd"  //Allright.
	scene "scenes/Manager/Yes05.vcd"  //Okay.
	scene "scenes/Manager/Yes09.vcd"  //Cool
}
Rule SurvivorPickupbaseball_batManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpbaseball_bat IsNotSpeaking  ManagerNotPickedUpItem IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupbaseball_batManager
}

Rule SurvivorPickupchainsawManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpchainsaw IsNotSpeaking  ManagerNotPickedUpItem IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupbaseball_batManager
}

Rule SurvivorPickupcricket_batManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpcricket_bat IsNotSpeaking  ManagerNotPickedUpItem IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupbaseball_batManager
}

Response SurvivorPickupCrowBarManager
{
	scene "scenes/Manager/DLC1_CommunityL4D110.vcd"  //Man, I feel like I'm Gordon Freeman!
}
Rule SurvivorPickupCrowBarManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpCrowBar  IsNotSpeaking  ManagerNotPickedUpItem IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupCrowBarManager
}

Rule SurvivorPickupDefibrillatorManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpDefibrillator  IsNotSpeaking  ManagerNotPickedUpItem IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupbaseball_batManager
}

Rule SurvivorPickupelectric_guitarManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpelectric_guitar IsNotSpeaking  ManagerNotPickedUpItem IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupbaseball_batManager
}

Rule SurvivorPickupFireAxeManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpFireAxe  IsNotSpeaking  ManagerNotPickedUpItem IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupbaseball_batManager
}

Rule SurvivorPickupFryingPanManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpFryingPan IsNotSpeaking  ManagerNotPickedUpItem IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupbaseball_batManager
}

Rule SurvivorPickupGolfClubManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpGolfClub IsNotSpeaking  ManagerNotPickedUpItem IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupbaseball_batManager
}

Response SurvivorPickupGrenadeLauncherManager
{
	scene "scenes/Manager/TakePipeBomb01.vcd"  //Woah, this'll blow something up
}
Rule SurvivorPickupGrenadeLauncherManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpGrenadeLauncher IsNotSpeaking IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupGrenadeLauncherManager
}

Rule SurvivorPickupKatanaManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpKatana IsNotSpeaking  ManagerNotPickedUpItem IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupbaseball_batManager
}

Rule SurvivorPickupLaserSightsAlwaysManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpLaserSights IsNotSpeaking ManagerNotPickedUpItem IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupbaseball_batManager
}

Response SurvivorPickupM60Manager
{
	scene "scenes/Manager/Generic16.vcd"  //Now *this* is a big ass machine gun.
}
Rule SurvivorPickupM60Manager
{
	criteria ConceptPlayerPickup IsNotCoughing IsManager IsPickedUpM60  IsNotSpeaking  ManagerNotPickedUpItem IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupM60Manager
}

Rule SurvivorPickupMacheteManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpMachete IsNotSpeaking  ManagerNotPickedUpItem IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupbaseball_batManager
}

Rule SurvivorPickupMagnumManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpMagnum IsNotSpeaking IsInSafeSpot ManagerNotPickedUpItem  IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupbaseball_batManager
}

Rule SurvivorPickupMagnumAlwaysManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpMagnum IsNotSpeaking IsNotInSafeSpot ManagerNotPickedUpItem IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupbaseball_batManager
}

Rule SurvivorPickuptonfaManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUptonfa IsNotSpeaking  ManagerNotPickedUpItem IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupbaseball_batManager
}

Rule SurvivorPickupUpExplosiveAmmoManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpExplosiveAmmo IsNotSpeaking  IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupbaseball_batManager
}

Rule SurvivorPickupUpExplosivesManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpUpgradePack_Explosive IsNotSpeaking  IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupbaseball_batManager
}

Rule SurvivorPickupUpIncendiaryManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpUpgradePack_Incendiary IsNotSpeaking  IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupbaseball_batManager
}

Rule SurvivorPickupUpIncendiaryAmmoManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpIncendiaryAmmo IsNotSpeaking  IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorPickupbaseball_batManager
}

Rule SurvivorPickupVomitJarManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpVomitJar IsNotSpeaking IsInSafeSpot IsNotInStartArea IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorSpottedGrenadeAutoManager2
}

Rule SurvivorPickupVomitJarAlwaysManager
{
	criteria ConceptPlayerPickup AutoIsNotScavenge AutoIsNotSurvival  IsNotCoughing IsManager IsPickedUpVomitJar IsNotSpeaking IsTalk IsTalkManager IsWorldTalkManager
	ApplyContext "ManagerPickedUpItem:1:30"
	Response SurvivorSpottedGrenadeAutoManager2
}


//--------------------------------------------------------------------------------------------------------------
// Vocalize
//--------------------------------------------------------------------------------------------------------------
Response PlayerCommentJockeyManager
{
	scene "scenes/Manager/DLC1_C6M3_L4D11stSpot04.vcd"  //That's some crazy zombie!
	scene "scenes/Manager/DLC1_C6M3_L4D11stSpot05.vcd"  //Look at that zombie jumpin' on them!
	scene "scenes/Manager/DLC1_C6M3_L4D11stSpot06.vcd"  //That's some crazy zombie!
}
Rule PlayerCommentJockeyManager
{
	criteria ConceptCommentJockey IsManager IssuerCloseEnough IsNotIncapacitated IntensityUnder50 IsNotSaidCommentJockey
	ApplyContext "SaidCommentJockey:1:0"
	applycontexttoworld
	Response PlayerCommentJockeyManager
}

Response PlayerLostCallManager
{
	scene "scenes/Manager/LostCall01.vcd"  //Hello?
	scene "scenes/Manager/LostCall03.vcd"  //Where is everyone?
	scene "scenes/Manager/LostCall04.vcd"  //Is anyone there?
	scene "scenes/Manager/LostCall05.vcd"  //Where'd everyone get to?
	scene "scenes/Manager/LostCall06.vcd"  //Can anyone hear me?
}
Rule PlayerLostCallManager
{
	criteria ConceptTalkIdle IsManager IsClosestSurvivorFar3000 IsNotSaidPlayerLostCall _auto_NotNoLostCall IsNotSpeakingWeight0 IsNotInSafeSpot
	ApplyContext "SaidPlayerLostCall:1:50"
	applycontexttoworld
	Response PlayerLostCallManager
}


//--------------------------------------------------------------------------------------------------------------
// Weapon Spotted
//--------------------------------------------------------------------------------------------------------------
Rule SurvivorSpottedChainsawManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsChainsaw IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Rule SurvivorSpottedChainsawAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotWeapons IsNotSaidSpot IsChainsaw IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Rule SurvivorSpottedcricket_batManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto Iscricket_bat IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Rule SurvivorSpottedcricket_batAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotWeapons IsNotSaidSpot Iscricket_bat IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Rule SurvivorSpottedcrowbarManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto Iscrowbar IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Rule SurvivorSpottedcrowbarAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotWeapons IsNotSaidSpot Iscrowbar IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Rule SurvivorSpottedGuitarManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsGuitar IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Rule SurvivorSpottedGuitarAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotWeapons IsNotSaidSpot IsGuitar IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Rule SurvivorSpottedGolfClubManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto  IsNotInSafeSpot IsNotAlone IsNotSaidSpotWeapons IsNotSaidSpot IsGolfClub IsWorldTalkManager IsNotSpeakingWeight0
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Rule SurvivorSpottedGolfClubAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsGolfClub IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Rule SurvivorSpottedKatanaManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsKatana IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Rule SurvivorSpottedKatanaAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotWeapons IsNotSaidSpot IsKatana IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Rule SurvivorSpottedLaserSightsManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsLaserSights IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWorldCloseManager
}

Rule SurvivorSpottedLaserSightsAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotWeapons IsNotSaidSpot IsLaserSights IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWorldCloseManager
}

Response SurvivorSpottedM60Manager
{
	scene "scenes/Manager/WorldHospital0504.vcd"  then any _SpotStuffResponse foo:0 0.01 //Big ass gun up here.
	scene "scenes/Manager/WorldHospital0505.vcd"  then any _SpotStuffResponse foo:0 0.01 //Check out this gun up here!
	scene "scenes/Manager/WorldHospital0510.vcd"  then any _SpotStuffResponse foo:0 0.01 //Man, check this gun out!
}
Rule SurvivorSpottedM60Manager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto  IsNotInSafeSpot IsNotAlone IsNotSaidSpotWeapons IsNotSaidSpot IsM60 IsWorldTalkManager IsNotSpeakingWeight0
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedM60Manager
}

Rule SurvivorSpottedM60AutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsM60 IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedM60Manager
}

Rule SurvivorSpottedMacheteManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsMachete IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Rule SurvivorSpottedMacheteAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotWeapons IsNotSaidSpot IsMachete IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Response SurvivorSpottedMagnumManager
{
	scene "scenes/Manager/WorldHospital0510.vcd"  then any _SpotStuffResponse foo:0 0.01 //Man, check this gun out!
}
Rule SurvivorSpottedMagnumManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsMagnum IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedMagnumManager
}

Rule SurvivorSpottedMagnumAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotWeapons IsNotSaidSpot IsMagnum IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedMagnumManager
}

Rule SurvivorSpottedtonfaManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto Istonfa IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Rule SurvivorSpottedtonfaAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotWeapons IsNotSaidSpot Istonfa IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Response SurvivorSpottedAutoShotgunManager
{
	scene "scenes/Manager/WorldHospital0504.vcd"  then any _SpotStuffResponse foo:0 0.01 //Big ass gun up here.
	scene "scenes/Manager/WorldHospital0505.vcd"  then any _SpotStuffResponse foo:0 0.01 //Check out this gun up here!
	scene "scenes/Manager/WorldHospital0510.vcd"  then any _SpotStuffResponse foo:0 0.01 //Man, check this gun out!
}
Rule SurvivorSpottedAutoShotgunManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsAutoShotgun IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedAutoShotgunManager
}

Rule SurvivorSpottedAutoShotgunAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotWeapons IsNotSaidSpot IsAutoShotgun IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedAutoShotgunManager
}

Response SurvivorSpottedHuntingRifleManager
{
	scene "scenes/Manager/WorldHospital0504.vcd"  then any _SpotStuffResponse foo:0 0.01 //Big ass gun up here.
	scene "scenes/Manager/WorldHospital0505.vcd"  then any _SpotStuffResponse foo:0 0.01 //Check out this gun up here!
	scene "scenes/Manager/WorldHospital0510.vcd"  then any _SpotStuffResponse foo:0 0.01 //Man, check this gun out!
}
Rule SurvivorSpottedHuntingRifleManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsHuntingRifle IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedHuntingRifleManager
}

Rule SurvivorSpottedHuntingRifleAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotWeapons IsNotSaidSpot IsHuntingRifle IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedHuntingRifleManager
}

Rule SurvivorSpottedPumpShotgunManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsPumpShotgun IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Response SurvivorSpottedRifleManager
{
	scene "scenes/Manager/WorldHospital0504.vcd"  then any _SpotStuffResponse foo:0 0.01 //Big ass gun up here.
	scene "scenes/Manager/WorldHospital0505.vcd"  then any _SpotStuffResponse foo:0 0.01 //Check out this gun up here!
	scene "scenes/Manager/WorldHospital0510.vcd"  then any _SpotStuffResponse foo:0 0.01 //Man, check this gun out!
}
Rule SurvivorSpottedRifleManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsRifle IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedRifleManager
}

Rule SurvivorSpottedRifleAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotWeapons IsNotSaidSpot IsRifle IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedRifleManager
}

Response SurvivorSpottedRifle_AK47Manager
{
	scene "scenes/Manager/WorldHospital0504.vcd"  then any _SpotStuffResponse foo:0 0.01 //Big ass gun up here.
	scene "scenes/Manager/WorldHospital0505.vcd"  then any _SpotStuffResponse foo:0 0.01 //Check out this gun up here!
	scene "scenes/Manager/WorldHospital0510.vcd"  then any _SpotStuffResponse foo:0 0.01 //Man, check this gun out!
}
Rule SurvivorSpottedRifle_AK47Manager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsRifle_AK47 IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedRifle_AK47Manager
}

Rule SurvivorSpottedRifle_AK47AutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotWeapons IsNotSaidSpot IsRifle_AK47 IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedRifle_AK47Manager
}

Rule SurvivorSpottedSecondPistolManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsSecondPistol IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Rule SurvivorSpottedShotgun_ChromeManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsShotgun_Chrome IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedWeaponManager
}

Response SurvivorSpottedSMGManager
{
	scene "scenes/Manager/SpotWeapons01.vcd"  then any _SpotStuffResponse foo:0 0.01 //Weapons here!
	scene "scenes/Manager/TakeSubMachineGun02.vcd"  then any _SpotStuffResponse foo:0 0.01 //A machinegun. [to self]
}
Rule SurvivorSpottedSMGManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsSMG IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedSMGManager
}

Response SurvivorSpottedRifle_desertManager
{
	scene "scenes/Manager/WorldHospital0504.vcd"  then any _SpotStuffResponse foo:0 0.01 //Big ass gun up here.
	scene "scenes/Manager/WorldHospital0505.vcd"  then any _SpotStuffResponse foo:0 0.01 //Check out this gun up here!
	scene "scenes/Manager/WorldHospital0510.vcd"  then any _SpotStuffResponse foo:0 0.01 //Man, check this gun out!
}
Rule SurvivorSpottedRifle_desertManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsRifle_desert IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedRifle_desertManager
}

Rule SurvivorSpottedRifle_desertAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto IsNotInSafeSpot IsNotAlone IsNotSaidSpotWeapons IsNotSaidSpot IsRifle_desert IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedRifle_desertManager
}

Response SurvivorSpottedShotgun_spasManager
{
	scene "scenes/Manager/WorldHospital0504.vcd"  then any _SpotStuffResponse foo:0 0.01 //Big ass gun up here.
	scene "scenes/Manager/WorldHospital0505.vcd"  then any _SpotStuffResponse foo:0 0.01 //Check out this gun up here!
	scene "scenes/Manager/WorldHospital0510.vcd"  then any _SpotStuffResponse foo:0 0.01 //Man, check this gun out!
}
Rule SurvivorSpottedShotgun_spasManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsShotgun_spas IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedShotgun_spasManager
}

Rule SurvivorSpottedShotgun_spasAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto  IsNotInSafeSpot IsNotAlone IsNotSaidSpotWeapons IsNotSaidSpot IsShotgun_spas IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedShotgun_spasManager
}

Response SurvivorSpottedSMG_silencedManager
{
	scene "scenes/Manager/SpotWeapons01.vcd"  then any _SpotStuffResponse foo:0 0.01 //Weapons here!
	scene "scenes/Manager/TakeSubMachineGun02.vcd"  then any _SpotStuffResponse foo:0 0.01 //A machinegun. [to self]
}
Rule SurvivorSpottedSMG_silencedManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsSmg_silenced IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedSMG_silencedManager
}

Response SurvivorSpottedSniperRifleManager
{
	scene "scenes/Manager/WorldHospital0504.vcd"  then any _SpotStuffResponse foo:0 0.01 //Big ass gun up here.
	scene "scenes/Manager/WorldHospital0505.vcd"  then any _SpotStuffResponse foo:0 0.01 //Check out this gun up here!
	scene "scenes/Manager/WorldHospital0510.vcd"  then any _SpotStuffResponse foo:0 0.01 //Man, check this gun out!
}
Rule SurvivorSpottedSniperRifleManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsNotSmartLookAuto IsSniper_military IsWorldTalkManager
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedSniperRifleManager
}

Rule SurvivorSpottedSniperRifleAutoManager
{
	criteria ConceptPlayerSpotWeapon IsNotCoughing IsManager IsTalk IsTalkManager IsSmartLookAuto  IsNotInSafeSpot IsNotAlone IsNotSaidSpotWeapons IsNotSaidSpot IsSniper_military IsWorldTalkManager _auto_NotNoSpotting IsNotSpeakingWeight0
	ApplyContext "SaidSpotWeapons:1:5,SaidSpot:1:20"
	applycontexttoworld
	Response SurvivorSpottedSniperRifleManager
}


//--------------------------------------------------------------------------------------------------------------
// Manager - Modified Talker
//--------------------------------------------------------------------------------------------------------------
Response PlayerChainSawUsedManager
{
	scene "scenes/Manager/Hurrah10.vcd"  //Nothing can stop us, do you hear me? Nothing can stop us!
	scene "scenes/Manager/PositiveNoise03.vcd"  //[Improv non-verbal pleasure & interest sounds]
	scene "scenes/Manager/Taunt05.vcd"  //Oh yeah, who's your momma, who's your daddy
}
Rule PlayerChainSawUsedManager
{
	criteria ConceptChainsawUsed IsNotSaidChainSawUsed IsManager IsTalk IsTalkManager Intensity100 IsWorldTalkManager
	ApplyContext "SaidChainSawUsed:1:90"
	applycontexttoworld
	Response PlayerChainSawUsedManager
}

